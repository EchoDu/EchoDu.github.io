[{"title":"Markdown学习记录","url":"/2021/10/19/Markdown%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/","content":"Markdown是一种轻量级标记语言，允许人们使用易读易写的纯文本格式编写文档。\nMarkdown编写的文档后缀为.md或.markdown\n\n使用=的一级标题使用-的二级标题使用#的一级标题（总共六级）换行：两个以上空格+回车，或者一个空行\n用”*“斜体文本\n用”_“斜体文本\n用”**“粗体文本\n用”__“粗体文本\n用”___“粗斜体文本\n分隔线：\n***\n\n* * *\n\n- - -\n\n-------删除线”~~“\n下划线用HTML标签u实现\n[^脚注用[^文字]实现]\n无序列表用*或+或-：\n\n第一项\n第二项\n第三项\n\n有序列表用数字加.：\n1.第一项2.第二项3.第三项\n区块引用”&gt;”：\n\n这句话是引用自……\n\n代码：\n一个函数或片段用反引号包起来：console.log() 函数\n三个反引号包裹一段代码并可以指定语言：\nfunction()&#123;\tconsole.log(&#x27;Hello World&#x27;);&#125;\n\n链接：中括号链接名称，小括号链接地址，或者尖括号链接地址\n百度地址\nhttps://www.baidu.com\n图片：![alt 属性文本](图片地址 ”可选标题“)\n\n表格：用|分隔单元格，用-分隔表头和其他行\n\n\n\n表头\n表头\n\n\n\n单元格\n单元格\n\n\n单元格\n单元格\n\n\n","categories":["标记语言"],"tags":["Markdown"]},{"title":"华为机试001_输入输出","url":"/2021/10/19/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95001-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/","content":"牛客网上华为机试的界面什么都没有，直接给个题目和输入输出描述，一开始不知道怎么下手，所以在掘金上搜了相关文章，总算是知道怎么做题了。\n\nJavaScript V8输入输出单行输入V8引擎用readline()接收输入的每一行，一行的字符串不能超过1024个，否则会报错。\n多行输入一个readline()接收一行，有几行输入就要写几个readline()，固定行数输入可以用for循环，不固定行数输入可以用while循环。\n输出输出用print()或console.log()都可以。\nJavaScript Node单行输入const readline = require(&#x27;readline&#x27;);const rl = readline.createInterface(&#123;\tinput: process.stdin,\toutput: process.stdout&#125;);rl.on(&#x27;line&#x27;, function(data)&#123;\tvar result = data.split(&#x27; &#x27;); //获取第一行的内容，存为数组\tconsole.log(result);&#125;)","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ1","url":"/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ1/","content":"字符串最后一个单词的长度计算字符串最后一个单词的长度，单词以空格隔开，字符串长度小于5000（字符串末尾不以空格为结尾）\n输入：一行字符串，非空，长度小于5000\n输出：一个整数，表示输入字符串最后一个单词的长度\n\n思路1：把字符串的每个单词转成数组的一个成员，再看最后一个成员的length。\nvar str = readline();function checkLen(str)&#123;\tvar arr = str.split(&#x27; &#x27;);\tvar arrLen = arr.length;\treturn arr[arrLen - 1].length;&#125;console.log(checkLen(str));\n\n通过：运行时间12ms（超过47.20%用JavaScript_V8提交的代码），占用内存5128KB（超过22.23%用JavaScript_V8提交的代码）\n\n思路2：字符串也有length，从最后一个字母开始累加，直到遇到空格就停止，得到最后一个字符串的长度。\nvar str = readline();var len = str.length; //得到字符串长度var wordLen = 0; //最后一个单词的长度从0开始for(let i = len-1; i &gt;= 0; i--)&#123;    if(str[i] !== &#x27; &#x27;)&#123;        wordLen += 1; //从最后一个字母开始，不为空格就加1    &#125; else&#123;        break; //遇到空格，最后一个单词已结束    &#125;&#125;console.log(wordLen);\n\n通过：运行时间11ms（超过58.78%用JavaScript_V8提交的代码），占用内存5084KB（超过50.26%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ10","url":"/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ10/","content":"字符个数统计一个函数，计算字符串中含有的不同字符的个数。字符在ASCII码0~127范围内。\n输入：一行没有空格的字符串，例：abc\n输出：不同字符个数，3\n\n思路：利用去重中的一种思路，用数组的indexOf方法或includes方法。\nvar arr = readline().split(&#x27;&#x27;);function computeTypes(arr)&#123;    var count = [];    for(let i=0;i&lt;arr.length;i++)&#123;        var cur = arr[i];        if(!count.includes(cur))&#123;            count.push(cur);        &#125;    &#125;    return count.length;&#125;console.log(computeTypes(arr));\n\n通过：运行时间8ms（超过93.10%用JavaScript_V8提交的代码），占用内存5040KB（超过77.98%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ11","url":"/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ11/","content":"数字颠倒输入一个整数，将它以字符串的形式逆序输出，数字含有0则输出也有0\n输入：整数，例：1516000\n输出：0006151\n\n思路：JavaScript数组有专门的reverse方法\nfunction reverseNum(str)&#123;    str = str.split(&#x27;&#x27;).reverse();    console.log(str.join(&#x27;,&#x27;).replace(/,/g, &#x27;&#x27;));&#125;var line;while(line = readline())&#123;    reverseNum(line);&#125;\n\n通过：运行时间13ms（超过40.46% 用JavaScript_V8提交的代码），占用内存5228KB（超过22.27%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ12","url":"/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ12/","content":"字符串反转接受一个只含小写字母的字符串，输出反转后的字符串\n输入：abcd\n输出：dcba\n\n思路：还是利用数组的reverse方法，先用字符串的split方法把字符串每个字母放到一个数组中。\nvar str = readline();console.log(str.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;));\n\n通过：运行时间11ms（超过64.72% 用JavaScript_V8提交的代码），占用内存5312KB（超过16.18%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ13","url":"/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ13/","content":"句子逆序将一个英语句子以单词为单位逆序排放。单词之间用一个空格隔开，句子中除了英文字母外不包含其他字符。\n输入：I am a boy\n输出：boy a am I\n\n思路：用字符串的split将各个单词放到数组中，用数组的reverse方法逆序，再用数组的join方法将数组的元素用空格连接成一个字符串。\nvar str = readline();console.log(str.split(&#x27; &#x27;).reverse().join(&#x27; &#x27;));\n\n通过：运行时间11ms（超过64.97% 用JavaScript_V8提交的代码），占用内存5132KB（超过61.44%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ14","url":"/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ14/","content":"字符串排序给定n个字符串，按字典序排列。\n输入：\n9captocatcardtwotooupboatboot\n\n输出：\nboatbootcapcardcattotootwoup\n\n思路：把每个单词放到数组里，用数组的sort方法排序，JavaScript的sort方法默认就是用字典序。\nvar line;var arr = [];var count = parseInt(readline());while(line = readline())&#123;    arr.push(line);&#125;arr.sort();for(let i=0;i&lt;arr.length;i++)&#123;    console.log(arr[i]);&#125;\n\n通过：运行时间17ms（超过30.33%用JavaScript_V8提交的代码），占用内存6020KB（超过39.16%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ15","url":"/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ15/","content":"求int型数据在内存中存储时1的个数输入一个int型正整数，计算出该数在内存中存储时1的个数。\n输入：例：5\n输出：2\n\n思路：JavaScript的数字有专门的方法Number.prototype.toString()，用num.toString(radix)得到数字对象的字符串表示形式，radix指定数字到字符串的转换基数（2~36）。\nvar num = parseInt(readline());function countOne(num)&#123;    var str = num.toString(2);    var count = 0;    for(i in str)&#123;        if(parseInt(str[i]) === 1)&#123;            ++count;        &#125;    &#125;    return count;&#125;console.log(countOne(num));\n\n通过：运行时间12ms（超过44.63%用JavaScript_V8提交的代码），占用内存5152KB（超过19.86%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ16","url":"/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ16/","content":"购物单动态规划，知识盲点，先放着o(╥﹏╥)o\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ17","url":"/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ17/","content":"坐标移动一个坐标计算工具，A：向左移动，D：向右移动，W：向上移动，S：向下移动。从(0,0)点开始移动，从输入字符串读取坐标，输出最终坐标。\n输入：合法坐标：A/D/W/S加上数字（两位以内），坐标之间以;分隔。非法坐标需要丢弃。\nA10;S20;W10;D30;X;A1A;B10A11;;A10;\n输出：\n10,-10\n\n思路：把输入用split(&#39;;&#39;)放到数组中，然后用正则表达式test过滤非法坐标，再根据合法坐标计算。\nvar line = readline();var operate = line.split(&#x27;;&#x27;);var reg = /^[A|D|W|S]&#123;1&#125;[1-9][0-9]?$/;var rightOpe = [];for(i in operate)&#123;    if(reg.test(operate[i]))&#123;        rightOpe.push(operate[i]);    &#125;&#125;function move(arr)&#123;    var start = [0,0];    for(i in arr)&#123;        switch(arr[i][0])&#123;            case &#x27;A&#x27;:                start[0] -= parseInt(arr[i].substring(1));                break;            case &#x27;D&#x27;:                start[0] += parseInt(arr[i].substring(1));                break;            case &#x27;S&#x27;:                start[1] -= parseInt(arr[i].substring(1));                break;            case &#x27;W&#x27;:                start[1] += parseInt(arr[i].substring(1));                break;        &#125;    &#125;    return start;&#125;console.log(move(rightOpe));\n\n通过：运行时间13ms（超过45.67% 用JavaScript_V8提交的代码），占用内存5444KB（超过20.50%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ2","url":"/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ2/","content":"计算字符个数一个程序，接受一个字符串（字母、数字和空格组成）和一个字母，输出字符串中该字母出现的次数，不区分大小写，长度小于500。\n输入：第一行输入一个字符串，第二行输入一个字母\n输出：字符串中含有该字母的个数\n\n思路1：直接循环一遍字符串，字符串中有该字母就加1。因为不区分大小写，所以先把字符串和字母都变成大写或小写。\nvar str = readline().toLowerCase();var letter = readline().toLowerCase();function computeCount(str, letter)&#123;    var len = str.length;    var count = 0;    for(let i = 0; i &lt; len; i++)&#123;        if(str[i] === letter)&#123;            count += 1;        &#125;    &#125;    return count;&#125;console.log(computeCount(str, letter));\n\n通过：运行时间13ms（超过37.75%用JavaScript_V8提交的代码），占用内存5044KB（超过66.35%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ3","url":"/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ3/","content":"明明的随机数N个1到1000之间的随机整数（N ≤ 1000），去掉重复的数字，然后从小到大排序。\n输入：多行数据，每行一个随机整数，例：\n3221\n\n第一行的3表示N=3，生成了三个随机数即2，2，1\n输出：多行数据，去重后从小到大每行一个数字\n\n思路：JavaScript排列很简单，数组有专门用于排列的sort()函数，重点在去重，JavaScript的去重也是面试的高频题目，所以看了一些网上的总结，自己都敲了一遍。\nvar line;var arr = [];var newArr;var count = 0;function distinct(arr)&#123;    var newArr = arr.sort((a,b)=&gt;&#123;        return a - b;    &#125;);    for(let i=0;i&lt;newArr.length;i++)&#123;        if(newArr[i] === newArr[i+1])&#123;            newArr.splice(i+1,1);            i--;        &#125;    &#125;    return newArr;&#125;while(line = readline())&#123;    if(count == 0)&#123;        count = parseInt(line);        for(let i = 0; i &lt; count; i++)&#123;            arr.push(parseInt(readline()))        &#125;               newArr = distinct(arr);        for(let i=0;i&lt;newArr.length;i++)&#123;            console.log(newArr[i]);        &#125;    &#125;    count = 0;    arr = [];&#125;\n\n通过：运行时间16ms（超过29.78%用JavaScript_V8提交的代码），占用内存5388KB（超过22.77%用JavaScript_V8提交的代码）\n\n1.用ES6的新数据结构SetSet类似于数组，但是成员的值不允许重复，可以用new Set()生成一个Set数据结构。\n可以接收一个数组作参数生成Set数据结构new Set(array)，然后用...三点运算符把Set转换成数组，就能将数组去重了（数组换成字符串也可以用）。\nfunction distinct(arr)&#123;\treturn [...new Set(arr)];&#125;\n\n或者\nfunction distinct(arr)&#123;\treturn Array.from(new Set(arr));&#125;\n\n2.Object键值对利用对象属性名不能重复的特性，创建一个空对象，把数组每一项放进去当属性名，新的一项放进去时检查，如果该属性名已存在，说明重复了，就把数组里该项删除。\nfunction distinct(arr)&#123;\tvar obj = &#123;&#125;;\tfor(let i=0;i&lt;arr.length;i++)&#123;\t\tlet cur = arr[i];\t\tif(obj[cur])&#123; //对象中已有该属性\t\t\tarr[i] = arr[arr.length - 1]; // 开始用的splice函数，结果会造成数组塌陷\t\t\tarr.length--; // 所以把最后一项给当前项，然后删除最后一项\t\t\ti--; //该项换了新值，又要检查一次\t\t\tcontinue;\t\t&#125;\t\tobj[cur] = cur;\t&#125;\treturn arr;\t&#125;\n\n3.用indexOf()函数indexOf()返回在数组中找到的一个给定元素的第一个索引，不存在则返回-1。创建一个新的空数组，检查原数组的每一项在新数组中的索引，索引为-1即不存在，则把该项放入新数组。\nfunction distinct(arr)&#123;\tvar newArr = [];\tfor(let i=0;i&lt;arr.length;i++)&#123;\t\tvar cur = arr[i];\t\tif(newArr.indexOf(cur) == -1)&#123;\t\t\tnewArr.push(cur);\t\t&#125;\t&#125;\treturn newArr;\t\t\t&#125;\n\nindexOf()可以结合filter使用。\nArray.prototype.filter(callback(element, index, array))创建一个新数组，新数组的成员是原数组成员中通过了测试函数callback的部分。\nfunction distinct(arr)&#123;\treturn arr.filter(function(ele, index, array)&#123;\t\treturn arr.indexOf(ele) === index;\t&#125;);&#125;\n\n4.用sort()方法先用sort()给数组排序，然后比较每个数字和后面相邻的成员是否相等，相等则删除后一个元素。\nfunction distinct(arr)&#123;\tvar newArr = arr.sort((a,b)=&gt;&#123;\t\treturn a-b;\t&#125;);\tfor(let i=0;i&lt;newArr.length;i++)&#123;\t\tif(newArr[i] === newArr[i+1])&#123;\t\t\tnewArr.splice(i+1,1);\t\t\ti--;\t\t&#125;\t&#125;\treturn newArr;&#125;\n\n5.用includes方法Array.prototype.includes()判断一个数组是否包含一个指定的值，包含返回true，否则返回false。\nfunction distinct(arr)&#123;\tvar newArr = [];\tvar len = arr.length;\tfor\t(let i=0;i&lt;len;i++)&#123;\t\tvar cur = arr[i];\t\tif(!newArr.includes(cur))&#123;\t\tnewArr.push(arr[i]);\t\t&#125;\t&#125;\treturn newArr;&#125;\n\n6.双层循环用splice()把每个元素跟它后面的所有元素比较，有相等的就删除后面那个重复的。\nfunction distinct(arr)&#123;\tfor(let i=0;i&lt;arr.length;i++)&#123;\t\tfor(let j=i+1;j&lt;arr.length;j++)&#123;\t\t\tif(arr[i] === arr[j])&#123;\t\t\t\tarr.splice(j,1);\t\t\t\tj--;\t\t\t&#125;\t\t&#125;\t&#125;\treturn arr;&#125;\n\n7.用reduce()方法Array.prototype.reduce(callback(accumulator, currentValue, index, array), initialValue)\n对数组中的每个元素执行callback，将其结果汇总为单个返回值。\n结合了方法5的includes方法\nfunction distinct(arr)&#123;\treturn arr.reduce((prev, next)=&gt;&#123;\t\treturn prev.includes(next) ? prev : [...prev, next];\t&#125;, []);&#125;","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ4","url":"/2021/10/21/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ4/","content":"字符串分隔连续输入字符串（长度&lt;100），按长度为8拆分每个字符串并输出。长度不是9整倍数的字符串后面补数字0，空字符串不处理。\n输入：\nabc123456789\n\n输出：\nabc000001234567890000000\n\n思路：先把输入按空格分成数组里的一个个元素，然后看每个元素的长度，小于8就补0，大于8就拆分（用String.prototype.slice()）\nvar arr = [];var line;while(line = readline())&#123;    arr.push(line);&#125;function divide(arr)&#123;    var newArr = [];    for(let i=0;i&lt;arr.length;i++)&#123;        var cur = arr[i];        var len = cur.length;        var times = parseInt(len / 8);        var left = len % 8;        if(len === 8)&#123;            newArr.push(cur);        &#125; else if(len &lt; 8)&#123;            for(let j=0;j&lt;(8-len);j++)&#123;                cur += &#x27;0&#x27;;            &#125;            newArr.push(cur);        &#125; else if(len &gt; 8)&#123;            for(let j=0;j&lt;times;j++)&#123;                newArr.push(cur.slice(j*8, (j+1)*8));            &#125;            if(left)&#123;                var last = cur.slice(8*times);                for(let j=0;j&lt;(8-left);j++)&#123;                    last += &#x27;0&#x27;;                &#125;                newArr.push(last);            &#125;        &#125;    &#125;    return newArr;&#125;var result = divide(arr);for(let i=0;i&lt;result.length;i++)&#123;    console.log(result[i]);&#125;\n\n通过：运行时间12ms（超过51.09%用JavaScript_V8提交的代码），占用内存5192KB（超过30.98%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ5","url":"/2021/10/21/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ5/","content":"进制转换写一个程序，接受一个十六进制数，输出该数的十进制表示\n输入：一个十六进制的数值字符串\n输出：数值的十进制表示\n\n思路：这个题对JavaScript来说真的很简单，因为有一个专门的parseInt(string, radix)解析一个指定基数的字符串，返回其十进制表示。\nvar arr = [];var line;while(line = readline())&#123;    arr.push(line);&#125;for(let i=0;i&lt;arr.length;i++)&#123;    console.log(parseInt(arr[i], 16));&#125;\n\n通过：运行时间14ms（超过25.67%用JavaScript_V8提交的代码），占用内存5000KB（超过81.94%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ6","url":"/2021/10/21/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ6/","content":"质数因子输入一个正整数，按从小到到的顺序输出它所有质因子（重复的也要列举），以空格隔开，最后一个数后面也要有空格。\n质因子：能整除给定正整数的质数。\n输入：一个long型整数，例：180\n输出：2 2 3 3 5 \n\n思路：给定正整数num，给定最小质因子prime=2，先一直除以2，能被2整除则2是其质因子，不能被2整除了++prime即prime=3了，再一直除以3……重复，直到prime² &gt; num；最后如果不为1，则最后剩下的一个质数也是其质因子。因为要求最后一个数后面也有空格，所以在存放质因子的数组最后加个空元素。\n显示数组console.log(arr)是2,2,3,3,5的数组格式，所以用arr.join(&#39;,&#39;)把它转成’2,2,3,3,5’字符串格式，然后用字符串的replace(/,/g, &#39; &#39;)把逗号换成空格。\nvar num = parseInt(readline());var arr = [];function computePrime(num)&#123;    var prime = 2;    var tep = num;    while(prime &lt; tep &amp;&amp; prime*prime &lt;= tep)&#123;        while(num % prime === 0)&#123;            arr.push(prime);            num = num / prime;        &#125;        ++prime;    &#125;    if(num !== 1)&#123;        arr.push(num);    &#125;    arr.push(&#x27;,&#x27;);    return arr;&#125;console.log(computePrime(num).join(&#x27;,&#x27;).replace(/,/g, &#x27; &#x27;));\n\n通过：运行时间14ms（超过49.17%用JavaScript_V8提交的代码），占用内存5480KB（超过49.17%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ7","url":"/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ7/","content":"取近似值一个程序，接受一个正浮点数值，输出该数值的近似整数值，遵循四舍五入。\n输入：正浮点数值，例：5.5\n输出：近似整数值，6\n\n思路：JavaScript有好几个转换数字的函数：\n全局函数parseFloat解析参数返回其浮点数；全局函数parseInt解析一个字符串，返回指定基数的十进制整数；Number.prototype.toFixed用定点表示法格式化一个数值；Math.round返回一个数字四舍五入后最接近的整数；Math.floor向下取整；Math.ceil向上取整。\nconsole.log(Math.round(parseFloat(readline())));\n\n通过：运行时间12ms（超过43.52%用JavaScript_V8提交的代码），占用内存5080KB（超过47.49%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ8","url":"/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ8/","content":"合并表记录数据表记录包含表索引和数值（正整数），将相同索引的数值进行求和，然后按key值升序进行输出。\n输入：键值对个数，然后是成对的键值对\n40 10 21 23 4\n\n输出：\n0 31 23 4\n\n思路：接收输入到数组arr中，得到arr为[‘4’,’0 1’,’0 2’,’1 2’,’3 4’]；然后根据arr[0]将后面几个输入按键、值的分类分别放入keyArr[0,0,1,3]，valueArr[1,2,2,4]；比较keyArr每个元素（索引值i）与后面的元素（索引值j），若相等让valueArr[i] = valueArr[i] + valueArr[j]，然后删除keyArr[j]；把keyArr和valueArr的值按索引顺序配对，放入一个对象obj中；把obj的键数组按大小排序，然后按排序后的顺序逐个输出键对应的值。\nvar arr = [];var line;while(line = readline())&#123;    arr.push(line);&#125; //得到输入arr[&#x27;4&#x27;,&#x27;0 1&#x27;,&#x27;0 2&#x27;,&#x27;1 2&#x27;,&#x27;3 4&#x27;]var count = parseInt(arr[0]);var keyArr = [];var valueArr = [];for(let i=1;i&lt;=count;i++)&#123;\t//把键值对如&#x27;0 1&#x27;按空格分隔生成数组[&#x27;0&#x27;,&#x27;1&#x27;]，转成数字0、1存入相应数组    keyArr.push(parseInt(arr[i].split(&#x27; &#x27;)[0]));    valueArr.push(parseInt(arr[i].split(&#x27; &#x27;)[1]));&#125;for(let i=0;i&lt;keyArr.length;i++)&#123;    for(let j=i+1;j&lt;keyArr.length;j++)&#123;        if(keyArr[i] === keyArr[j])&#123;            valueArr[i] = valueArr[i] + valueArr[j];            keyArr.splice(j,1);            valueArr.splice(j,1);            j--        &#125;    &#125;&#125;var obj = &#123;&#125;;for(let i=0;i&lt;keyArr.length;i++)&#123;    obj[keyArr[i]] = valueArr[i];&#125;var sortedKey = Object.keys(obj).sort((a,b)=&gt;&#123;return parseInt(a)-parseInt(b);&#125;);for(let i=0;i&lt;sortedKey.length;i++)&#123;    console.log(sortedKey[i] + &#x27; &#x27; + obj[sortedKey[i]]);&#125;\n\n通过：运行时间10ms（超过78.42%用JavaScript_V8提交的代码），占用内存5424KB（超过21.69%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]},{"title":"华为机试HJ9","url":"/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ9/","content":"提取不重复的整数输入一个int型整数，按从右到左的阅读顺序，返回一个不含重复数字的新的整数（保证输入的整数最后一位不是0）\n输入：例：9876673\n输出：37689\n\n思路：输入readline()得到的都是字符串，用字符串方法split(&#39;&#39;)得到数组[‘9’,’8’,’7’,’6’,’6’,’7’,’3’];用数组方法reverse颠倒顺序，得到数组[‘3’,’7’,’6’,’6’,’7’,’8’,’9’]；用parseInt把数组元素都转换成数字，然后用去重。\nvar inPut = readline();function abstractNum(inPut)&#123;    var arr = inPut.split(&#x27;&#x27;).reverse();    for(let i=0;i&lt;arr.length;i++)&#123;        arr[i] = parseInt(arr[i]);    &#125;    arr = [...new Set(arr)];    return arr;&#125;var arr = abstractNum(inPut);console.log(arr.join(&#x27;,&#x27;).replace(/,/g, &#x27;&#x27;));\n\n通过：运行时间11ms（超过67.14%用JavaScript_V8提交的代码），占用内存5184KB（超过41.66%用JavaScript_V8提交的代码）\n","categories":["面试刷题"],"tags":["华为机试"]}]