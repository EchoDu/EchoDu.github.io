<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-21T07:06:28.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Du</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>华为机试HJ3</title>
    <link href="http://example.com/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ3/"/>
    <id>http://example.com/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ3/</id>
    <published>2021-10-20T10:53:21.000Z</published>
    <updated>2021-10-21T07:06:28.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="明明的随机数"><a href="#明明的随机数" class="headerlink" title="明明的随机数"></a>明明的随机数</h3><p>N个1到1000之间的随机整数（N ≤ 1000），去掉重复的数字，然后从小到大排序。</p><p>输入：多行数据，每行一个随机整数，例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>第一行的3表示N=3，生成了三个随机数即2，2，1</p><p>输出：多行数据，去重后从小到大每行一个数字</p><hr><p>思路：JavaScript排列很简单，数组有专门用于排列的<code>sort()</code>函数，重点在去重，JavaScript的去重也是面试的高频题目，所以看了一些网上的总结，自己都敲了一遍。</p><hr><h4 id="1-用ES6的新数据结构Set"><a href="#1-用ES6的新数据结构Set" class="headerlink" title="1.用ES6的新数据结构Set"></a>1.用ES6的新数据结构Set</h4><p>Set类似于数组，但是成员的值不允许重复，可以用<code>new Set()</code>生成一个Set数据结构。</p><p>可以接收一个数组作参数生成Set数据结构<code>new Set(array)</code>，然后用<code>...</code>三点运算符把Set转换成数组，就能将数组去重了（数组换成字符串也可以用）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function distinct(arr)&#123;</span><br><span class="line">return [...new Set(arr)];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function distinct(arr)&#123;</span><br><span class="line">return Array.from(new Set(arr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-Object键值对"><a href="#2-Object键值对" class="headerlink" title="2.Object键值对"></a>2.Object键值对</h4><p>利用对象属性名不能重复的特性，创建一个空对象，把数组每一项放进去当属性名，新的一项放进去时检查，如果该属性名已存在，说明重复了，就把数组里该项删除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function distinct(arr)&#123;</span><br><span class="line">var obj = &#123;&#125;;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">let cur = arr[i];</span><br><span class="line">if(obj[cur])&#123; //对象中已有该属性</span><br><span class="line">arr[i] = arr[arr.length - 1]; // 开始用的splice函数，结果会造成数组塌陷</span><br><span class="line">arr.length--; // 所以把最后一项给当前项，然后删除最后一项</span><br><span class="line">i--; //该项换了新值，又要检查一次</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">obj[cur] = cur;</span><br><span class="line">&#125;</span><br><span class="line">return arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-用indexOf-函数"><a href="#3-用indexOf-函数" class="headerlink" title="3.用indexOf()函数"></a>3.用<code>indexOf()</code>函数</h4><p><code>indexOf()</code>返回在数组中找到的一个给定元素的第一个索引，不存在则返回-1。创建一个新的空数组，检查原数组的每一项在新数组中的索引，索引为-1即不存在，则把该项放入新数组。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function distinct(arr)&#123;</span><br><span class="line">var newArr = [];</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">var cur = arr[i];</span><br><span class="line">if(newArr.indexOf(cur) == -1)&#123;</span><br><span class="line">newArr.push(cur);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return newArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;明明的随机数&quot;&gt;&lt;a href=&quot;#明明的随机数&quot; class=&quot;headerlink&quot; title=&quot;明明的随机数&quot;&gt;&lt;/a&gt;明明的随机数&lt;/h3&gt;&lt;p&gt;N个1到1000之间的随机整数（N ≤ 1000），去掉重复的数字，然后从小到大排序。&lt;/p&gt;
&lt;p&gt;输入：</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ2</title>
    <link href="http://example.com/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ2/"/>
    <id>http://example.com/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ2/</id>
    <published>2021-10-20T07:42:18.000Z</published>
    <updated>2021-10-20T08:12:07.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="计算字符个数"><a href="#计算字符个数" class="headerlink" title="计算字符个数"></a>计算字符个数</h3><p>一个程序，接受一个字符串（字母、数字和空格组成）和一个字母，输出字符串中该字母出现的次数，不区分大小写，长度小于500。</p><p>输入：第一行输入一个字符串，第二行输入一个字母</p><p>输出：字符串中含有该字母的个数</p><hr><p>思路1：直接循环一遍字符串，字符串中有该字母就加1。因为不区分大小写，所以先把字符串和字母都变成大写或小写。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var str = readline().toLowerCase();</span><br><span class="line">var letter = readline().toLowerCase();</span><br><span class="line">function computeCount(str, letter)&#123;</span><br><span class="line">    var len = str.length;</span><br><span class="line">    var count = 0;</span><br><span class="line">    for(let i = 0; i &lt; len; i++)&#123;</span><br><span class="line">        if(str[i] === letter)&#123;</span><br><span class="line">            count += 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return count;</span><br><span class="line">&#125;</span><br><span class="line">console.log(computeCount(str, letter));</span><br></pre></td></tr></table></figure><p>通过：运行时间13ms（超过37.75%用JavaScript_V8提交的代码），占用内存5044KB（超过66.35%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;计算字符个数&quot;&gt;&lt;a href=&quot;#计算字符个数&quot; class=&quot;headerlink&quot; title=&quot;计算字符个数&quot;&gt;&lt;/a&gt;计算字符个数&lt;/h3&gt;&lt;p&gt;一个程序，接受一个字符串（字母、数字和空格组成）和一个字母，输出字符串中该字母出现的次数，不区分大小写，长度</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ1</title>
    <link href="http://example.com/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ1/"/>
    <id>http://example.com/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ1/</id>
    <published>2021-10-20T06:24:32.000Z</published>
    <updated>2021-10-20T07:35:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符串最后一个单词的长度"><a href="#字符串最后一个单词的长度" class="headerlink" title="字符串最后一个单词的长度"></a>字符串最后一个单词的长度</h3><p>计算字符串最后一个单词的长度，单词以空格隔开，字符串长度小于5000（字符串末尾不以空格为结尾）</p><p>输入：一行字符串，非空，长度小于5000</p><p>输出：一个整数，表示输入字符串最后一个单词的长度</p><hr><p>思路1：把字符串的每个单词转成数组的一个成员，再看最后一个成员的length。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var str = readline();</span><br><span class="line">function checkLen(str)&#123;</span><br><span class="line">var arr = str.split(&#x27; &#x27;);</span><br><span class="line">var arrLen = arr.length;</span><br><span class="line">return arr[arrLen - 1].length;</span><br><span class="line">&#125;</span><br><span class="line">console.log(checkLen(str));</span><br></pre></td></tr></table></figure><p>通过：运行时间12ms（超过47.20%用JavaScript_V8提交的代码），占用内存5128KB（超过22.23%用JavaScript_V8提交的代码）</p><hr><p>思路2：字符串也有length，从最后一个字母开始累加，直到遇到空格就停止，得到最后一个字符串的长度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var str = readline();</span><br><span class="line">var len = str.length; //得到字符串长度</span><br><span class="line">var wordLen = 0; //最后一个单词的长度从0开始</span><br><span class="line">for(let i = len-1; i &gt;= 0; i--)&#123;</span><br><span class="line">    if(str[i] !== &#x27; &#x27;)&#123;</span><br><span class="line">        wordLen += 1; //从最后一个字母开始，不为空格就加1</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        break; //遇到空格，最后一个单词已结束</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">console.log(wordLen);</span><br></pre></td></tr></table></figure><p>通过：运行时间11ms（超过58.78%用JavaScript_V8提交的代码），占用内存5084KB（超过50.26%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;字符串最后一个单词的长度&quot;&gt;&lt;a href=&quot;#字符串最后一个单词的长度&quot; class=&quot;headerlink&quot; title=&quot;字符串最后一个单词的长度&quot;&gt;&lt;/a&gt;字符串最后一个单词的长度&lt;/h3&gt;&lt;p&gt;计算字符串最后一个单词的长度，单词以空格隔开，字符串长度小于</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试001_输入输出</title>
    <link href="http://example.com/2021/10/19/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95001-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/"/>
    <id>http://example.com/2021/10/19/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95001-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</id>
    <published>2021-10-19T11:55:03.000Z</published>
    <updated>2021-10-19T14:02:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>牛客网上华为机试的界面什么都没有，直接给个题目和输入输出描述，一开始不知道怎么下手，所以在掘金上搜了相关文章，总算是知道怎么做题了。</p><hr><h3 id="JavaScript-V8输入输出"><a href="#JavaScript-V8输入输出" class="headerlink" title="JavaScript V8输入输出"></a>JavaScript V8输入输出</h3><h4 id="单行输入"><a href="#单行输入" class="headerlink" title="单行输入"></a>单行输入</h4><p>V8引擎用<code>readline()</code>接收输入的每一行，一行的字符串不能超过1024个，否则会报错。</p><h4 id="多行输入"><a href="#多行输入" class="headerlink" title="多行输入"></a>多行输入</h4><p>一个<code>readline()</code>接收一行，有几行输入就要写几个<code>readline()</code>，固定行数输入可以用for循环，不固定行数输入可以用while循环。</p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>输出用<code>print()</code>或<code>console.log()</code>都可以。</p><h3 id="JavaScript-Node"><a href="#JavaScript-Node" class="headerlink" title="JavaScript Node"></a>JavaScript Node</h3><h4 id="单行输入-1"><a href="#单行输入-1" class="headerlink" title="单行输入"></a>单行输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const readline = require(&#x27;readline&#x27;);</span><br><span class="line">const rl = readline.createInterface(&#123;</span><br><span class="line">input: process.stdin,</span><br><span class="line">output: process.stdout</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rl.on(&#x27;line&#x27;, function(data)&#123;</span><br><span class="line">var result = data.split(&#x27; &#x27;); //获取第一行的内容，存为数组</span><br><span class="line">console.log(result);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;牛客网上华为机试的界面什么都没有，直接给个题目和输入输出描述，一开始不知道怎么下手，所以在掘金上搜了相关文章，总算是知道怎么做题了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;JavaScript-V8输入输出&quot;&gt;&lt;a href=&quot;#JavaScript-V8输入输出&quot; class</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Markdown学习记录</title>
    <link href="http://example.com/2021/10/19/Markdown%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/10/19/Markdown%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2021-10-19T08:50:37.000Z</published>
    <updated>2021-10-19T12:12:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown是一种轻量级标记语言，允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown编写的文档后缀为.md或.markdown</p><hr><h1 id="使用-的一级标题"><a href="#使用-的一级标题" class="headerlink" title="使用=的一级标题"></a>使用=的一级标题</h1><h2 id="使用-的二级标题"><a href="#使用-的二级标题" class="headerlink" title="使用-的二级标题"></a>使用-的二级标题</h2><h1 id="使用-的一级标题（总共六级）"><a href="#使用-的一级标题（总共六级）" class="headerlink" title="使用#的一级标题（总共六级）"></a>使用#的一级标题（总共六级）</h1><p>换行：两个以上空格+回车，或者一个空行</p><p><em>用”*“斜体文本</em></p><p><em>用”_“斜体文本</em></p><p><strong>用”**“粗体文本</strong></p><p><strong>用”__“粗体文本</strong></p><p><em><strong>用”___“粗斜体文本</strong></em></p><p>分隔线：</p><p>***</p><hr><p>* * *</p><hr><p>- - -</p><hr><h2 id=""><a href="#" class="headerlink" title="-------"></a>-------</h2><p><del>删除线”~~“</del></p><p><u>下划线用HTML标签u实现</u></p><p>[^脚注用[^文字]实现]</p><p>无序列表用*或+或-：</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>有序列表用数字加.：</p><p>1.第一项<br>2.第二项<br>3.第三项</p><p>区块引用”&gt;”：</p><blockquote><p>这句话是引用自……</p></blockquote><p>代码：</p><p>一个函数或片段用反引号包起来：<code>console.log()</code> 函数</p><p>三个反引号包裹一段代码并可以指定语言：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Hello World&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>链接：中括号链接名称，小括号链接地址，或者尖括号链接地址</p><p><a class="link"   href="https://www.baidu.com/" >百度地址<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://www.baidu.com/" >https://www.baidu.com<i class="fas fa-external-link-alt"></i></a></p><p>图片：![alt 属性文本](图片地址 ”可选标题“)</p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="头像 图片"></p><p>表格：用|分隔单元格，用-分隔表头和其他行</p><table><thead><tr><th align="center">表头</th><th align="center">表头</th></tr></thead><tbody><tr><td align="center">单元格</td><td align="center">单元格</td></tr><tr><td align="center">单元格</td><td align="center">单元格</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Markdown是一种轻量级标记语言，允许人们使用易读易写的纯文本格式编写文档。&lt;/p&gt;
&lt;p&gt;Markdown编写的文档后缀为.md或.markdown&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;使用-的一级标题&quot;&gt;&lt;a href=&quot;#使用-的一级标题&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="标记语言" scheme="http://example.com/categories/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="Markdown" scheme="http://example.com/tags/Markdown/"/>
    
  </entry>
  
</feed>
