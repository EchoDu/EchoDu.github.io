<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-27T05:44:52.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Du</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>华为机试HJ45</title>
    <link href="http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ45/"/>
    <id>http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ45/</id>
    <published>2021-10-27T03:07:32.000Z</published>
    <updated>2021-10-27T05:44:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="名字漂亮度"><a href="#名字漂亮度" class="headerlink" title="名字漂亮度"></a>名字漂亮度</h3><p>一个名字由字母组成（字母忽略大小写），每个字母有一个各不相同的”漂亮度“，范围在1-26。求每个名字最大可能的”漂亮度“。</p><p>输入：<br>整数N<br>N个名字</p><p>输出：每个名字可能的最大漂亮度</p><hr><p>思路：就是算出名字里各个字母出现的次数，次数最多的设为漂亮度26，其次设为25……这样漂亮度就会最大。<br>方法：用一个数组存名字里的每个字母，用一个对象存每个字母的个数{字母: 个数}，每次用<code>includes()</code>检查数组里是否已经有这个字母，没有就加进数组，并且在对象中加一个键值对；已经有该字母，则把对象中相应的键的值加1；<br>有<code>Object.values(obj)</code>得到对象的值的数组，按从大到小排列，然后计算漂亮度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function prettyDegree(names)&#123;</span><br><span class="line">    for(let k=0;k&lt;names.length;k++)&#123;</span><br><span class="line">        var degrees = 0;</span><br><span class="line">        var alphas = [];</span><br><span class="line">        var count = &#123;&#125;;</span><br><span class="line">        var strArr = names[k].split(&#x27;&#x27;);</span><br><span class="line">        for(let m=0;m&lt;strArr.length;m++)&#123;</span><br><span class="line">            if(!alphas.includes(strArr[m]))&#123;</span><br><span class="line">                alphas.push(strArr[m]);</span><br><span class="line">                count[strArr[m]] = 1;</span><br><span class="line">            &#125; else&#123;</span><br><span class="line">                count[strArr[m]] += 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        count = Object.values(count).sort((a,b)=&gt;&#123;return b-a;&#125;);</span><br><span class="line">        for(let n=0;n&lt;count.length;n++)&#123;</span><br><span class="line">            degrees += (26 - n) * (count[n]);</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(degrees);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    if(/[0-9]/.test(arr[i]))&#123;</span><br><span class="line">        var names = [];</span><br><span class="line">        for(let j=1;j&lt;=parseInt(arr[i]);j++)&#123;</span><br><span class="line">            names.push(arr[i+j]);</span><br><span class="line">        &#125;</span><br><span class="line">        prettyDegree(names);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间18ms（超过42.89%用JavaScript_V8提交的代码），占用内存5972KB（超过37.66%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;名字漂亮度&quot;&gt;&lt;a href=&quot;#名字漂亮度&quot; class=&quot;headerlink&quot; title=&quot;名字漂亮度&quot;&gt;&lt;/a&gt;名字漂亮度&lt;/h3&gt;&lt;p&gt;一个名字由字母组成（字母忽略大小写），每个字母有一个各不相同的”漂亮度“，范围在1-26。求每个名字最大可能的”漂亮</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ43</title>
    <link href="http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ43/"/>
    <id>http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ43/</id>
    <published>2021-10-27T02:34:54.000Z</published>
    <updated>2021-10-27T02:50:01.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="迷宫问题"><a href="#迷宫问题" class="headerlink" title="迷宫问题"></a>迷宫问题</h3><p>二维数组N行M列，只含0和1，0表示可以走，1表示墙壁。求从左上角(0,0)到右下角(N-1,M-1)的路径（测试数据保证唯一解）。</p><p>输入：<br>行数N 列数M<br>第一行数据（M个）<br>……<br>第N行数据（M个）</p><p>输出：<br>(0,0)<br>(1,0)<br>…<br>(4.4)</p><hr><p>因为题目保证了迷宫只有一条，所以用DFS深度优先搜索。</p><h4 id="DFS深度优先搜索"><a href="#DFS深度优先搜索" class="headerlink" title="DFS深度优先搜索"></a>DFS深度优先搜索</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;迷宫问题&quot;&gt;&lt;a href=&quot;#迷宫问题&quot; class=&quot;headerlink&quot; title=&quot;迷宫问题&quot;&gt;&lt;/a&gt;迷宫问题&lt;/h3&gt;&lt;p&gt;二维数组N行M列，只含0和1，0表示可以走，1表示墙壁。求从左上角(0,0)到右下角(N-1,M-1)的路径（测试数据保证唯</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ42</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ42/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ42/</id>
    <published>2021-10-26T13:33:56.000Z</published>
    <updated>2021-10-27T02:34:40.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学英语"><a href="#学英语" class="headerlink" title="学英语"></a>学英语</h3><p>将数字转成英文：<br>1.三位数字看成一个整体，后面再加一个计量单位。从右往左数，三位一单位；<br>2.每三位后计数单位：thousand，million，billion<br>3.百万以下、千以上的数：x thousand；10亿以下、百万以上的数：x billion x million x thousand；<br>4.百位和十位之间要加and，百位为0则省略。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;学英语&quot;&gt;&lt;a href=&quot;#学英语&quot; class=&quot;headerlink&quot; title=&quot;学英语&quot;&gt;&lt;/a&gt;学英语&lt;/h3&gt;&lt;p&gt;将数字转成英文：&lt;br&gt;1.三位数字看成一个整体，后面再加一个计量单位。从右往左数，三位一单位；&lt;br&gt;2.每三位后计数单位：tho</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试 搁置" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95-%E6%90%81%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ41</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ41/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ41/</id>
    <published>2021-10-26T11:51:24.000Z</published>
    <updated>2021-10-26T13:33:22.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="称砝码"><a href="#称砝码" class="headerlink" title="称砝码"></a>称砝码</h3><p>n个砝码，重量互不相等，分别为m1,m2…mn，每种重量的砝码个数分别为x1,x2…xn。求这些砝码可以称多少种不同的重量。</p><p>输入：<br>砝码数n（1-10）<br>每种砝码重量m1 m2 … mn（1-2000）<br>每种砝码数量x1 x2 … xn（1-6）</p><p>输出：可以称出的不同重量数的个数</p><hr><p>思路：搁置一下o(╥﹏╥)o</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;称砝码&quot;&gt;&lt;a href=&quot;#称砝码&quot; class=&quot;headerlink&quot; title=&quot;称砝码&quot;&gt;&lt;/a&gt;称砝码&lt;/h3&gt;&lt;p&gt;n个砝码，重量互不相等，分别为m1,m2…mn，每种重量的砝码个数分别为x1,x2…xn。求这些砝码可以称多少种不同的重量。&lt;/p&gt;</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ40</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ40/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ40/</id>
    <published>2021-10-26T11:26:53.000Z</published>
    <updated>2021-10-26T11:50:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="统计一行字符中几类字符的个数"><a href="#统计一行字符中几类字符的个数" class="headerlink" title="统计一行字符中几类字符的个数"></a>统计一行字符中几类字符的个数</h3><p>输入一行字符，分别统计出含英文字母、空格、数字和其他字符的个数</p><p>输入：一行字符串，可以有空格</p><p>输出：<br>英文字符个数<br>空格个数<br>数字个数<br>其他字符个数</p><hr><p>思路：用正则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function statistics(str)&#123;</span><br><span class="line">    var strArr = str.split(&#x27;&#x27;);</span><br><span class="line">    var alphaNum = 0, blankNum = 0, numberNum = 0, otherNum = 0;</span><br><span class="line">    for(let j=0;j&lt;strArr.length;j++)&#123;</span><br><span class="line">        if(/[a-zA-Z]/.test(strArr[j]))&#123;</span><br><span class="line">            ++alphaNum;</span><br><span class="line">        &#125; else if(/[ ]/.test(strArr[j]))&#123;</span><br><span class="line">            ++blankNum;</span><br><span class="line">        &#125; else if(/[0-9]/.test(strArr[j]))&#123;</span><br><span class="line">            ++numberNum;</span><br><span class="line">        &#125; else&#123;</span><br><span class="line">            ++otherNum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(alphaNum);</span><br><span class="line">    console.log(blankNum);</span><br><span class="line">    console.log(numberNum);</span><br><span class="line">    console.log(otherNum);</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    statistics(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间11ms（超过58.61% 用JavaScript_V8提交的代码），占用内存5060KB（超过76.46%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;统计一行字符中几类字符的个数&quot;&gt;&lt;a href=&quot;#统计一行字符中几类字符的个数&quot; class=&quot;headerlink&quot; title=&quot;统计一行字符中几类字符的个数&quot;&gt;&lt;/a&gt;统计一行字符中几类字符的个数&lt;/h3&gt;&lt;p&gt;输入一行字符，分别统计出含英文字母、空格、数</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ39</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ39/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ39/</id>
    <published>2021-10-26T07:57:44.000Z</published>
    <updated>2021-10-26T11:25:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="判断两个IP是否属于同一子网"><a href="#判断两个IP是否属于同一子网" class="headerlink" title="判断两个IP是否属于同一子网"></a>判断两个IP是否属于同一子网</h3><p>子网掩码与IP地址进行与操作，再转为十进制，结果一样的话，说明两个IP地址在同一个子网中。<br>有效掩码与IP：4段，每段在0-255之间；掩码的二进制前缀为网络号，全为1，后缀为主机号，全为0。</p><p>输入：第一行子网掩码，第二、三行是两个IP地址</p><p>输出：子网掩码或IP地址非法则输出1，两个IP属于同一子网络输出0，两个IP不属于同一子网络输出2</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>题目长，过程不难，但是数据处理遇到了没找到的麻烦，不浪费时间了，搁置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;判断两个IP是否属于同一子网&quot;&gt;&lt;a href=&quot;#判断两个IP是否属于同一子网&quot; class=&quot;headerlink&quot; title=&quot;判断两个IP是否属于同一子网&quot;&gt;&lt;/a&gt;判断两个IP是否属于同一子网&lt;/h3&gt;&lt;p&gt;子网掩码与IP地址进行与操作，再转为十进制，</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ38</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ38/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ38/</id>
    <published>2021-10-26T07:26:51.000Z</published>
    <updated>2021-10-26T07:56:51.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="小球落地5次"><a href="#小球落地5次" class="headerlink" title="小球落地5次"></a>小球落地5次</h3><p>一个球从任一高度自由落下，每次落地后反跳回原高度的一半，再落下……求第5次落地时，共经历多少米？第5次反弹多高？最后误差判断是小数点6位。</p><p>输入：起始高度，int型，例：1</p><p>输出：<br>2.875<br>0.03125</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var num = parseInt(readline());</span><br><span class="line">function ballBounce(num)&#123;</span><br><span class="line">    var height = [];</span><br><span class="line">    height.push(num);</span><br><span class="line">    var total = height[0];</span><br><span class="line">    for(let i=1;i&lt;6;i++)&#123;</span><br><span class="line">        height.push(num / (2**i));</span><br><span class="line">    &#125;</span><br><span class="line">    for(let i=1;i&lt;height.length-1;i++)&#123;</span><br><span class="line">        total += (height[i] * 2);</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(total);</span><br><span class="line">    console.log(height[height.length-1]);</span><br><span class="line">&#125;</span><br><span class="line">ballBounce(num);</span><br></pre></td></tr></table></figure><p>通过：运行时间15ms（超过25.60%用JavaScript_V8提交的代码），占用内存5256KB（超过10.97%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;小球落地5次&quot;&gt;&lt;a href=&quot;#小球落地5次&quot; class=&quot;headerlink&quot; title=&quot;小球落地5次&quot;&gt;&lt;/a&gt;小球落地5次&lt;/h3&gt;&lt;p&gt;一个球从任一高度自由落下，每次落地后反跳回原高度的一半，再落下……求第5次落地时，共经历多少米？第5次反弹多</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ37</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ37/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ37/</id>
    <published>2021-10-26T05:31:09.000Z</published>
    <updated>2021-10-26T07:19:45.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="统计每个月兔子的总数"><a href="#统计每个月兔子的总数" class="headerlink" title="统计每个月兔子的总数"></a>统计每个月兔子的总数</h3><p>一只兔子出生后第3个月开始，每个月都生一只兔子，生下的兔子长到第3个月也开始每个月生一只兔子，每只兔子都不死，第n个月兔子总数是多少？</p><hr><p>思路：经典的递归问题，f(1)=1,f(2)=1,f(n)=f(n-1)+f(n-2);</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(parseInt(line));</span><br><span class="line">&#125;</span><br><span class="line">function rabbit(n)&#123;</span><br><span class="line">    if(n ===1 || n === 2)&#123;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        return rabbit(n-1)+rabbit(n-2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    console.log(rabbit(arr[i]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间23ms（超过22.99%用JavaScript_V8提交的代码），占用内存5296KB（超过26.12%%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;统计每个月兔子的总数&quot;&gt;&lt;a href=&quot;#统计每个月兔子的总数&quot; class=&quot;headerlink&quot; title=&quot;统计每个月兔子的总数&quot;&gt;&lt;/a&gt;统计每个月兔子的总数&lt;/h3&gt;&lt;p&gt;一只兔子出生后第3个月开始，每个月都生一只兔子，生下的兔子长到第3个月也开始</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ36</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ36/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ36/</id>
    <published>2021-10-26T02:16:57.000Z</published>
    <updated>2021-10-26T05:28:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符串加密"><a href="#字符串加密" class="headerlink" title="字符串加密"></a>字符串加密</h3><p>数据加密技巧：选择一个单词作为密匙，如果单词中包含有重复的字母则只保留第一个，其余的丢弃;<br>剩余部分用单词表中单词不包含的字母依次填充；<br>加密：密匙中每个字母依次对应字母表的字母，用字母表的字母一一取代密匙的字母（大小写状态应保留）。</p><p>输入：<br>key例：nihao<br>要加密的字符串：ni</p><p>输出：加密后的字符串：le</p><hr><p>开始没看懂题目意思，把示例算了一遍才明白，如下：</p><p>key是nihao，则在把key去重再加字母表其他字母后结果是：</p><p>n i h a o b c d e f g j k l m p q r s t u v w x y z与普通字母表对应：</p><p>a b c d e f g h i j k l m n o p q r s t u v w x y z</p><p>需要加密的n对应上行的l，i对应上行的e，所以加密后的结果是le</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function encrypStr(key, str)&#123;</span><br><span class="line">    key = [...new Set(key.split(&#x27;&#x27;))].join(&#x27;&#x27;);</span><br><span class="line">    var aCode = &#x27;a&#x27;.charCodeAt(0);</span><br><span class="line">    var zCode = &#x27;z&#x27;.charCodeAt(0);</span><br><span class="line">    var plus = &#x27;&#x27;;</span><br><span class="line">    var result = &#x27;&#x27;;</span><br><span class="line">    for(let i=aCode;i&lt;=zCode;i++)&#123;</span><br><span class="line">        if(key.indexOf(String.fromCharCode(i)) === -1)&#123;</span><br><span class="line">            plus += String.fromCharCode(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    key += plus;</span><br><span class="line">    for(let j=0;j&lt;str.length;j++)&#123;</span><br><span class="line">        result += key[str[j].charCodeAt(0) - 97];</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(result);</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i+=2)&#123;</span><br><span class="line">    encrypStr(arr[i], arr[i+1]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间15ms（超过24.68%用JavaScript_V8提交的代码），占用内存5296KB（超过15.74%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;字符串加密&quot;&gt;&lt;a href=&quot;#字符串加密&quot; class=&quot;headerlink&quot; title=&quot;字符串加密&quot;&gt;&lt;/a&gt;字符串加密&lt;/h3&gt;&lt;p&gt;数据加密技巧：选择一个单词作为密匙，如果单词中包含有重复的字母则只保留第一个，其余的丢弃;&lt;br&gt;剩余部分用单词表中</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ35</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ35/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ35/</id>
    <published>2021-10-25T14:29:46.000Z</published>
    <updated>2021-10-25T15:24:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="蛇形矩阵"><a href="#蛇形矩阵" class="headerlink" title="蛇形矩阵"></a>蛇形矩阵</h3><p>思路：找规律:设数字为N，则左上角是1，右上角是最后一个数字，把每行数字的个数加起来就是右上角的数字，即1+2+3+…+N=(N²+N)/2；<br>第二行开始每个数字是上一行斜对角的数字-1。</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var numArr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    numArr.push(parseInt(line));</span><br><span class="line">&#125;</span><br><span class="line">function snakeMatrix(num)&#123;</span><br><span class="line">    var mArr = [];</span><br><span class="line">    for(let j=0;j&lt;num;j++)&#123;</span><br><span class="line">        var content = [];</span><br><span class="line">        if(j===0)&#123;</span><br><span class="line">            for(let k=1;k&lt;=num;k++)&#123;</span><br><span class="line">                content.push((k*k+k)/2);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else&#123;</span><br><span class="line">            for(let k=0;k&lt;num-j;k++)&#123;</span><br><span class="line">                content.push(mArr[j-1][k+1]-1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        mArr.push(content);</span><br><span class="line">    &#125;</span><br><span class="line">    for(let j=0;j&lt;mArr.length;j++)&#123;</span><br><span class="line">        console.log(mArr[j].join(&#x27; &#x27;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;numArr.length;i++)&#123;</span><br><span class="line">    snakeMatrix(numArr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间14ms（超过51.49%用JavaScript_V8提交的代码），占用内存5632KB（超过81.58%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;蛇形矩阵&quot;&gt;&lt;a href=&quot;#蛇形矩阵&quot; class=&quot;headerlink&quot; title=&quot;蛇形矩阵&quot;&gt;&lt;/a&gt;蛇形矩阵&lt;/h3&gt;&lt;p&gt;思路：找规律:设数字为N，则左上角是1，右上角是最后一个数字，把每行数字的个数加起来就是右上角的数字，即1+2+3+…+N=</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ34</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ34/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ34/</id>
    <published>2021-10-25T14:17:07.000Z</published>
    <updated>2021-10-25T14:27:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="图片整理"><a href="#图片整理" class="headerlink" title="图片整理"></a>图片整理</h3><p>字符串包括a-z A-Z 0-9，按从小到大排序</p><p>输入：Ihave1nose2hands10fingers</p><p>输出：0112Iaadeeefghhinnnorsssv</p><hr><p>思路：数字排在字母前面，那就可以直接用数组<code>sort()</code>方法（默认就是字典序）ß</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    console.log(arr[i].split(&#x27;&#x27;).sort().join(&#x27;&#x27;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间18ms（超过22.55%用JavaScript_V8提交的代码），占用内存5328KB（超过50.16%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;图片整理&quot;&gt;&lt;a href=&quot;#图片整理&quot; class=&quot;headerlink&quot; title=&quot;图片整理&quot;&gt;&lt;/a&gt;图片整理&lt;/h3&gt;&lt;p&gt;字符串包括a-z A-Z 0-9，按从小到大排序&lt;/p&gt;
&lt;p&gt;输入：Ihave1nose2hands10fingers&lt;/</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ33</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ33/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ33/</id>
    <published>2021-10-25T12:05:26.000Z</published>
    <updated>2021-10-25T14:01:07.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="整数与IP地址间的转换"><a href="#整数与IP地址间的转换" class="headerlink" title="整数与IP地址间的转换"></a>整数与IP地址间的转换</h3><p>IP地址有四段，每段是一个0-255的整数，把每段拆分成一个长度为8的二进制形式，组合起来，然后转换成一个整数。</p><p>输入：<br>IP地址<br>10进制IP地址</p><p>输出：<br>转换成10进制的IP地址<br>转换后的IP地址</p><hr><p>思路：主要就是用<code>numObj.toString(2)</code>可以把Number对象转成二进制字符串（光数字不行，要先用<code>Number()</code>转成Number对象），而用<code>parseInt(str, 2)</code>可以把二进制字符串转成十进制数字。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function toNum(str)&#123;</span><br><span class="line">    var strArr = str.split(&#x27;.&#x27;);</span><br><span class="line">    var result;</span><br><span class="line">    for(let j=0;j&lt;strArr.length;j++)&#123;</span><br><span class="line">        var plus = &#x27;&#x27;;</span><br><span class="line">        strArr[j] = Number(strArr[j]).toString(2);</span><br><span class="line">        if(strArr[j].length &lt; 8)&#123;</span><br><span class="line">            for(let k=1;k&lt;= 8-strArr[j].length;k++)&#123;</span><br><span class="line">                plus += &#x27;0&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">        strArr[j] = plus + strArr[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    result = parseInt(strArr.join(&#x27;&#x27;), 2);</span><br><span class="line">    console.log(result);</span><br><span class="line">&#125;</span><br><span class="line">function toIp(str)&#123;</span><br><span class="line">    var long = Number(str).toString(2);</span><br><span class="line">    var plus = &#x27;&#x27;;</span><br><span class="line">    var ipArr = [];</span><br><span class="line">    if(long.length &lt; 32)&#123;</span><br><span class="line">        for(let k=1;k&lt;=32-long.length;k++)&#123;</span><br><span class="line">            plus += &#x27;0&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">        long = plus + long;</span><br><span class="line">    &#125;</span><br><span class="line">    for(let j=0;j&lt;4;j++)&#123;</span><br><span class="line">        ipArr.push(long.substring(j*8,(j+1)*8))</span><br><span class="line">    &#125;</span><br><span class="line">    for(let j=0;j&lt;ipArr.length;j++)&#123;</span><br><span class="line">        ipArr[j] = parseInt(ipArr[j], 2);</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(ipArr.join(&#x27;.&#x27;));</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    if(i%2)&#123;</span><br><span class="line">        toIp(arr[i]);</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        toNum(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间14ms（超过35.81%用JavaScript_V8提交的代码），占用内存5276KB（超过20.32%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;整数与IP地址间的转换&quot;&gt;&lt;a href=&quot;#整数与IP地址间的转换&quot; class=&quot;headerlink&quot; title=&quot;整数与IP地址间的转换&quot;&gt;&lt;/a&gt;整数与IP地址间的转换&lt;/h3&gt;&lt;p&gt;IP地址有四段，每段是一个0-255的整数，把每段拆分成一个长度为8</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ32</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ32/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ32/</id>
    <published>2021-10-25T10:44:47.000Z</published>
    <updated>2021-10-25T12:02:03.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="密码截取"><a href="#密码截取" class="headerlink" title="密码截取"></a>密码截取</h3><p>对称的密码辱ABBA，ABA，A，123321等，为防止破解会在开始或结束加一些无关的字符入12ABBA等。<br>而abaaab可以看作aba，也能看作baaab的加密形式。<br>找出最长的有效密码串。</p><p>输入：一个字符串（长度不超过2500）</p><p>输出：有效密码串最大长度</p><hr><p>思路：从中散开的方法复杂度较小，要分为找到奇数长度的有效密码串和偶数长度的两种；<br>奇数长度从第二个元素开始，检查以它i为中心的字符串(i-1和i+1，i-2和i+2……)是否对称，不断把满足条件的子字符串放到存储的数组中；<br>偶数长度从第一个元素开始，检查它i和后一个元素i+1是否相等，如果相等，继续检查它的前一个i-1和后两个i+2是否相等……</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">var line = readline();</span><br><span class="line">function symmetricalStr(str)&#123;</span><br><span class="line">    var count = 0;</span><br><span class="line">    var corresArr = [];</span><br><span class="line">    if(str.length === 1)&#123;</span><br><span class="line">        count = 1;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(str.length ===2 &amp;&amp; str[0] === str[1])&#123;</span><br><span class="line">        count = 2;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        //找出奇数长度的</span><br><span class="line">        for(let i=1;i&lt;str.length;i++)&#123;</span><br><span class="line">            var center = 1;</span><br><span class="line">            while(str[i-center] === str[i+center] &amp;&amp; center&lt;=i)&#123;</span><br><span class="line">                corresArr.push(str.substring(i-center, i+center+1));</span><br><span class="line">                ++center;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //找出偶数长度的</span><br><span class="line">        for(let i=0;i&lt;str.length;i++)&#123;</span><br><span class="line">            var clip = 0;</span><br><span class="line">            while(str[i-clip] === str[i+1+clip] &amp;&amp; clip&lt;=i)&#123;</span><br><span class="line">                corresArr.push(str.substring(i-clip, i+clip+2));</span><br><span class="line">                ++clip;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for(let j=0;j&lt;corresArr.length;j++)&#123;</span><br><span class="line">            if(corresArr[j].length &gt; count)&#123;</span><br><span class="line">                count = corresArr[j].length;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return count;</span><br><span class="line">&#125;</span><br><span class="line">console.log(symmetricalStr(line));</span><br></pre></td></tr></table></figure><p>通过：运行时间17ms（超过68.03%用JavaScript_V8提交的代码），占用内存5120KB（超过100.00%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;密码截取&quot;&gt;&lt;a href=&quot;#密码截取&quot; class=&quot;headerlink&quot; title=&quot;密码截取&quot;&gt;&lt;/a&gt;密码截取&lt;/h3&gt;&lt;p&gt;对称的密码辱ABBA，ABA，A，123321等，为防止破解会在开始或结束加一些无关的字符入12ABBA等。&lt;br&gt;而aba</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ31</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ31/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ31/</id>
    <published>2021-10-25T08:21:52.000Z</published>
    <updated>2021-10-25T10:42:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="单词倒排"><a href="#单词倒排" class="headerlink" title="单词倒排"></a>单词倒排</h3><p>非26个大/小写英文字母的字符均视为单词间隔符；倒排后相邻单词间只能由一个空格作为间隔符；每个单词最长20个字母。</p><p>输入：$bo*y gi!r#l</p><p>输出：1 r gi y bo</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function reverseWords(str)&#123;</span><br><span class="line">    var array = str.split(&#x27;&#x27;);</span><br><span class="line">    for(let j=0;j&lt;array.length;j++)&#123;</span><br><span class="line">        if(/[a-zA-Z]/g.test(array[j]) === false)&#123;</span><br><span class="line">            array[j] = &#x27; &#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    array = array.join(&#x27;&#x27;).split(&#x27; &#x27;).reverse();</span><br><span class="line">    console.log(array.join(&#x27; &#x27;));</span><br><span class="line">&#125;</span><br><span class="line">reverseWords(arr[0]);</span><br></pre></td></tr></table></figure><p>通过：运行时间14ms（超过32.50%用JavaScript_V8提交的代码），占用内存5316KB（超过20.92%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;单词倒排&quot;&gt;&lt;a href=&quot;#单词倒排&quot; class=&quot;headerlink&quot; title=&quot;单词倒排&quot;&gt;&lt;/a&gt;单词倒排&lt;/h3&gt;&lt;p&gt;非26个大/小写英文字母的字符均视为单词间隔符；倒排后相邻单词间只能由一个空格作为间隔符；每个单词最长20个字母。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ30</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ30/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ30/</id>
    <published>2021-10-25T07:06:06.000Z</published>
    <updated>2021-10-25T08:19:40.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符串合并处理"><a href="#字符串合并处理" class="headerlink" title="字符串合并处理"></a>字符串合并处理</h3><p>第一步：将输入的两个字符串str1和str2前后合并；<br>第二步：合并后的字符串排序：下标（位置，从1开始）为奇数、偶数的字符分别从小到大排序，排序后仍需保持原来的奇偶性；<br>第三步：每个字符进行转换操作：字符对应的十六进制（a<del>f对应10</del>15，大写一样）→用二进制表示并倒序</p><p>思路正确，题目有些没说清的地方，搁置以后调试。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;字符串合并处理&quot;&gt;&lt;a href=&quot;#字符串合并处理&quot; class=&quot;headerlink&quot; title=&quot;字符串合并处理&quot;&gt;&lt;/a&gt;字符串合并处理&lt;/h3&gt;&lt;p&gt;第一步：将输入的两个字符串str1和str2前后合并；&lt;br&gt;第二步：合并后的字符串排序：下标（位置</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试 搁置" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95-%E6%90%81%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ29</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ29/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ29/</id>
    <published>2021-10-25T05:35:51.000Z</published>
    <updated>2021-10-25T06:57:11.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符串加解密"><a href="#字符串加解密" class="headerlink" title="字符串加解密"></a>字符串加解密</h3><p>对输入的字符串进行加解密，并输出。<br>加密方法：英文字母：用后一个字母替换并变换大小写；数字：加1（9变0）；其他字符不做变化。<br>解密方法：加密方法的逆过程，即：英文字母：变换大小写，用前一个字母替换；数字：减1（0变9）。</p><p>输入：<br>一串要加密的密码<br>一串要解密的密码</p><p>输出：<br>加密后的密码<br>解密后的密码</p><hr><p>思路：用正则分别检查是否是小写字母、大写字母和数字，变成前后字母可以先用<code>charCodeAt(0)</code>查当前字母编码，然后-1或+1，再用<code>String.fromCharCode()</code>转成前一个或后一个字母，再变大小写，用<code>toLowerCase()</code>或<code>toUpperCase</code>。<br>注意：加密要对’z’、’Z’和9特别检查，解密要对’a’、’A’和0特别检查。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function encryp(str)&#123;</span><br><span class="line">    var newStr = &#x27;&#x27;;</span><br><span class="line">    for(let j=0;j&lt;str.length;++j)&#123;</span><br><span class="line">        if(/[a-z]/.test(str[j]))&#123;</span><br><span class="line">            if(str[j] === &#x27;z&#x27;)&#123;</span><br><span class="line">                newStr += &#x27;A&#x27;;</span><br><span class="line">            &#125; else&#123;</span><br><span class="line">                newStr += String.fromCharCode(str[j].charCodeAt(0) + 1).toUpperCase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(/[A-Z]/.test(str[j]))&#123;</span><br><span class="line">            if(str[j] === &#x27;Z&#x27;)&#123;</span><br><span class="line">                newStr += &#x27;a&#x27;;</span><br><span class="line">            &#125; else&#123;</span><br><span class="line">                newStr += String.fromCharCode(str[j].charCodeAt(0) + 1).toLowerCase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(/[0-9]/.test(str[j]))&#123;</span><br><span class="line">            if(parseInt(str[j]) === 9)&#123;</span><br><span class="line">                newStr += 0;</span><br><span class="line">            &#125; else&#123;</span><br><span class="line">                newStr += (parseInt(str[j]) + 1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            newStr += str[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(newStr);</span><br><span class="line">&#125;</span><br><span class="line">function decryp(str)&#123;</span><br><span class="line">    var newStr = &#x27;&#x27;;</span><br><span class="line">    for(let j=0;j&lt;str.length;j++)&#123;</span><br><span class="line">        if(/[a-z]/.test(str[j]))&#123;</span><br><span class="line">            if(str[j] === &#x27;a&#x27;)&#123;</span><br><span class="line">                newStr += &#x27;Z&#x27;;</span><br><span class="line">            &#125; else&#123;</span><br><span class="line">                newStr += String.fromCharCode(str[j].charCodeAt(0) - 1).toUpperCase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(/[A-Z]/.test(str[j]))&#123;</span><br><span class="line">            if(str[j] === &#x27;A&#x27;)&#123;</span><br><span class="line">                newStr += &#x27;z&#x27;;</span><br><span class="line">            &#125; else&#123;</span><br><span class="line">                newStr += String.fromCharCode(str[j].charCodeAt(0) - 1).toLowerCase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(/[0-9]/.test(str[j]))&#123;</span><br><span class="line">            if(parseInt(str[j]) === 0)&#123;</span><br><span class="line">                newStr += 9;</span><br><span class="line">            &#125; else&#123;</span><br><span class="line">                newStr += (parseInt(str[j]) - 1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            newStr += str[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(newStr);</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;++i)&#123;</span><br><span class="line">    if(i%2)&#123;</span><br><span class="line">        decryp(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        encryp(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间13ms（超过40.21%用JavaScript_V8提交的代码），占用内存5216KB（超过35.14%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;字符串加解密&quot;&gt;&lt;a href=&quot;#字符串加解密&quot; class=&quot;headerlink&quot; title=&quot;字符串加解密&quot;&gt;&lt;/a&gt;字符串加解密&lt;/h3&gt;&lt;p&gt;对输入的字符串进行加解密，并输出。&lt;br&gt;加密方法：英文字母：用后一个字母替换并变换大小写；数字：加1（9变</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ28</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ28/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ28/</id>
    <published>2021-10-25T02:48:56.000Z</published>
    <updated>2021-10-25T05:32:23.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="素数伴侣"><a href="#素数伴侣" class="headerlink" title="素数伴侣"></a>素数伴侣</h3><p>定义：两个和为素数的正整数，例如2和5、6和13。从N个（N为偶数）正整数中挑出若干对组成素数伴侣，选出最佳方案即能组成素数伴侣最多的方案。</p><p>输入：<br>N<br>N个正整数</p><p>输出：最佳方案组成素数伴侣的对数</p><hr><p>思路：要先写一个判断是否素数的函数，然后再对N个正整数的和进行判断。<br>技巧：素数不是偶数，所以两个偶数相加或者两个奇数相加得到的偶数都不可能是素数，可以先把数据分为奇数和偶数两类，两个互不相交的集合的最大匹配问题，就可以用匈牙利算法解决。<br>匈牙利算法：大概概念弄懂了，先搁置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;素数伴侣&quot;&gt;&lt;a href=&quot;#素数伴侣&quot; class=&quot;headerlink&quot; title=&quot;素数伴侣&quot;&gt;&lt;/a&gt;素数伴侣&lt;/h3&gt;&lt;p&gt;定义：两个和为素数的正整数，例如2和5、6和13。从N个（N为偶数）正整数中挑出若干对组成素数伴侣，选出最佳方案即能组成素数</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试 搁置" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95-%E6%90%81%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ27</title>
    <link href="http://example.com/2021/10/24/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ27/"/>
    <id>http://example.com/2021/10/24/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ27/</id>
    <published>2021-10-24T10:02:06.000Z</published>
    <updated>2021-10-24T11:52:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查找兄弟单词"><a href="#查找兄弟单词" class="headerlink" title="查找兄弟单词"></a>查找兄弟单词</h3><p>兄弟单词：交换一个单词字母顺序，不添加、删除。修改原有字母就能生成的单词。要求和原单词不同。</p><p>输入：单词个数n，n个单词，待查找单词x，数字k</p><p>输出：n个单词里x的兄弟单词个数m，兄弟单词按字典顺序排序后第k个兄弟单词（没有第k个就不用输出）</p><hr><p>思路：分成两个问题，一是找到所有兄弟单词，二是给兄弟单词按字典顺序排序。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function siblingWord(str)&#123;</span><br><span class="line">    var strArr = str.split(&#x27; &#x27;);</span><br><span class="line">    var count = parseInt(strArr[0]);</span><br><span class="line">    var search = [];</span><br><span class="line">    var searchResult = [];</span><br><span class="line">    var posi = parseInt(strArr[strArr.length-1]);</span><br><span class="line">    var base = strArr[strArr.length-2];</span><br><span class="line">    var len = 0;</span><br><span class="line">    var check;</span><br><span class="line">    for(let i=1;i&lt;=count;i++)&#123;</span><br><span class="line">        search.push(strArr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    for(let j=0;j&lt;search.length;j++)&#123;</span><br><span class="line">        if(search[j].length === base.length &amp;&amp; search[j] !== base)&#123;</span><br><span class="line">            if(search[j].split(&#x27;&#x27;).sort().join(&#x27;&#x27;) === base.split(&#x27;&#x27;).sort().join(&#x27;&#x27;))&#123;</span><br><span class="line">                searchResult.push(search[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    searchResult.sort();</span><br><span class="line">    len = searchResult.length;</span><br><span class="line">    if(posi &lt; searchResult.length)&#123;</span><br><span class="line">        check = searchResult[posi-1];</span><br><span class="line">        console.log(len);</span><br><span class="line">        console.log(check);</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        console.log(len);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">siblingWord(arr[0]);</span><br></pre></td></tr></table></figure><p>通过：运行时间15ms（超过52.82%用JavaScript_V8提交的代码），占用内存5588KB（超过67.59%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;查找兄弟单词&quot;&gt;&lt;a href=&quot;#查找兄弟单词&quot; class=&quot;headerlink&quot; title=&quot;查找兄弟单词&quot;&gt;&lt;/a&gt;查找兄弟单词&lt;/h3&gt;&lt;p&gt;兄弟单词：交换一个单词字母顺序，不添加、删除。修改原有字母就能生成的单词。要求和原单词不同。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ26</title>
    <link href="http://example.com/2021/10/24/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ26/"/>
    <id>http://example.com/2021/10/24/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ26/</id>
    <published>2021-10-24T06:46:18.000Z</published>
    <updated>2021-10-24T08:42:32.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符串排序"><a href="#字符串排序" class="headerlink" title="字符串排序"></a>字符串排序</h3><p>英文字母从A到Z排序，不区分大小写；同一个字母大小写都有，按输入顺序排列。</p><p>输入：A Famous Saying: Much Ado About Nothing (2012/8).</p><p>输出：A aaAAbc dFgghh: iimM nNn oooos Sttuuuy (2012/8).</p><hr><p>思路：输入的字符串用<code>split(&#39;&#39;)</code>分成数组（一个字符就是一个元素），对于每个元素，检查是否是字母，然后从97（’a’）开始，如果当前字母<code>charCodeAt(0)</code>为97，则加到排序数组中（把所有a和A找出来了）；<br>然后对于每个元素，检查是否是字母，如果当前字母<code>charCodeAt(0)</code>为98，则加到排序数组中（把所有b和B找出来了）；<br>……循环26次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function strSort(str)&#123;</span><br><span class="line">    var charCode = &#x27;a&#x27;.charCodeAt(0);</span><br><span class="line">    var strArr = str.split(&#x27;&#x27;);</span><br><span class="line">    var sortedArr = [];</span><br><span class="line">    </span><br><span class="line">    for(let i=0;i&lt;26;i++)&#123;</span><br><span class="line">        for(let j=0;j&lt;strArr.length;j++)&#123;</span><br><span class="line">            if(/[a-z]/.test(strArr[j].toLowerCase()) &amp;&amp; strArr[j].toLowerCase().charCodeAt(0) === i+charCode)&#123;</span><br><span class="line">                sortedArr.push(strArr[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(let k=0;k&lt;strArr.length;k++)&#123;</span><br><span class="line">        if(!/[a-z]/.test(strArr[k].toLowerCase()))&#123;</span><br><span class="line">            sortedArr.splice(k,0,strArr[k]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(sortedArr.join(&#x27;&#x27;));</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    strSort(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间23ms（超过21.70%用JavaScript_V8提交的代码），占用内存6760KB（超过21.77%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;字符串排序&quot;&gt;&lt;a href=&quot;#字符串排序&quot; class=&quot;headerlink&quot; title=&quot;字符串排序&quot;&gt;&lt;/a&gt;字符串排序&lt;/h3&gt;&lt;p&gt;英文字母从A到Z排序，不区分大小写；同一个字母大小写都有，按输入顺序排列。&lt;/p&gt;
&lt;p&gt;输入：A Famous S</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ25</title>
    <link href="http://example.com/2021/10/24/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ25/"/>
    <id>http://example.com/2021/10/24/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ25/</id>
    <published>2021-10-24T02:28:36.000Z</published>
    <updated>2021-10-24T06:44:11.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据分类处理"><a href="#数据分类处理" class="headerlink" title="数据分类处理"></a>数据分类处理</h3><p>采集输入大数据和分类规则，通过大数据分类处理程序，将大数据分类输出。<br>这个题题目累赘，看了挺久才看懂，就是一个输入序列I，一个规则序列R，先把R从小到大排序、去重，然后用每个R[i]去检查I中每一个元素找出I[j]中含有R[i]的</p><p>输入：第一行I，第二行R</p><p>输出：<br>满足条件的I[j]的总数<br>满足条件的第一个R[i]<br>含R[i]的I[j]的个数<br>第一个含R[i]的I[j]的索引j<br>第一个含R[i]的I[j]的值</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var lines = [];</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    lines.push(line);</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;parseInt(lines.length/2);i++)&#123;</span><br><span class="line">    arr[i] = [lines[i*2], lines[i*2+1]];</span><br><span class="line">&#125;</span><br><span class="line">function strToNum(array)&#123;</span><br><span class="line">    for(let i=0;i&lt;array.length;i++)&#123;</span><br><span class="line">        array[i] = parseInt(array[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function numToStr(array)&#123;</span><br><span class="line">    for(let i=0;i&lt;array.length;i++)&#123;</span><br><span class="line">        array[i] = array[i].toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function dataClassify(arr)&#123;</span><br><span class="line">    for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">        var Iarr = arr[i][0].split(&#x27; &#x27;);</span><br><span class="line">        var Rarr = arr[i][1].split(&#x27; &#x27;);</span><br><span class="line">        var countArr = [];</span><br><span class="line">        var Rcount = [];</span><br><span class="line">        var result = [];</span><br><span class="line">        var finalResult = [];</span><br><span class="line">        Iarr.shift();</span><br><span class="line">        Rarr.shift();</span><br><span class="line">        strToNum(Rarr);</span><br><span class="line">        Rarr.sort((a,b)=&gt;&#123;return a-b;&#125;);</span><br><span class="line">        Rarr = [...new Set(Rarr)];</span><br><span class="line">        numToStr(Rarr);</span><br><span class="line">        for(let j=0;j&lt;Rarr.length;j++)&#123;</span><br><span class="line">            var count = 0;</span><br><span class="line">            for(let k=0;k&lt;Iarr.length;k++)&#123;</span><br><span class="line">                if(Iarr[k].includes(Rarr[j]))&#123;</span><br><span class="line">                    ++count;</span><br><span class="line">                    result.push(k);</span><br><span class="line">                    result.push(Iarr[k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if(count &gt; 0)&#123;</span><br><span class="line">                Rcount.push(Rarr[j]);</span><br><span class="line">                countArr.push(count);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        var num = 0;</span><br><span class="line">        for(let j=0;j&lt;countArr.length;j++)&#123;</span><br><span class="line">            finalResult.push(Rcount[j]);</span><br><span class="line">            var cur = countArr[j];</span><br><span class="line">            finalResult.push(cur);</span><br><span class="line">            for(let k=num;k&lt;num+cur*2;k++)&#123;</span><br><span class="line">                finalResult.push(result[k]);</span><br><span class="line">            &#125;</span><br><span class="line">            num += cur * 2;</span><br><span class="line">        &#125;</span><br><span class="line">        var len = finalResult.length;</span><br><span class="line">        finalResult.unshift(len);</span><br><span class="line">        console.log(finalResult.join(&#x27; &#x27;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">dataClassify(arr);</span><br></pre></td></tr></table></figure><p>通过：运行时间13ms（超过61.95%用JavaScript_V8提交的代码），占用内存5264KB（超过73.00%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数据分类处理&quot;&gt;&lt;a href=&quot;#数据分类处理&quot; class=&quot;headerlink&quot; title=&quot;数据分类处理&quot;&gt;&lt;/a&gt;数据分类处理&lt;/h3&gt;&lt;p&gt;采集输入大数据和分类规则，通过大数据分类处理程序，将大数据分类输出。&lt;br&gt;这个题题目累赘，看了挺久才看懂，</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
</feed>
