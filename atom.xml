<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-05T06:09:50.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Du</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C语言笔记1</title>
    <link href="http://example.com/2021/11/01/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B01/"/>
    <id>http://example.com/2021/11/01/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B01/</id>
    <published>2021-11-01T13:12:48.000Z</published>
    <updated>2021-11-05T06:09:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>课程：中国大学MOOC 程序设计入门——C语言 翁恺</p><h3 id="第一周-程序设计与C语言"><a href="#第一周-程序设计与C语言" class="headerlink" title="第一周 程序设计与C语言"></a>第一周 程序设计与C语言</h3><h4 id="计算机与编程语言"><a href="#计算机与编程语言" class="headerlink" title="计算机与编程语言"></a>计算机与编程语言</h4><p>要让计算机做事，不能告诉他what to do，而要告诉它how to do。<br>编程语言也不是跟计算机交谈的语言。<br>程序的执行：<br>解释：借助一个程序，那个程序能试图理解你的程序，然后按你的要求执行。<br>编译：借助一个程序，就像一个翻译，把你的程序翻译成计算机真正能懂的语言——机器语言——写的程序，然后这个机器语言写的程序就能直接执行了。</p><h4 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h4><p>现代编程语言在语法上的差异很小，几乎都是C-like语言；<br>语言的能力/适用领域主要是由库和传统所决定的。</p><h4 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;Hello World!\&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二周-计算"><a href="#第二周-计算" class="headerlink" title="第二周 计算"></a>第二周 计算</h3><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>&lt;类型名称&gt;&lt;变量名称&gt;<br>变量需要一个名字，变量的名字是一种标识符。<br>标识符规则：字母、数字、下划线组成，不能以数字开头。C语言关键字不能作标识符。<br>C语言是一种有类型的语言，所有变量在使用之前必须定义或生命，必须有确定的数据类型表示变量中可以存放什么样的数据，程序运行过程中不能改变变量的类型。<br>C语言没有强制要求所有变量都在定义的地方初始化，但是所有变量在第一次被使用之前应该被赋值一次。<br>常量：固定不变的数，用const定义。</p><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>double双精度浮点数，float浮点数</p><h4 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h4><p>运算符优先级：单目运算符(+ -) &gt; 乘(*)除(/) &gt; 加(+)减(-) &gt; 赋值(=)<br>单目和赋值自右向左，其他自左向右。<br>嵌入式赋值×<br>复合赋值+= -= *= /=<br>递增++ 递减–<br>a++的值是a加1以前的值，++a是a加1以后的值。</p><h4 id="在线评判系统"><a href="#在线评判系统" class="headerlink" title="在线评判系统"></a>在线评判系统</h4><h3 id="第三周-判断与循环"><a href="#第三周-判断与循环" class="headerlink" title="第三周 判断与循环"></a>第三周 判断与循环</h3><h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><p>条件判断if<br>赋值运算&lt;所有的关系运算符优先级&lt;算术运算</p><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><p>while循环体内要有改变条件的机会<br>for循环</p><p>有固定次数，用for；必须执行一次，用do-while；其他情况用while。</p><h3 id="第四周-进一步的判断与循环"><a href="#第四周-进一步的判断与循环" class="headerlink" title="第四周 进一步的判断与循环"></a>第四周 进一步的判断与循环</h3><h4 id="逻辑类型和运算"><a href="#逻辑类型和运算" class="headerlink" title="逻辑类型和运算"></a>逻辑类型和运算</h4><p><code>#include &lt;stdbool.h&gt;</code> 之后就可以使用bool和true、false<br>逻辑运算：或||，与&amp;&amp;，非!<br>条件运算符? 优先级只比赋值运算符高，比其他运算符都低。</p><h4 id="级联和嵌套的判断"><a href="#级联和嵌套的判断" class="headerlink" title="级联和嵌套的判断"></a>级联和嵌套的判断</h4><p>如果不加{}，else会和最近的if配套。</p><h4 id="多路分支"><a href="#多路分支" class="headerlink" title="多路分支"></a>多路分支</h4><p>多路分支switch-case</p><h4 id="循环的例子"><a href="#循环的例子" class="headerlink" title="循环的例子"></a>循环的例子</h4><h4 id="判断和循环常见的错误"><a href="#判断和循环常见的错误" class="headerlink" title="判断和循环常见的错误"></a>判断和循环常见的错误</h4><p>忘了大括号；if后面写了分号；错误使用=和==；</p><h3 id="第五周-循环控制"><a href="#第五周-循环控制" class="headerlink" title="第五周 循环控制"></a>第五周 循环控制</h3><h4 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h4><p>break结束循环；continue结束本轮循环，后面的还要继续。</p><h4 id="多重循环"><a href="#多重循环" class="headerlink" title="多重循环"></a>多重循环</h4><p>跳出多重循环：1.设置flag变量；2.用goto语句</p><h4 id="循环应用"><a href="#循环应用" class="headerlink" title="循环应用"></a>循环应用</h4><p>求两个数的最大公约数：辗转相除法</p><h3 id="第六周-数组与函数"><a href="#第六周-数组与函数" class="headerlink" title="第六周 数组与函数"></a>第六周 数组与函数</h3><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>&lt;类型&gt; 变量名称[元素数量] Eg: int grades[100]<br>1.所有元素具有相同的数据类型；<br>2.一旦创建，不能改变大小；<br>3.元素在内存中连续依次排列</p><h4 id="函数的定义与使用"><a href="#函数的定义与使用" class="headerlink" title="函数的定义与使用"></a>函数的定义与使用</h4><p>函数：一块代码，接受零个或多个参数，做一件事情，并返回零个或一个值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">返回类型 函数名(参数表)</span><br><span class="line">&#123;</span><br><span class="line">函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>return停止函数的执行，并返回一个值。<br>函数原型：函数头+;</p><h4 id="函数的参数和变量"><a href="#函数的参数和变量" class="headerlink" title="函数的参数和变量"></a>函数的参数和变量</h4><p>C语言调用函数时，永远只能传值给函数。<br>每个函数有自己的变量空间，参数也位于这个独立的空间中，和其他函数没有关系。<br>函数参数列表中的参数叫“形式参数”，调用函数时给的值叫“实际参数”。<br>函数每次运行，就产生一个独立的变量空间，在这个空间的变量，是函数的这次运行独有的，称作本地变量；定义在函数内部的变量就是本地变量；参数也是本地变量。</p><h4 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;课程：中国大学MOOC 程序设计入门——C语言 翁恺&lt;/p&gt;
&lt;h3 id=&quot;第一周-程序设计与C语言&quot;&gt;&lt;a href=&quot;#第一周-程序设计与C语言&quot; class=&quot;headerlink&quot; title=&quot;第一周 程序设计与C语言&quot;&gt;&lt;/a&gt;第一周 程序设计与C语言&lt;/h3</summary>
      
    
    
    
    <category term="考研专业课预备" scheme="http://example.com/categories/%E8%80%83%E7%A0%94%E4%B8%93%E4%B8%9A%E8%AF%BE%E9%A2%84%E5%A4%87/"/>
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>2023考研资料</title>
    <link href="http://example.com/2021/11/01/2023%E8%80%83%E7%A0%94%E8%B5%84%E6%96%99/"/>
    <id>http://example.com/2021/11/01/2023%E8%80%83%E7%A0%94%E8%B5%84%E6%96%99/</id>
    <published>2021-11-01T05:48:36.000Z</published>
    <updated>2021-11-05T06:11:23.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h3><h4 id="复习规划"><a href="#复习规划" class="headerlink" title="复习规划"></a>复习规划</h4><h5 id="张宇2021-10-27-2023考研数学入门备考规划"><a href="#张宇2021-10-27-2023考研数学入门备考规划" class="headerlink" title="张宇2021-10-27 2023考研数学入门备考规划"></a>张宇2021-10-27 2023考研数学入门备考规划</h5><p>1.基础阶段2021.9-2022.4：<br>（每本均为书课包）<br>《张宇考研数学基础30讲·高等数学分册》<br>《张宇考研数学基础30讲——基础300题·高等数学分册》<br>《张宇考研数学基础30讲·线性代数分册》<br>《张宇考研数学基础30讲——基础300题·线性代数分册》<br>《张宇考研数学基础30讲·概率论与数理统计分册》<br>《张宇考研数学基础30讲——基础300题·概率论与数理统计分册》<br>复习目标：掌握基础概念、定理以及性质。<br>复习重点：理解并记忆基本概念、基本理论、基本方法。</p><p>2.强化阶段2022.5-2022.8：<br>（每本均为书课包）<br>《张宇高等数学18讲》<br>《张宇线性代数9讲》<br>《张宇概率论与数理统计9讲》<br>《张宇考研数学题源探析经典1000题》</p><p>3.强化冲刺阶段2022.9-2022.10：<br>《张宇考研数学真题大全解》（上册）<br>《张宇考研数学真题大全解》（下册）</p><p>4.冲刺阶段2022.11-2022.12：<br>《考研数学命题人终极预测8套卷》（过关版）<br>《张宇考研数学最后4套卷》（过关版）<br>《考研数学命题人终极预测8套卷》（高分版）<br>《张宇考研数学最后4套卷》（高分版）</p><h3 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h3><p>沪江网校徐涛全程班已买。</p><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>数学全程包群内资料<br>1）2021.10-2022.2：大纲词汇，真题语法<br>2）2022.3-2022.6：02-09旧年真题打基础<br>3）2022.6-2022.9：10-17年真题精刷，逐年逐篇逐句，逐题逐个选项<br>4）2022.9-2022.11：18-20真题精刷，逐年逐篇逐句，逐题逐个选项 + 复习10-17年，梳理题型，标记易错<br>5）2022.11-2022.12：模考21+22真题，预测23考点，复习笔记，关注易错</p><h3 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h3><p>年前：B站王道的C语言课程，数据结构，计算机网络，操作系统，（计算机组成原理）。<br>年后：查看学校录取比，决定学校，再买王道的视频。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数学&quot;&gt;&lt;a href=&quot;#数学&quot; class=&quot;headerlink&quot; title=&quot;数学&quot;&gt;&lt;/a&gt;数学&lt;/h3&gt;&lt;h4 id=&quot;复习规划&quot;&gt;&lt;a href=&quot;#复习规划&quot; class=&quot;headerlink&quot; title=&quot;复习规划&quot;&gt;&lt;/a&gt;复习规划&lt;/h</summary>
      
    
    
    
    <category term="考研" scheme="http://example.com/categories/%E8%80%83%E7%A0%94/"/>
    
    
    <category term="考研资料" scheme="http://example.com/tags/%E8%80%83%E7%A0%94%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>HTTP协议详解</title>
    <link href="http://example.com/2021/10/28/HTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>http://example.com/2021/10/28/HTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-10-28T14:02:43.000Z</published>
    <updated>2021-10-29T08:12:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>视频地址：<br>[<a class="link"   href="https://www.bilibili.com/video/BV1js411g7Fw]" >https://www.bilibili.com/video/BV1js411g7Fw]<i class="fas fa-external-link-alt"></i></a></p><h4 id="HTTP协议概念及工作流程"><a href="#HTTP协议概念及工作流程" class="headerlink" title="HTTP协议概念及工作流程"></a>HTTP协议概念及工作流程</h4><p>1.什么是协议：双方或多方都遵从的一个规范。</p><p>2.HTTP协议工作流程：<br>客户端向服务器建立连接，发送请求（连接：网络上的虚拟电路）<br>↓<br>服务器沿着连接返回相应信息<br>↓<br>客户端收到响应（如：HTML代码，解析出文字、图片等）<br>↓<br>客户端与服务器断开连接</p><p>3.HTTP请求信息和响应信息的格式：<br>请求信息：<br>(1)请求行：请求方法(GET POST PUT DELETE…) 请求路径 所用协议<br>(2)请求头信息<br>(3)空行：区分头信息和主体信息(可能有可能没有)；即使没有主体信息，空行也必须有<br>(4)请求主体信息</p><p>响应信息：<br>(1)响应行：协议版本 状态码 状态文字ß<br>(2)响应头信息：<br>key：value<br>key:value<br>…<br>content-length:接下来主体的长度<br>(3)空行<br>(4)响应主体信息</p><h4 id="HTTP协议之方法与状态码"><a href="#HTTP协议之方法与状态码" class="headerlink" title="HTTP协议之方法与状态码"></a>HTTP协议之方法与状态码</h4><p>1.响应方法：<br>HEAD：和GET基本一致，只返回内容（比如只是确认一张照片是否正常存在，不需要返回内容，就可以用HEAD）<br>TRACE：用了代理上网，想看代理是否有修改自己的HTTP请求，可以用TRACE测试。<br>OPTIONS：返回服务器可用的请求方法。</p><p>2.状态码：反应服务器响应情况。<br>|状态码|定义|说明|<br>|:—–:|:—:|:—-:|<br>|1XX|信息|接收到请求，继续处理|<br>|2XX|成功|操作成功收到、理解和接受|<br>|3XX|重定向|为了完成请求，必须采取进一步措施|<br>|4XX|客户端错误|请求的语法有错误或不能完全被满足|<br>|5XX|服务端错误|服务器无法完成明显有效的请求|</p><p>200 服务器成功返回网页<br>301/2 永久/临时重定向<br>304 Not Modified 未修改<br>404 请求的网页不存在<br>503 服务器暂时不可用<br>500 服务器内部错误</p><h4 id="socket编程发送GET请求"><a href="#socket编程发送GET请求" class="headerlink" title="socket编程发送GET请求"></a>socket编程发送GET请求</h4><h4 id="socket编程批量发帖"><a href="#socket编程批量发帖" class="headerlink" title="socket编程批量发帖"></a>socket编程批量发帖</h4><h4 id="http协议模拟登陆发帖"><a href="#http协议模拟登陆发帖" class="headerlink" title="http协议模拟登陆发帖"></a>http协议模拟登陆发帖</h4><h4 id="referer头与防盗链"><a href="#referer头与防盗链" class="headerlink" title="referer头与防盗链"></a>referer头与防盗链</h4><h4 id="http缓存详解"><a href="#http缓存详解" class="headerlink" title="http缓存详解"></a>http缓存详解</h4><p>1.网页中的图片：第一次请求时是200 OK，第二次请求时是304 Not Modified<br>解释：网络上有一些缓存服务器，浏览器自身也有缓存功能。第一次正常下载图片返回200，第二次访问该图片，去服务器校验图片的”签名“ETag，如果图片没有变化，直接使用缓存中的图片，这样减轻了服务器负担。</p><p>抓包观察（第二次请求图片时）：<br> 响应头中：ETag和Last-Modified<br> 请求头中：If-Modified-Since和If-None-Match</p><h4 id="http内容压缩"><a href="#http内容压缩" class="headerlink" title="http内容压缩"></a>http内容压缩</h4><h4 id="comet反向ajax"><a href="#comet反向ajax" class="headerlink" title="comet反向ajax"></a>comet反向ajax</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;视频地址：&lt;br&gt;[&lt;a class=&quot;link&quot;   href=&quot;https://www.bilibili.com/video/BV1js411g7Fw]&quot; &gt;https://www.bilibili.com/video/BV1js411g7Fw]&lt;i class=&quot;fa</summary>
      
    
    
    
    <category term="HTTP协议" scheme="http://example.com/categories/HTTP%E5%8D%8F%E8%AE%AE/"/>
    
    
    <category term="视频课程笔记" scheme="http://example.com/tags/%E8%A7%86%E9%A2%91%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>leetcode刷题1</title>
    <link href="http://example.com/2021/10/28/leetcode%E5%88%B7%E9%A2%981/"/>
    <id>http://example.com/2021/10/28/leetcode%E5%88%B7%E9%A2%981/</id>
    <published>2021-10-28T12:21:09.000Z</published>
    <updated>2021-10-28T13:37:05.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-两数之和"><a href="#1-两数之和" class="headerlink" title="1.两数之和"></a>1.两数之和</h3><p>给定一个整数数组nums和一个整数目标值target，在数组中找出和为目标值的两个整数，返回它们的数组下标。<br>注：可以假设每种输入只会对应一个答案；数组中同一个元素在答案里不能重复出现；可以按任意顺序返回答案。</p><hr><p>思路：<br>1.暴力枚举：双层循环，也就是把第一个数跟第二个及以后所有数相加，第二个数跟第三个及以后所有数相加，直到找到和为目标值的两个数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var twoSum = function(nums, target) &#123;</span><br><span class="line">    var len = nums.length;</span><br><span class="line">    var result = [];</span><br><span class="line">    for(let i=0;i&lt;len-1;i++)&#123;</span><br><span class="line">        for(let j=i+1;j&lt;len;j++)&#123;</span><br><span class="line">            if(nums[i]+nums[j] === target)&#123;</span><br><span class="line">                result.push(i);</span><br><span class="line">                result.push(j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>2.用哈希表：用哈希表记录查看过的数据，先把nums[0]按key=nums[0]，value=0下标放进去，然后从i=1开始，检查哈希表的值里是否有8-nums[i]，如果没有，则把key=nums[i],value=i放进哈希表；如果有，说明这两个就是所求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var twoSum = function(nums, target) &#123;</span><br><span class="line">    var len = nums.length;</span><br><span class="line">    var result = [];</span><br><span class="line">    var myMap = new Map();</span><br><span class="line">    myMap.set(nums[0],0);</span><br><span class="line">    for(let i=1;i&lt;len;i++)&#123;</span><br><span class="line">        let left = target - nums[i];</span><br><span class="line">        if(myMap.has(left))&#123;</span><br><span class="line">            result.push(myMap.get(left));</span><br><span class="line">            result.push(i);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            myMap.set(nums[i],i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>比较：</p><table><thead><tr><th align="center">…..</th><th align="center">执行用时</th><th align="center">内存消耗</th></tr></thead><tbody><tr><td align="center">枚举</td><td align="center">124ms</td><td align="center">38.5MB</td></tr><tr><td align="center">哈希表</td><td align="center">92ms</td><td align="center">40.6MB</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-两数之和&quot;&gt;&lt;a href=&quot;#1-两数之和&quot; class=&quot;headerlink&quot; title=&quot;1.两数之和&quot;&gt;&lt;/a&gt;1.两数之和&lt;/h3&gt;&lt;p&gt;给定一个整数数组nums和一个整数目标值target，在数组中找出和为目标值的两个整数，返回它们的数组下标。</summary>
      
    
    
    
    <category term="每天leetcode刷题" scheme="http://example.com/categories/%E6%AF%8F%E5%A4%A9leetcode%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ50</title>
    <link href="http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ50/"/>
    <id>http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ50/</id>
    <published>2021-10-27T07:38:25.000Z</published>
    <updated>2021-10-27T08:09:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h3><p>（题目列表没有HJ49）<br>JavaScript可以直接用<code>eval()</code>执行字符串，只需要先把字符串里的’[]’和’{}’都换成’()’就行了。</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var line = readline();</span><br><span class="line">line = line.split(&#x27;&#x27;);</span><br><span class="line">for(let i=0;i&lt;line.length;i++)&#123;</span><br><span class="line">    if(line[i] == &#x27;[&#x27; || line[i] == &#x27;&#123;&#x27;)&#123;</span><br><span class="line">        line[i] = &#x27;(&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">    if(line[i] == &#x27;]&#x27; || line[i] == &#x27;&#125;&#x27;)&#123;</span><br><span class="line">        line[i] = &#x27;)&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">line = line.join(&#x27;&#x27;);</span><br><span class="line">console.log(eval(line));</span><br></pre></td></tr></table></figure><p>通过：运行时间14ms（超过23.30%用JavaScript_V8提交的代码），占用内存5208KB（超过16.30%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;四则运算&quot;&gt;&lt;a href=&quot;#四则运算&quot; class=&quot;headerlink&quot; title=&quot;四则运算&quot;&gt;&lt;/a&gt;四则运算&lt;/h3&gt;&lt;p&gt;（题目列表没有HJ49）&lt;br&gt;JavaScript可以直接用&lt;code&gt;eval()&lt;/code&gt;执行字符串，只需要先把字</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ48</title>
    <link href="http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ48/"/>
    <id>http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ48/</id>
    <published>2021-10-27T06:01:04.000Z</published>
    <updated>2021-10-27T07:37:57.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="从单向链表中删除指定值的节点"><a href="#从单向链表中删除指定值的节点" class="headerlink" title="从单向链表中删除指定值的节点"></a>从单向链表中删除指定值的节点</h3><p>（没有HJ47，题目列表上就没有）<br>输入一个单向链表和一个节点的值，从单向链表中删除等于该值的节点，删除后如果链表中无节点则返回空指针。<br>链表的值不能重复。</p><p>输入：6 2 1 2 3 2 5 1 4 5 7 2 2<br>6：输入共六个节点<br>2：链表头节点为2<br>1 2：2后插入1即2 -&gt; 1<br>3 2：2后插入3即2 -&gt; 3 -&gt; 1<br>5 1：2 -&gt; 3 -&gt; 1 -&gt; 5<br>4 5：2 -&gt; 3 -&gt; 1 -&gt; 5 -&gt; 4<br>7 2：2 -&gt; 7 -&gt; 3 -&gt; 1 -&gt; 5 -&gt; 4<br>最后的2：要删除值为2的节点，结果：7 -&gt; 3 -&gt; 1 -&gt; 5 -&gt; 4</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">var line = readline();</span><br><span class="line">function deleNode(str)&#123;</span><br><span class="line">    str = str.split(&#x27; &#x27;).map(ele =&gt; parseInt(ele));</span><br><span class="line">    var len = str.length;</span><br><span class="line">    var result = [];</span><br><span class="line">    var start = str[1];</span><br><span class="line">    var dele = str[len-1];</span><br><span class="line">    var nodeStr = str.splice(2, len-3);</span><br><span class="line">    var final = [];</span><br><span class="line">    result.push(start);</span><br><span class="line">    for(let i=0;i&lt;nodeStr.length-1;i+=2)&#123;</span><br><span class="line">        var index = result.indexOf(nodeStr[i+1]);</span><br><span class="line">        var nowLen = result.length;</span><br><span class="line">        if((index+1) === nowLen)&#123;</span><br><span class="line">            result.push(nodeStr[i]);</span><br><span class="line">        &#125; else&#123;</span><br><span class="line">            for(let k=nowLen;k&gt;=index+1;k--)&#123;</span><br><span class="line">                result[k] = result[k-1];</span><br><span class="line">            &#125;</span><br><span class="line">            result[index+1] = nodeStr[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(let i=0;i&lt;result.length;i++)&#123;</span><br><span class="line">        if(result[i] !== dele)&#123;</span><br><span class="line">            final.push(result[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(final.join(&#x27; &#x27;));</span><br><span class="line">&#125;</span><br><span class="line">deleNode(line);</span><br></pre></td></tr></table></figure><p>通过：运行时间16ms（超过41.41%用JavaScript_V8提交的代码），占用内存5784KB（超过17.25%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;从单向链表中删除指定值的节点&quot;&gt;&lt;a href=&quot;#从单向链表中删除指定值的节点&quot; class=&quot;headerlink&quot; title=&quot;从单向链表中删除指定值的节点&quot;&gt;&lt;/a&gt;从单向链表中删除指定值的节点&lt;/h3&gt;&lt;p&gt;（没有HJ47，题目列表上就没有）&lt;br&gt;输</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ46</title>
    <link href="http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ46/"/>
    <id>http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ46/</id>
    <published>2021-10-27T05:50:38.000Z</published>
    <updated>2021-10-27T06:00:32.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h3><p>输入一个字符串（长度n[1,100]）和一个整数k（大小[1,n]），截取字符串的前k个字符并输出。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function cutStr(str, num)&#123;</span><br><span class="line">    console.log(str.substring(0,num));</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length-1;i+=2)&#123;</span><br><span class="line">    cutStr(arr[i], parseInt(arr[i+1]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间13ms（超过34.86% 用JavaScript_V8提交的代码），占用内存5128KB（超过31.14%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;截取字符串&quot;&gt;&lt;a href=&quot;#截取字符串&quot; class=&quot;headerlink&quot; title=&quot;截取字符串&quot;&gt;&lt;/a&gt;截取字符串&lt;/h3&gt;&lt;p&gt;输入一个字符串（长度n[1,100]）和一个整数k（大小[1,n]），截取字符串的前k个字符并输出。&lt;/p&gt;
&lt;fi</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ45</title>
    <link href="http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ45/"/>
    <id>http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ45/</id>
    <published>2021-10-27T03:07:32.000Z</published>
    <updated>2021-10-27T05:44:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="名字漂亮度"><a href="#名字漂亮度" class="headerlink" title="名字漂亮度"></a>名字漂亮度</h3><p>一个名字由字母组成（字母忽略大小写），每个字母有一个各不相同的”漂亮度“，范围在1-26。求每个名字最大可能的”漂亮度“。</p><p>输入：<br>整数N<br>N个名字</p><p>输出：每个名字可能的最大漂亮度</p><hr><p>思路：就是算出名字里各个字母出现的次数，次数最多的设为漂亮度26，其次设为25……这样漂亮度就会最大。<br>方法：用一个数组存名字里的每个字母，用一个对象存每个字母的个数{字母: 个数}，每次用<code>includes()</code>检查数组里是否已经有这个字母，没有就加进数组，并且在对象中加一个键值对；已经有该字母，则把对象中相应的键的值加1；<br>有<code>Object.values(obj)</code>得到对象的值的数组，按从大到小排列，然后计算漂亮度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function prettyDegree(names)&#123;</span><br><span class="line">    for(let k=0;k&lt;names.length;k++)&#123;</span><br><span class="line">        var degrees = 0;</span><br><span class="line">        var alphas = [];</span><br><span class="line">        var count = &#123;&#125;;</span><br><span class="line">        var strArr = names[k].split(&#x27;&#x27;);</span><br><span class="line">        for(let m=0;m&lt;strArr.length;m++)&#123;</span><br><span class="line">            if(!alphas.includes(strArr[m]))&#123;</span><br><span class="line">                alphas.push(strArr[m]);</span><br><span class="line">                count[strArr[m]] = 1;</span><br><span class="line">            &#125; else&#123;</span><br><span class="line">                count[strArr[m]] += 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        count = Object.values(count).sort((a,b)=&gt;&#123;return b-a;&#125;);</span><br><span class="line">        for(let n=0;n&lt;count.length;n++)&#123;</span><br><span class="line">            degrees += (26 - n) * (count[n]);</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(degrees);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    if(/[0-9]/.test(arr[i]))&#123;</span><br><span class="line">        var names = [];</span><br><span class="line">        for(let j=1;j&lt;=parseInt(arr[i]);j++)&#123;</span><br><span class="line">            names.push(arr[i+j]);</span><br><span class="line">        &#125;</span><br><span class="line">        prettyDegree(names);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间18ms（超过42.89%用JavaScript_V8提交的代码），占用内存5972KB（超过37.66%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;名字漂亮度&quot;&gt;&lt;a href=&quot;#名字漂亮度&quot; class=&quot;headerlink&quot; title=&quot;名字漂亮度&quot;&gt;&lt;/a&gt;名字漂亮度&lt;/h3&gt;&lt;p&gt;一个名字由字母组成（字母忽略大小写），每个字母有一个各不相同的”漂亮度“，范围在1-26。求每个名字最大可能的”漂亮</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ43</title>
    <link href="http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ43/"/>
    <id>http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ43/</id>
    <published>2021-10-27T02:34:54.000Z</published>
    <updated>2021-10-27T02:50:01.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="迷宫问题"><a href="#迷宫问题" class="headerlink" title="迷宫问题"></a>迷宫问题</h3><p>二维数组N行M列，只含0和1，0表示可以走，1表示墙壁。求从左上角(0,0)到右下角(N-1,M-1)的路径（测试数据保证唯一解）。</p><p>输入：<br>行数N 列数M<br>第一行数据（M个）<br>……<br>第N行数据（M个）</p><p>输出：<br>(0,0)<br>(1,0)<br>…<br>(4.4)</p><hr><p>因为题目保证了迷宫只有一条，所以用DFS深度优先搜索。</p><h4 id="DFS深度优先搜索"><a href="#DFS深度优先搜索" class="headerlink" title="DFS深度优先搜索"></a>DFS深度优先搜索</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;迷宫问题&quot;&gt;&lt;a href=&quot;#迷宫问题&quot; class=&quot;headerlink&quot; title=&quot;迷宫问题&quot;&gt;&lt;/a&gt;迷宫问题&lt;/h3&gt;&lt;p&gt;二维数组N行M列，只含0和1，0表示可以走，1表示墙壁。求从左上角(0,0)到右下角(N-1,M-1)的路径（测试数据保证唯</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ42</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ42/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ42/</id>
    <published>2021-10-26T13:33:56.000Z</published>
    <updated>2021-10-27T02:34:40.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学英语"><a href="#学英语" class="headerlink" title="学英语"></a>学英语</h3><p>将数字转成英文：<br>1.三位数字看成一个整体，后面再加一个计量单位。从右往左数，三位一单位；<br>2.每三位后计数单位：thousand，million，billion<br>3.百万以下、千以上的数：x thousand；10亿以下、百万以上的数：x billion x million x thousand；<br>4.百位和十位之间要加and，百位为0则省略。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;学英语&quot;&gt;&lt;a href=&quot;#学英语&quot; class=&quot;headerlink&quot; title=&quot;学英语&quot;&gt;&lt;/a&gt;学英语&lt;/h3&gt;&lt;p&gt;将数字转成英文：&lt;br&gt;1.三位数字看成一个整体，后面再加一个计量单位。从右往左数，三位一单位；&lt;br&gt;2.每三位后计数单位：tho</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试 搁置" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95-%E6%90%81%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ41</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ41/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ41/</id>
    <published>2021-10-26T11:51:24.000Z</published>
    <updated>2021-10-26T13:33:22.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="称砝码"><a href="#称砝码" class="headerlink" title="称砝码"></a>称砝码</h3><p>n个砝码，重量互不相等，分别为m1,m2…mn，每种重量的砝码个数分别为x1,x2…xn。求这些砝码可以称多少种不同的重量。</p><p>输入：<br>砝码数n（1-10）<br>每种砝码重量m1 m2 … mn（1-2000）<br>每种砝码数量x1 x2 … xn（1-6）</p><p>输出：可以称出的不同重量数的个数</p><hr><p>思路：搁置一下o(╥﹏╥)o</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;称砝码&quot;&gt;&lt;a href=&quot;#称砝码&quot; class=&quot;headerlink&quot; title=&quot;称砝码&quot;&gt;&lt;/a&gt;称砝码&lt;/h3&gt;&lt;p&gt;n个砝码，重量互不相等，分别为m1,m2…mn，每种重量的砝码个数分别为x1,x2…xn。求这些砝码可以称多少种不同的重量。&lt;/p&gt;</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ40</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ40/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ40/</id>
    <published>2021-10-26T11:26:53.000Z</published>
    <updated>2021-10-26T11:50:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="统计一行字符中几类字符的个数"><a href="#统计一行字符中几类字符的个数" class="headerlink" title="统计一行字符中几类字符的个数"></a>统计一行字符中几类字符的个数</h3><p>输入一行字符，分别统计出含英文字母、空格、数字和其他字符的个数</p><p>输入：一行字符串，可以有空格</p><p>输出：<br>英文字符个数<br>空格个数<br>数字个数<br>其他字符个数</p><hr><p>思路：用正则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function statistics(str)&#123;</span><br><span class="line">    var strArr = str.split(&#x27;&#x27;);</span><br><span class="line">    var alphaNum = 0, blankNum = 0, numberNum = 0, otherNum = 0;</span><br><span class="line">    for(let j=0;j&lt;strArr.length;j++)&#123;</span><br><span class="line">        if(/[a-zA-Z]/.test(strArr[j]))&#123;</span><br><span class="line">            ++alphaNum;</span><br><span class="line">        &#125; else if(/[ ]/.test(strArr[j]))&#123;</span><br><span class="line">            ++blankNum;</span><br><span class="line">        &#125; else if(/[0-9]/.test(strArr[j]))&#123;</span><br><span class="line">            ++numberNum;</span><br><span class="line">        &#125; else&#123;</span><br><span class="line">            ++otherNum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(alphaNum);</span><br><span class="line">    console.log(blankNum);</span><br><span class="line">    console.log(numberNum);</span><br><span class="line">    console.log(otherNum);</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    statistics(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间11ms（超过58.61% 用JavaScript_V8提交的代码），占用内存5060KB（超过76.46%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;统计一行字符中几类字符的个数&quot;&gt;&lt;a href=&quot;#统计一行字符中几类字符的个数&quot; class=&quot;headerlink&quot; title=&quot;统计一行字符中几类字符的个数&quot;&gt;&lt;/a&gt;统计一行字符中几类字符的个数&lt;/h3&gt;&lt;p&gt;输入一行字符，分别统计出含英文字母、空格、数</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ39</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ39/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ39/</id>
    <published>2021-10-26T07:57:44.000Z</published>
    <updated>2021-10-26T11:25:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="判断两个IP是否属于同一子网"><a href="#判断两个IP是否属于同一子网" class="headerlink" title="判断两个IP是否属于同一子网"></a>判断两个IP是否属于同一子网</h3><p>子网掩码与IP地址进行与操作，再转为十进制，结果一样的话，说明两个IP地址在同一个子网中。<br>有效掩码与IP：4段，每段在0-255之间；掩码的二进制前缀为网络号，全为1，后缀为主机号，全为0。</p><p>输入：第一行子网掩码，第二、三行是两个IP地址</p><p>输出：子网掩码或IP地址非法则输出1，两个IP属于同一子网络输出0，两个IP不属于同一子网络输出2</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>题目长，过程不难，但是数据处理遇到了没找到的麻烦，不浪费时间了，搁置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;判断两个IP是否属于同一子网&quot;&gt;&lt;a href=&quot;#判断两个IP是否属于同一子网&quot; class=&quot;headerlink&quot; title=&quot;判断两个IP是否属于同一子网&quot;&gt;&lt;/a&gt;判断两个IP是否属于同一子网&lt;/h3&gt;&lt;p&gt;子网掩码与IP地址进行与操作，再转为十进制，</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ38</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ38/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ38/</id>
    <published>2021-10-26T07:26:51.000Z</published>
    <updated>2021-10-26T07:56:51.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="小球落地5次"><a href="#小球落地5次" class="headerlink" title="小球落地5次"></a>小球落地5次</h3><p>一个球从任一高度自由落下，每次落地后反跳回原高度的一半，再落下……求第5次落地时，共经历多少米？第5次反弹多高？最后误差判断是小数点6位。</p><p>输入：起始高度，int型，例：1</p><p>输出：<br>2.875<br>0.03125</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var num = parseInt(readline());</span><br><span class="line">function ballBounce(num)&#123;</span><br><span class="line">    var height = [];</span><br><span class="line">    height.push(num);</span><br><span class="line">    var total = height[0];</span><br><span class="line">    for(let i=1;i&lt;6;i++)&#123;</span><br><span class="line">        height.push(num / (2**i));</span><br><span class="line">    &#125;</span><br><span class="line">    for(let i=1;i&lt;height.length-1;i++)&#123;</span><br><span class="line">        total += (height[i] * 2);</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(total);</span><br><span class="line">    console.log(height[height.length-1]);</span><br><span class="line">&#125;</span><br><span class="line">ballBounce(num);</span><br></pre></td></tr></table></figure><p>通过：运行时间15ms（超过25.60%用JavaScript_V8提交的代码），占用内存5256KB（超过10.97%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;小球落地5次&quot;&gt;&lt;a href=&quot;#小球落地5次&quot; class=&quot;headerlink&quot; title=&quot;小球落地5次&quot;&gt;&lt;/a&gt;小球落地5次&lt;/h3&gt;&lt;p&gt;一个球从任一高度自由落下，每次落地后反跳回原高度的一半，再落下……求第5次落地时，共经历多少米？第5次反弹多</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ37</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ37/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ37/</id>
    <published>2021-10-26T05:31:09.000Z</published>
    <updated>2021-10-26T07:19:45.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="统计每个月兔子的总数"><a href="#统计每个月兔子的总数" class="headerlink" title="统计每个月兔子的总数"></a>统计每个月兔子的总数</h3><p>一只兔子出生后第3个月开始，每个月都生一只兔子，生下的兔子长到第3个月也开始每个月生一只兔子，每只兔子都不死，第n个月兔子总数是多少？</p><hr><p>思路：经典的递归问题，f(1)=1,f(2)=1,f(n)=f(n-1)+f(n-2);</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(parseInt(line));</span><br><span class="line">&#125;</span><br><span class="line">function rabbit(n)&#123;</span><br><span class="line">    if(n ===1 || n === 2)&#123;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        return rabbit(n-1)+rabbit(n-2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    console.log(rabbit(arr[i]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间23ms（超过22.99%用JavaScript_V8提交的代码），占用内存5296KB（超过26.12%%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;统计每个月兔子的总数&quot;&gt;&lt;a href=&quot;#统计每个月兔子的总数&quot; class=&quot;headerlink&quot; title=&quot;统计每个月兔子的总数&quot;&gt;&lt;/a&gt;统计每个月兔子的总数&lt;/h3&gt;&lt;p&gt;一只兔子出生后第3个月开始，每个月都生一只兔子，生下的兔子长到第3个月也开始</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ36</title>
    <link href="http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ36/"/>
    <id>http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ36/</id>
    <published>2021-10-26T02:16:57.000Z</published>
    <updated>2021-10-26T05:28:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符串加密"><a href="#字符串加密" class="headerlink" title="字符串加密"></a>字符串加密</h3><p>数据加密技巧：选择一个单词作为密匙，如果单词中包含有重复的字母则只保留第一个，其余的丢弃;<br>剩余部分用单词表中单词不包含的字母依次填充；<br>加密：密匙中每个字母依次对应字母表的字母，用字母表的字母一一取代密匙的字母（大小写状态应保留）。</p><p>输入：<br>key例：nihao<br>要加密的字符串：ni</p><p>输出：加密后的字符串：le</p><hr><p>开始没看懂题目意思，把示例算了一遍才明白，如下：</p><p>key是nihao，则在把key去重再加字母表其他字母后结果是：</p><p>n i h a o b c d e f g j k l m p q r s t u v w x y z与普通字母表对应：</p><p>a b c d e f g h i j k l m n o p q r s t u v w x y z</p><p>需要加密的n对应上行的l，i对应上行的e，所以加密后的结果是le</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function encrypStr(key, str)&#123;</span><br><span class="line">    key = [...new Set(key.split(&#x27;&#x27;))].join(&#x27;&#x27;);</span><br><span class="line">    var aCode = &#x27;a&#x27;.charCodeAt(0);</span><br><span class="line">    var zCode = &#x27;z&#x27;.charCodeAt(0);</span><br><span class="line">    var plus = &#x27;&#x27;;</span><br><span class="line">    var result = &#x27;&#x27;;</span><br><span class="line">    for(let i=aCode;i&lt;=zCode;i++)&#123;</span><br><span class="line">        if(key.indexOf(String.fromCharCode(i)) === -1)&#123;</span><br><span class="line">            plus += String.fromCharCode(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    key += plus;</span><br><span class="line">    for(let j=0;j&lt;str.length;j++)&#123;</span><br><span class="line">        result += key[str[j].charCodeAt(0) - 97];</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(result);</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i+=2)&#123;</span><br><span class="line">    encrypStr(arr[i], arr[i+1]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间15ms（超过24.68%用JavaScript_V8提交的代码），占用内存5296KB（超过15.74%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;字符串加密&quot;&gt;&lt;a href=&quot;#字符串加密&quot; class=&quot;headerlink&quot; title=&quot;字符串加密&quot;&gt;&lt;/a&gt;字符串加密&lt;/h3&gt;&lt;p&gt;数据加密技巧：选择一个单词作为密匙，如果单词中包含有重复的字母则只保留第一个，其余的丢弃;&lt;br&gt;剩余部分用单词表中</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ35</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ35/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ35/</id>
    <published>2021-10-25T14:29:46.000Z</published>
    <updated>2021-10-25T15:24:18.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="蛇形矩阵"><a href="#蛇形矩阵" class="headerlink" title="蛇形矩阵"></a>蛇形矩阵</h3><p>思路：找规律:设数字为N，则左上角是1，右上角是最后一个数字，把每行数字的个数加起来就是右上角的数字，即1+2+3+…+N=(N²+N)/2；<br>第二行开始每个数字是上一行斜对角的数字-1。</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var numArr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    numArr.push(parseInt(line));</span><br><span class="line">&#125;</span><br><span class="line">function snakeMatrix(num)&#123;</span><br><span class="line">    var mArr = [];</span><br><span class="line">    for(let j=0;j&lt;num;j++)&#123;</span><br><span class="line">        var content = [];</span><br><span class="line">        if(j===0)&#123;</span><br><span class="line">            for(let k=1;k&lt;=num;k++)&#123;</span><br><span class="line">                content.push((k*k+k)/2);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else&#123;</span><br><span class="line">            for(let k=0;k&lt;num-j;k++)&#123;</span><br><span class="line">                content.push(mArr[j-1][k+1]-1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        mArr.push(content);</span><br><span class="line">    &#125;</span><br><span class="line">    for(let j=0;j&lt;mArr.length;j++)&#123;</span><br><span class="line">        console.log(mArr[j].join(&#x27; &#x27;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;numArr.length;i++)&#123;</span><br><span class="line">    snakeMatrix(numArr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间14ms（超过51.49%用JavaScript_V8提交的代码），占用内存5632KB（超过81.58%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;蛇形矩阵&quot;&gt;&lt;a href=&quot;#蛇形矩阵&quot; class=&quot;headerlink&quot; title=&quot;蛇形矩阵&quot;&gt;&lt;/a&gt;蛇形矩阵&lt;/h3&gt;&lt;p&gt;思路：找规律:设数字为N，则左上角是1，右上角是最后一个数字，把每行数字的个数加起来就是右上角的数字，即1+2+3+…+N=</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ34</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ34/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ34/</id>
    <published>2021-10-25T14:17:07.000Z</published>
    <updated>2021-10-25T14:27:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="图片整理"><a href="#图片整理" class="headerlink" title="图片整理"></a>图片整理</h3><p>字符串包括a-z A-Z 0-9，按从小到大排序</p><p>输入：Ihave1nose2hands10fingers</p><p>输出：0112Iaadeeefghhinnnorsssv</p><hr><p>思路：数字排在字母前面，那就可以直接用数组<code>sort()</code>方法（默认就是字典序）ß</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    console.log(arr[i].split(&#x27;&#x27;).sort().join(&#x27;&#x27;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间18ms（超过22.55%用JavaScript_V8提交的代码），占用内存5328KB（超过50.16%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;图片整理&quot;&gt;&lt;a href=&quot;#图片整理&quot; class=&quot;headerlink&quot; title=&quot;图片整理&quot;&gt;&lt;/a&gt;图片整理&lt;/h3&gt;&lt;p&gt;字符串包括a-z A-Z 0-9，按从小到大排序&lt;/p&gt;
&lt;p&gt;输入：Ihave1nose2hands10fingers&lt;/</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ33</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ33/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ33/</id>
    <published>2021-10-25T12:05:26.000Z</published>
    <updated>2021-10-25T14:01:07.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="整数与IP地址间的转换"><a href="#整数与IP地址间的转换" class="headerlink" title="整数与IP地址间的转换"></a>整数与IP地址间的转换</h3><p>IP地址有四段，每段是一个0-255的整数，把每段拆分成一个长度为8的二进制形式，组合起来，然后转换成一个整数。</p><p>输入：<br>IP地址<br>10进制IP地址</p><p>输出：<br>转换成10进制的IP地址<br>转换后的IP地址</p><hr><p>思路：主要就是用<code>numObj.toString(2)</code>可以把Number对象转成二进制字符串（光数字不行，要先用<code>Number()</code>转成Number对象），而用<code>parseInt(str, 2)</code>可以把二进制字符串转成十进制数字。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">var line;</span><br><span class="line">var arr = [];</span><br><span class="line">while(line = readline())&#123;</span><br><span class="line">    arr.push(line);</span><br><span class="line">&#125;</span><br><span class="line">function toNum(str)&#123;</span><br><span class="line">    var strArr = str.split(&#x27;.&#x27;);</span><br><span class="line">    var result;</span><br><span class="line">    for(let j=0;j&lt;strArr.length;j++)&#123;</span><br><span class="line">        var plus = &#x27;&#x27;;</span><br><span class="line">        strArr[j] = Number(strArr[j]).toString(2);</span><br><span class="line">        if(strArr[j].length &lt; 8)&#123;</span><br><span class="line">            for(let k=1;k&lt;= 8-strArr[j].length;k++)&#123;</span><br><span class="line">                plus += &#x27;0&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">        strArr[j] = plus + strArr[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    result = parseInt(strArr.join(&#x27;&#x27;), 2);</span><br><span class="line">    console.log(result);</span><br><span class="line">&#125;</span><br><span class="line">function toIp(str)&#123;</span><br><span class="line">    var long = Number(str).toString(2);</span><br><span class="line">    var plus = &#x27;&#x27;;</span><br><span class="line">    var ipArr = [];</span><br><span class="line">    if(long.length &lt; 32)&#123;</span><br><span class="line">        for(let k=1;k&lt;=32-long.length;k++)&#123;</span><br><span class="line">            plus += &#x27;0&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">        long = plus + long;</span><br><span class="line">    &#125;</span><br><span class="line">    for(let j=0;j&lt;4;j++)&#123;</span><br><span class="line">        ipArr.push(long.substring(j*8,(j+1)*8))</span><br><span class="line">    &#125;</span><br><span class="line">    for(let j=0;j&lt;ipArr.length;j++)&#123;</span><br><span class="line">        ipArr[j] = parseInt(ipArr[j], 2);</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(ipArr.join(&#x27;.&#x27;));</span><br><span class="line">&#125;</span><br><span class="line">for(let i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">    if(i%2)&#123;</span><br><span class="line">        toIp(arr[i]);</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        toNum(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过：运行时间14ms（超过35.81%用JavaScript_V8提交的代码），占用内存5276KB（超过20.32%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;整数与IP地址间的转换&quot;&gt;&lt;a href=&quot;#整数与IP地址间的转换&quot; class=&quot;headerlink&quot; title=&quot;整数与IP地址间的转换&quot;&gt;&lt;/a&gt;整数与IP地址间的转换&lt;/h3&gt;&lt;p&gt;IP地址有四段，每段是一个0-255的整数，把每段拆分成一个长度为8</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>华为机试HJ32</title>
    <link href="http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ32/"/>
    <id>http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ32/</id>
    <published>2021-10-25T10:44:47.000Z</published>
    <updated>2021-10-25T12:02:03.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="密码截取"><a href="#密码截取" class="headerlink" title="密码截取"></a>密码截取</h3><p>对称的密码辱ABBA，ABA，A，123321等，为防止破解会在开始或结束加一些无关的字符入12ABBA等。<br>而abaaab可以看作aba，也能看作baaab的加密形式。<br>找出最长的有效密码串。</p><p>输入：一个字符串（长度不超过2500）</p><p>输出：有效密码串最大长度</p><hr><p>思路：从中散开的方法复杂度较小，要分为找到奇数长度的有效密码串和偶数长度的两种；<br>奇数长度从第二个元素开始，检查以它i为中心的字符串(i-1和i+1，i-2和i+2……)是否对称，不断把满足条件的子字符串放到存储的数组中；<br>偶数长度从第一个元素开始，检查它i和后一个元素i+1是否相等，如果相等，继续检查它的前一个i-1和后两个i+2是否相等……</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">var line = readline();</span><br><span class="line">function symmetricalStr(str)&#123;</span><br><span class="line">    var count = 0;</span><br><span class="line">    var corresArr = [];</span><br><span class="line">    if(str.length === 1)&#123;</span><br><span class="line">        count = 1;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(str.length ===2 &amp;&amp; str[0] === str[1])&#123;</span><br><span class="line">        count = 2;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        //找出奇数长度的</span><br><span class="line">        for(let i=1;i&lt;str.length;i++)&#123;</span><br><span class="line">            var center = 1;</span><br><span class="line">            while(str[i-center] === str[i+center] &amp;&amp; center&lt;=i)&#123;</span><br><span class="line">                corresArr.push(str.substring(i-center, i+center+1));</span><br><span class="line">                ++center;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //找出偶数长度的</span><br><span class="line">        for(let i=0;i&lt;str.length;i++)&#123;</span><br><span class="line">            var clip = 0;</span><br><span class="line">            while(str[i-clip] === str[i+1+clip] &amp;&amp; clip&lt;=i)&#123;</span><br><span class="line">                corresArr.push(str.substring(i-clip, i+clip+2));</span><br><span class="line">                ++clip;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for(let j=0;j&lt;corresArr.length;j++)&#123;</span><br><span class="line">            if(corresArr[j].length &gt; count)&#123;</span><br><span class="line">                count = corresArr[j].length;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return count;</span><br><span class="line">&#125;</span><br><span class="line">console.log(symmetricalStr(line));</span><br></pre></td></tr></table></figure><p>通过：运行时间17ms（超过68.03%用JavaScript_V8提交的代码），占用内存5120KB（超过100.00%用JavaScript_V8提交的代码）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;密码截取&quot;&gt;&lt;a href=&quot;#密码截取&quot; class=&quot;headerlink&quot; title=&quot;密码截取&quot;&gt;&lt;/a&gt;密码截取&lt;/h3&gt;&lt;p&gt;对称的密码辱ABBA，ABA，A，123321等，为防止破解会在开始或结束加一些无关的字符入12ABBA等。&lt;br&gt;而aba</summary>
      
    
    
    
    <category term="面试刷题" scheme="http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="华为机试" scheme="http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"/>
    
  </entry>
  
</feed>
