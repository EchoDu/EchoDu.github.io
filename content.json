{"meta":{"title":"我的博客","subtitle":"","description":"","author":"Du","url":"http://example.com","root":"/"},"pages":[{"title":"categories","date":"2021-10-19T02:47:27.000Z","updated":"2021-10-19T02:47:27.000Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-10-19T02:47:35.000Z","updated":"2021-10-19T02:47:36.000Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"C语言笔记1","slug":"C语言笔记1","date":"2021-11-01T13:12:48.000Z","updated":"2021-11-05T06:09:50.000Z","comments":true,"path":"2021/11/01/C语言笔记1/","link":"","permalink":"http://example.com/2021/11/01/C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B01/","excerpt":"","text":"课程：中国大学MOOC 程序设计入门——C语言 翁恺 第一周 程序设计与C语言计算机与编程语言要让计算机做事，不能告诉他what to do，而要告诉它how to do。编程语言也不是跟计算机交谈的语言。程序的执行：解释：借助一个程序，那个程序能试图理解你的程序，然后按你的要求执行。编译：借助一个程序，就像一个翻译，把你的程序翻译成计算机真正能懂的语言——机器语言——写的程序，然后这个机器语言写的程序就能直接执行了。 C语言现代编程语言在语法上的差异很小，几乎都是C-like语言；语言的能力/适用领域主要是由库和传统所决定的。 第一个程序1234567#include &lt;stdio.h&gt;int main()&#123; printf(&quot;Hello World!\\&quot;); return 0;&#125; 第二周 计算变量&lt;类型名称&gt;&lt;变量名称&gt;变量需要一个名字，变量的名字是一种标识符。标识符规则：字母、数字、下划线组成，不能以数字开头。C语言关键字不能作标识符。C语言是一种有类型的语言，所有变量在使用之前必须定义或生命，必须有确定的数据类型表示变量中可以存放什么样的数据，程序运行过程中不能改变变量的类型。C语言没有强制要求所有变量都在定义的地方初始化，但是所有变量在第一次被使用之前应该被赋值一次。常量：固定不变的数，用const定义。 数据类型double双精度浮点数，float浮点数 表达式运算符优先级：单目运算符(+ -) &gt; 乘(*)除(/) &gt; 加(+)减(-) &gt; 赋值(=)单目和赋值自右向左，其他自左向右。嵌入式赋值×复合赋值+= -= *= /=递增++ 递减–a++的值是a加1以前的值，++a是a加1以后的值。 在线评判系统第三周 判断与循环判断条件判断if赋值运算&lt;所有的关系运算符优先级&lt;算术运算 循环while循环体内要有改变条件的机会for循环 有固定次数，用for；必须执行一次，用do-while；其他情况用while。 第四周 进一步的判断与循环逻辑类型和运算#include &lt;stdbool.h&gt; 之后就可以使用bool和true、false逻辑运算：或||，与&amp;&amp;，非!条件运算符? 优先级只比赋值运算符高，比其他运算符都低。 级联和嵌套的判断如果不加{}，else会和最近的if配套。 多路分支多路分支switch-case 循环的例子判断和循环常见的错误忘了大括号；if后面写了分号；错误使用=和==； 第五周 循环控制循环控制break结束循环；continue结束本轮循环，后面的还要继续。 多重循环跳出多重循环：1.设置flag变量；2.用goto语句 循环应用求两个数的最大公约数：辗转相除法 第六周 数组与函数数组&lt;类型&gt; 变量名称[元素数量] Eg: int grades[100]1.所有元素具有相同的数据类型；2.一旦创建，不能改变大小；3.元素在内存中连续依次排列 函数的定义与使用函数：一块代码，接受零个或多个参数，做一件事情，并返回零个或一个值。 1234返回类型 函数名(参数表)&#123; 函数体&#125; return停止函数的执行，并返回一个值。函数原型：函数头+; 函数的参数和变量C语言调用函数时，永远只能传值给函数。每个函数有自己的变量空间，参数也位于这个独立的空间中，和其他函数没有关系。函数参数列表中的参数叫“形式参数”，调用函数时给的值叫“实际参数”。函数每次运行，就产生一个独立的变量空间，在这个空间的变量，是函数的这次运行独有的，称作本地变量；定义在函数内部的变量就是本地变量；参数也是本地变量。 二维数组","categories":[{"name":"考研专业课预备","slug":"考研专业课预备","permalink":"http://example.com/categories/%E8%80%83%E7%A0%94%E4%B8%93%E4%B8%9A%E8%AF%BE%E9%A2%84%E5%A4%87/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"http://example.com/tags/C%E8%AF%AD%E8%A8%80/"}]},{"title":"2023考研资料","slug":"2023考研资料","date":"2021-11-01T05:48:36.000Z","updated":"2021-11-05T06:11:23.000Z","comments":true,"path":"2021/11/01/2023考研资料/","link":"","permalink":"http://example.com/2021/11/01/2023%E8%80%83%E7%A0%94%E8%B5%84%E6%96%99/","excerpt":"","text":"数学复习规划张宇2021-10-27 2023考研数学入门备考规划1.基础阶段2021.9-2022.4：（每本均为书课包）《张宇考研数学基础30讲·高等数学分册》《张宇考研数学基础30讲——基础300题·高等数学分册》《张宇考研数学基础30讲·线性代数分册》《张宇考研数学基础30讲——基础300题·线性代数分册》《张宇考研数学基础30讲·概率论与数理统计分册》《张宇考研数学基础30讲——基础300题·概率论与数理统计分册》复习目标：掌握基础概念、定理以及性质。复习重点：理解并记忆基本概念、基本理论、基本方法。 2.强化阶段2022.5-2022.8：（每本均为书课包）《张宇高等数学18讲》《张宇线性代数9讲》《张宇概率论与数理统计9讲》《张宇考研数学题源探析经典1000题》 3.强化冲刺阶段2022.9-2022.10：《张宇考研数学真题大全解》（上册）《张宇考研数学真题大全解》（下册） 4.冲刺阶段2022.11-2022.12：《考研数学命题人终极预测8套卷》（过关版）《张宇考研数学最后4套卷》（过关版）《考研数学命题人终极预测8套卷》（高分版）《张宇考研数学最后4套卷》（高分版） 政治沪江网校徐涛全程班已买。 英语数学全程包群内资料1）2021.10-2022.2：大纲词汇，真题语法2）2022.3-2022.6：02-09旧年真题打基础3）2022.6-2022.9：10-17年真题精刷，逐年逐篇逐句，逐题逐个选项4）2022.9-2022.11：18-20真题精刷，逐年逐篇逐句，逐题逐个选项 + 复习10-17年，梳理题型，标记易错5）2022.11-2022.12：模考21+22真题，预测23考点，复习笔记，关注易错 专业课年前：B站王道的C语言课程，数据结构，计算机网络，操作系统，（计算机组成原理）。年后：查看学校录取比，决定学校，再买王道的视频。","categories":[{"name":"考研","slug":"考研","permalink":"http://example.com/categories/%E8%80%83%E7%A0%94/"}],"tags":[{"name":"考研资料","slug":"考研资料","permalink":"http://example.com/tags/%E8%80%83%E7%A0%94%E8%B5%84%E6%96%99/"}]},{"title":"HTTP协议详解","slug":"HTTP协议详解","date":"2021-10-28T14:02:43.000Z","updated":"2021-10-29T08:12:50.000Z","comments":true,"path":"2021/10/28/HTTP协议详解/","link":"","permalink":"http://example.com/2021/10/28/HTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/","excerpt":"","text":"视频地址：[https://www.bilibili.com/video/BV1js411g7Fw] HTTP协议概念及工作流程1.什么是协议：双方或多方都遵从的一个规范。 2.HTTP协议工作流程：客户端向服务器建立连接，发送请求（连接：网络上的虚拟电路）↓服务器沿着连接返回相应信息↓客户端收到响应（如：HTML代码，解析出文字、图片等）↓客户端与服务器断开连接 3.HTTP请求信息和响应信息的格式：请求信息：(1)请求行：请求方法(GET POST PUT DELETE…) 请求路径 所用协议(2)请求头信息(3)空行：区分头信息和主体信息(可能有可能没有)；即使没有主体信息，空行也必须有(4)请求主体信息 响应信息：(1)响应行：协议版本 状态码 状态文字ß(2)响应头信息：key：valuekey:value…content-length:接下来主体的长度(3)空行(4)响应主体信息 HTTP协议之方法与状态码1.响应方法：HEAD：和GET基本一致，只返回内容（比如只是确认一张照片是否正常存在，不需要返回内容，就可以用HEAD）TRACE：用了代理上网，想看代理是否有修改自己的HTTP请求，可以用TRACE测试。OPTIONS：返回服务器可用的请求方法。 2.状态码：反应服务器响应情况。|状态码|定义|说明||:—–:|:—:|:—-:||1XX|信息|接收到请求，继续处理||2XX|成功|操作成功收到、理解和接受||3XX|重定向|为了完成请求，必须采取进一步措施||4XX|客户端错误|请求的语法有错误或不能完全被满足||5XX|服务端错误|服务器无法完成明显有效的请求| 200 服务器成功返回网页301/2 永久/临时重定向304 Not Modified 未修改404 请求的网页不存在503 服务器暂时不可用500 服务器内部错误 socket编程发送GET请求socket编程批量发帖http协议模拟登陆发帖referer头与防盗链http缓存详解1.网页中的图片：第一次请求时是200 OK，第二次请求时是304 Not Modified解释：网络上有一些缓存服务器，浏览器自身也有缓存功能。第一次正常下载图片返回200，第二次访问该图片，去服务器校验图片的”签名“ETag，如果图片没有变化，直接使用缓存中的图片，这样减轻了服务器负担。 抓包观察（第二次请求图片时）： 响应头中：ETag和Last-Modified 请求头中：If-Modified-Since和If-None-Match http内容压缩comet反向ajax","categories":[{"name":"HTTP协议","slug":"HTTP协议","permalink":"http://example.com/categories/HTTP%E5%8D%8F%E8%AE%AE/"}],"tags":[{"name":"视频课程笔记","slug":"视频课程笔记","permalink":"http://example.com/tags/%E8%A7%86%E9%A2%91%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"}]},{"title":"leetcode刷题1","slug":"leetcode刷题1","date":"2021-10-28T12:21:09.000Z","updated":"2021-10-28T13:37:05.000Z","comments":true,"path":"2021/10/28/leetcode刷题1/","link":"","permalink":"http://example.com/2021/10/28/leetcode%E5%88%B7%E9%A2%981/","excerpt":"","text":"1.两数之和给定一个整数数组nums和一个整数目标值target，在数组中找出和为目标值的两个整数，返回它们的数组下标。注：可以假设每种输入只会对应一个答案；数组中同一个元素在答案里不能重复出现；可以按任意顺序返回答案。 思路：1.暴力枚举：双层循环，也就是把第一个数跟第二个及以后所有数相加，第二个数跟第三个及以后所有数相加，直到找到和为目标值的两个数。 12345678910111213var twoSum = function(nums, target) &#123; var len = nums.length; var result = []; for(let i=0;i&lt;len-1;i++)&#123; for(let j=i+1;j&lt;len;j++)&#123; if(nums[i]+nums[j] === target)&#123; result.push(i); result.push(j); &#125; &#125; &#125; return result;&#125;; 2.用哈希表：用哈希表记录查看过的数据，先把nums[0]按key=nums[0]，value=0下标放进去，然后从i=1开始，检查哈希表的值里是否有8-nums[i]，如果没有，则把key=nums[i],value=i放进哈希表；如果有，说明这两个就是所求。 12345678910111213141516var twoSum = function(nums, target) &#123; var len = nums.length; var result = []; var myMap = new Map(); myMap.set(nums[0],0); for(let i=1;i&lt;len;i++)&#123; let left = target - nums[i]; if(myMap.has(left))&#123; result.push(myMap.get(left)); result.push(i); &#125;else&#123; myMap.set(nums[i],i); &#125; &#125; return result;&#125;; 比较： ….. 执行用时 内存消耗 枚举 124ms 38.5MB 哈希表 92ms 40.6MB","categories":[{"name":"每天leetcode刷题","slug":"每天leetcode刷题","permalink":"http://example.com/categories/%E6%AF%8F%E5%A4%A9leetcode%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"leetcode","slug":"leetcode","permalink":"http://example.com/tags/leetcode/"}]},{"title":"华为机试HJ50","slug":"华为机试HJ50","date":"2021-10-27T07:38:25.000Z","updated":"2021-10-27T08:09:52.000Z","comments":true,"path":"2021/10/27/华为机试HJ50/","link":"","permalink":"http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ50/","excerpt":"","text":"四则运算（题目列表没有HJ49）JavaScript可以直接用eval()执行字符串，只需要先把字符串里的’[]’和’{}’都换成’()’就行了。 123456789101112var line = readline();line = line.split(&#x27;&#x27;);for(let i=0;i&lt;line.length;i++)&#123; if(line[i] == &#x27;[&#x27; || line[i] == &#x27;&#123;&#x27;)&#123; line[i] = &#x27;(&#x27;; &#125; if(line[i] == &#x27;]&#x27; || line[i] == &#x27;&#125;&#x27;)&#123; line[i] = &#x27;)&#x27;; &#125;&#125;line = line.join(&#x27;&#x27;);console.log(eval(line)); 通过：运行时间14ms（超过23.30%用JavaScript_V8提交的代码），占用内存5208KB（超过16.30%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ48","slug":"华为机试HJ48","date":"2021-10-27T06:01:04.000Z","updated":"2021-10-27T07:37:57.000Z","comments":true,"path":"2021/10/27/华为机试HJ48/","link":"","permalink":"http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ48/","excerpt":"","text":"从单向链表中删除指定值的节点（没有HJ47，题目列表上就没有）输入一个单向链表和一个节点的值，从单向链表中删除等于该值的节点，删除后如果链表中无节点则返回空指针。链表的值不能重复。 输入：6 2 1 2 3 2 5 1 4 5 7 2 26：输入共六个节点2：链表头节点为21 2：2后插入1即2 -&gt; 13 2：2后插入3即2 -&gt; 3 -&gt; 15 1：2 -&gt; 3 -&gt; 1 -&gt; 54 5：2 -&gt; 3 -&gt; 1 -&gt; 5 -&gt; 47 2：2 -&gt; 7 -&gt; 3 -&gt; 1 -&gt; 5 -&gt; 4最后的2：要删除值为2的节点，结果：7 -&gt; 3 -&gt; 1 -&gt; 5 -&gt; 4 123456789101112131415161718192021222324252627282930var line = readline();function deleNode(str)&#123; str = str.split(&#x27; &#x27;).map(ele =&gt; parseInt(ele)); var len = str.length; var result = []; var start = str[1]; var dele = str[len-1]; var nodeStr = str.splice(2, len-3); var final = []; result.push(start); for(let i=0;i&lt;nodeStr.length-1;i+=2)&#123; var index = result.indexOf(nodeStr[i+1]); var nowLen = result.length; if((index+1) === nowLen)&#123; result.push(nodeStr[i]); &#125; else&#123; for(let k=nowLen;k&gt;=index+1;k--)&#123; result[k] = result[k-1]; &#125; result[index+1] = nodeStr[i]; &#125; &#125; for(let i=0;i&lt;result.length;i++)&#123; if(result[i] !== dele)&#123; final.push(result[i]); &#125; &#125; console.log(final.join(&#x27; &#x27;));&#125;deleNode(line); 通过：运行时间16ms（超过41.41%用JavaScript_V8提交的代码），占用内存5784KB（超过17.25%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ46","slug":"华为机试HJ46","date":"2021-10-27T05:50:38.000Z","updated":"2021-10-27T06:00:32.000Z","comments":true,"path":"2021/10/27/华为机试HJ46/","link":"","permalink":"http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ46/","excerpt":"","text":"截取字符串输入一个字符串（长度n[1,100]）和一个整数k（大小[1,n]），截取字符串的前k个字符并输出。 1234567891011var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function cutStr(str, num)&#123; console.log(str.substring(0,num));&#125;for(let i=0;i&lt;arr.length-1;i+=2)&#123; cutStr(arr[i], parseInt(arr[i+1]));&#125; 通过：运行时间13ms（超过34.86% 用JavaScript_V8提交的代码），占用内存5128KB（超过31.14%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ45","slug":"华为机试HJ45","date":"2021-10-27T03:07:32.000Z","updated":"2021-10-27T05:44:52.000Z","comments":true,"path":"2021/10/27/华为机试HJ45/","link":"","permalink":"http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ45/","excerpt":"","text":"名字漂亮度一个名字由字母组成（字母忽略大小写），每个字母有一个各不相同的”漂亮度“，范围在1-26。求每个名字最大可能的”漂亮度“。 输入：整数NN个名字 输出：每个名字可能的最大漂亮度 思路：就是算出名字里各个字母出现的次数，次数最多的设为漂亮度26，其次设为25……这样漂亮度就会最大。方法：用一个数组存名字里的每个字母，用一个对象存每个字母的个数{字母: 个数}，每次用includes()检查数组里是否已经有这个字母，没有就加进数组，并且在对象中加一个键值对；已经有该字母，则把对象中相应的键的值加1；有Object.values(obj)得到对象的值的数组，按从大到小排列，然后计算漂亮度。 1234567891011121314151617181920212223242526272829303132333435var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function prettyDegree(names)&#123; for(let k=0;k&lt;names.length;k++)&#123; var degrees = 0; var alphas = []; var count = &#123;&#125;; var strArr = names[k].split(&#x27;&#x27;); for(let m=0;m&lt;strArr.length;m++)&#123; if(!alphas.includes(strArr[m]))&#123; alphas.push(strArr[m]); count[strArr[m]] = 1; &#125; else&#123; count[strArr[m]] += 1; &#125; &#125; count = Object.values(count).sort((a,b)=&gt;&#123;return b-a;&#125;); for(let n=0;n&lt;count.length;n++)&#123; degrees += (26 - n) * (count[n]); &#125; console.log(degrees); &#125;&#125;for(let i=0;i&lt;arr.length;i++)&#123; if(/[0-9]/.test(arr[i]))&#123; var names = []; for(let j=1;j&lt;=parseInt(arr[i]);j++)&#123; names.push(arr[i+j]); &#125; prettyDegree(names); &#125;&#125; 通过：运行时间18ms（超过42.89%用JavaScript_V8提交的代码），占用内存5972KB（超过37.66%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ43","slug":"华为机试HJ43","date":"2021-10-27T02:34:54.000Z","updated":"2021-10-27T02:50:01.000Z","comments":true,"path":"2021/10/27/华为机试HJ43/","link":"","permalink":"http://example.com/2021/10/27/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ43/","excerpt":"","text":"迷宫问题二维数组N行M列，只含0和1，0表示可以走，1表示墙壁。求从左上角(0,0)到右下角(N-1,M-1)的路径（测试数据保证唯一解）。 输入：行数N 列数M第一行数据（M个）……第N行数据（M个） 输出：(0,0)(1,0)…(4.4) 因为题目保证了迷宫只有一条，所以用DFS深度优先搜索。 DFS深度优先搜索","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ42","slug":"华为机试HJ42","date":"2021-10-26T13:33:56.000Z","updated":"2021-10-27T02:34:40.000Z","comments":true,"path":"2021/10/26/华为机试HJ42/","link":"","permalink":"http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ42/","excerpt":"","text":"学英语将数字转成英文：1.三位数字看成一个整体，后面再加一个计量单位。从右往左数，三位一单位；2.每三位后计数单位：thousand，million，billion3.百万以下、千以上的数：x thousand；10亿以下、百万以上的数：x billion x million x thousand；4.百位和十位之间要加and，百位为0则省略。","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试 搁置","slug":"华为机试-搁置","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95-%E6%90%81%E7%BD%AE/"}]},{"title":"华为机试HJ41","slug":"华为机试HJ41","date":"2021-10-26T11:51:24.000Z","updated":"2021-10-26T13:33:22.000Z","comments":true,"path":"2021/10/26/华为机试HJ41/","link":"","permalink":"http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ41/","excerpt":"","text":"称砝码n个砝码，重量互不相等，分别为m1,m2…mn，每种重量的砝码个数分别为x1,x2…xn。求这些砝码可以称多少种不同的重量。 输入：砝码数n（1-10）每种砝码重量m1 m2 … mn（1-2000）每种砝码数量x1 x2 … xn（1-6） 输出：可以称出的不同重量数的个数 思路：搁置一下o(╥﹏╥)o","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ40","slug":"华为机试HJ40","date":"2021-10-26T11:26:53.000Z","updated":"2021-10-26T11:50:02.000Z","comments":true,"path":"2021/10/26/华为机试HJ40/","link":"","permalink":"http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ40/","excerpt":"","text":"统计一行字符中几类字符的个数输入一行字符，分别统计出含英文字母、空格、数字和其他字符的个数 输入：一行字符串，可以有空格 输出：英文字符个数空格个数数字个数其他字符个数 思路：用正则 123456789101112131415161718192021222324252627var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function statistics(str)&#123; var strArr = str.split(&#x27;&#x27;); var alphaNum = 0, blankNum = 0, numberNum = 0, otherNum = 0; for(let j=0;j&lt;strArr.length;j++)&#123; if(/[a-zA-Z]/.test(strArr[j]))&#123; ++alphaNum; &#125; else if(/[ ]/.test(strArr[j]))&#123; ++blankNum; &#125; else if(/[0-9]/.test(strArr[j]))&#123; ++numberNum; &#125; else&#123; ++otherNum; &#125; &#125; console.log(alphaNum); console.log(blankNum); console.log(numberNum); console.log(otherNum);&#125;for(let i=0;i&lt;arr.length;i++)&#123; statistics(arr[i]);&#125; 通过：运行时间11ms（超过58.61% 用JavaScript_V8提交的代码），占用内存5060KB（超过76.46%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ39","slug":"华为机试HJ39","date":"2021-10-26T07:57:44.000Z","updated":"2021-10-26T11:25:43.000Z","comments":true,"path":"2021/10/26/华为机试HJ39/","link":"","permalink":"http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ39/","excerpt":"","text":"判断两个IP是否属于同一子网子网掩码与IP地址进行与操作，再转为十进制，结果一样的话，说明两个IP地址在同一个子网中。有效掩码与IP：4段，每段在0-255之间；掩码的二进制前缀为网络号，全为1，后缀为主机号，全为0。 输入：第一行子网掩码，第二、三行是两个IP地址 输出：子网掩码或IP地址非法则输出1，两个IP属于同一子网络输出0，两个IP不属于同一子网络输出2 1 题目长，过程不难，但是数据处理遇到了没找到的麻烦，不浪费时间了，搁置。","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ38","slug":"华为机试HJ38","date":"2021-10-26T07:26:51.000Z","updated":"2021-10-26T07:56:51.000Z","comments":true,"path":"2021/10/26/华为机试HJ38/","link":"","permalink":"http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ38/","excerpt":"","text":"小球落地5次一个球从任一高度自由落下，每次落地后反跳回原高度的一半，再落下……求第5次落地时，共经历多少米？第5次反弹多高？最后误差判断是小数点6位。 输入：起始高度，int型，例：1 输出：2.8750.03125 123456789101112131415var num = parseInt(readline());function ballBounce(num)&#123; var height = []; height.push(num); var total = height[0]; for(let i=1;i&lt;6;i++)&#123; height.push(num / (2**i)); &#125; for(let i=1;i&lt;height.length-1;i++)&#123; total += (height[i] * 2); &#125; console.log(total); console.log(height[height.length-1]);&#125;ballBounce(num); 通过：运行时间15ms（超过25.60%用JavaScript_V8提交的代码），占用内存5256KB（超过10.97%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ37","slug":"华为机试HJ37","date":"2021-10-26T05:31:09.000Z","updated":"2021-10-26T07:19:45.000Z","comments":true,"path":"2021/10/26/华为机试HJ37/","link":"","permalink":"http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ37/","excerpt":"","text":"统计每个月兔子的总数一只兔子出生后第3个月开始，每个月都生一只兔子，生下的兔子长到第3个月也开始每个月生一只兔子，每只兔子都不死，第n个月兔子总数是多少？ 思路：经典的递归问题，f(1)=1,f(2)=1,f(n)=f(n-1)+f(n-2); 123456789101112131415var line;var arr = [];while(line = readline())&#123; arr.push(parseInt(line));&#125;function rabbit(n)&#123; if(n ===1 || n === 2)&#123; return 1; &#125; else&#123; return rabbit(n-1)+rabbit(n-2); &#125;&#125;for(let i=0;i&lt;arr.length;i++)&#123; console.log(rabbit(arr[i]));&#125; 通过：运行时间23ms（超过22.99%用JavaScript_V8提交的代码），占用内存5296KB（超过26.12%%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ36","slug":"华为机试HJ36","date":"2021-10-26T02:16:57.000Z","updated":"2021-10-26T05:28:48.000Z","comments":true,"path":"2021/10/26/华为机试HJ36/","link":"","permalink":"http://example.com/2021/10/26/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ36/","excerpt":"","text":"字符串加密数据加密技巧：选择一个单词作为密匙，如果单词中包含有重复的字母则只保留第一个，其余的丢弃;剩余部分用单词表中单词不包含的字母依次填充；加密：密匙中每个字母依次对应字母表的字母，用字母表的字母一一取代密匙的字母（大小写状态应保留）。 输入：key例：nihao要加密的字符串：ni 输出：加密后的字符串：le 开始没看懂题目意思，把示例算了一遍才明白，如下： key是nihao，则在把key去重再加字母表其他字母后结果是： n i h a o b c d e f g j k l m p q r s t u v w x y z与普通字母表对应： a b c d e f g h i j k l m n o p q r s t u v w x y z 需要加密的n对应上行的l，i对应上行的e，所以加密后的结果是le 12345678910111213141516171819202122232425var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function encrypStr(key, str)&#123; key = [...new Set(key.split(&#x27;&#x27;))].join(&#x27;&#x27;); var aCode = &#x27;a&#x27;.charCodeAt(0); var zCode = &#x27;z&#x27;.charCodeAt(0); var plus = &#x27;&#x27;; var result = &#x27;&#x27;; for(let i=aCode;i&lt;=zCode;i++)&#123; if(key.indexOf(String.fromCharCode(i)) === -1)&#123; plus += String.fromCharCode(i); &#125; &#125; key += plus; for(let j=0;j&lt;str.length;j++)&#123; result += key[str[j].charCodeAt(0) - 97]; &#125; console.log(result);&#125;for(let i=0;i&lt;arr.length;i+=2)&#123; encrypStr(arr[i], arr[i+1]);&#125; 通过：运行时间15ms（超过24.68%用JavaScript_V8提交的代码），占用内存5296KB（超过15.74%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ35","slug":"华为机试HJ35","date":"2021-10-25T14:29:46.000Z","updated":"2021-10-25T15:24:18.000Z","comments":true,"path":"2021/10/25/华为机试HJ35/","link":"","permalink":"http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ35/","excerpt":"","text":"蛇形矩阵思路：找规律:设数字为N，则左上角是1，右上角是最后一个数字，把每行数字的个数加起来就是右上角的数字，即1+2+3+…+N=(N²+N)/2；第二行开始每个数字是上一行斜对角的数字-1。 123456789101112131415161718192021222324252627var line;var numArr = [];while(line = readline())&#123; numArr.push(parseInt(line));&#125;function snakeMatrix(num)&#123; var mArr = []; for(let j=0;j&lt;num;j++)&#123; var content = []; if(j===0)&#123; for(let k=1;k&lt;=num;k++)&#123; content.push((k*k+k)/2); &#125; &#125; else&#123; for(let k=0;k&lt;num-j;k++)&#123; content.push(mArr[j-1][k+1]-1); &#125; &#125; mArr.push(content); &#125; for(let j=0;j&lt;mArr.length;j++)&#123; console.log(mArr[j].join(&#x27; &#x27;)); &#125;&#125;for(let i=0;i&lt;numArr.length;i++)&#123; snakeMatrix(numArr[i]);&#125; 通过：运行时间14ms（超过51.49%用JavaScript_V8提交的代码），占用内存5632KB（超过81.58%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ34","slug":"华为机试HJ34","date":"2021-10-25T14:17:07.000Z","updated":"2021-10-25T14:27:31.000Z","comments":true,"path":"2021/10/25/华为机试HJ34/","link":"","permalink":"http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ34/","excerpt":"","text":"图片整理字符串包括a-z A-Z 0-9，按从小到大排序 输入：Ihave1nose2hands10fingers 输出：0112Iaadeeefghhinnnorsssv 思路：数字排在字母前面，那就可以直接用数组sort()方法（默认就是字典序）ß 12345678var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;for(let i=0;i&lt;arr.length;i++)&#123; console.log(arr[i].split(&#x27;&#x27;).sort().join(&#x27;&#x27;));&#125; 通过：运行时间18ms（超过22.55%用JavaScript_V8提交的代码），占用内存5328KB（超过50.16%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ33","slug":"华为机试HJ33","date":"2021-10-25T12:05:26.000Z","updated":"2021-10-25T14:01:07.000Z","comments":true,"path":"2021/10/25/华为机试HJ33/","link":"","permalink":"http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ33/","excerpt":"","text":"整数与IP地址间的转换IP地址有四段，每段是一个0-255的整数，把每段拆分成一个长度为8的二进制形式，组合起来，然后转换成一个整数。 输入：IP地址10进制IP地址 输出：转换成10进制的IP地址转换后的IP地址 思路：主要就是用numObj.toString(2)可以把Number对象转成二进制字符串（光数字不行，要先用Number()转成Number对象），而用parseInt(str, 2)可以把二进制字符串转成十进制数字。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function toNum(str)&#123; var strArr = str.split(&#x27;.&#x27;); var result; for(let j=0;j&lt;strArr.length;j++)&#123; var plus = &#x27;&#x27;; strArr[j] = Number(strArr[j]).toString(2); if(strArr[j].length &lt; 8)&#123; for(let k=1;k&lt;= 8-strArr[j].length;k++)&#123; plus += &#x27;0&#x27;; &#125; strArr[j] = plus + strArr[j]; &#125; &#125; result = parseInt(strArr.join(&#x27;&#x27;), 2); console.log(result);&#125;function toIp(str)&#123; var long = Number(str).toString(2); var plus = &#x27;&#x27;; var ipArr = []; if(long.length &lt; 32)&#123; for(let k=1;k&lt;=32-long.length;k++)&#123; plus += &#x27;0&#x27;; &#125; long = plus + long; &#125; for(let j=0;j&lt;4;j++)&#123; ipArr.push(long.substring(j*8,(j+1)*8)) &#125; for(let j=0;j&lt;ipArr.length;j++)&#123; ipArr[j] = parseInt(ipArr[j], 2); &#125; console.log(ipArr.join(&#x27;.&#x27;));&#125;for(let i=0;i&lt;arr.length;i++)&#123; if(i%2)&#123; toIp(arr[i]); &#125; else&#123; toNum(arr[i]); &#125;&#125; 通过：运行时间14ms（超过35.81%用JavaScript_V8提交的代码），占用内存5276KB（超过20.32%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ32","slug":"华为机试HJ32","date":"2021-10-25T10:44:47.000Z","updated":"2021-10-25T12:02:03.000Z","comments":true,"path":"2021/10/25/华为机试HJ32/","link":"","permalink":"http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ32/","excerpt":"","text":"密码截取对称的密码辱ABBA，ABA，A，123321等，为防止破解会在开始或结束加一些无关的字符入12ABBA等。而abaaab可以看作aba，也能看作baaab的加密形式。找出最长的有效密码串。 输入：一个字符串（长度不超过2500） 输出：有效密码串最大长度 思路：从中散开的方法复杂度较小，要分为找到奇数长度的有效密码串和偶数长度的两种；奇数长度从第二个元素开始，检查以它i为中心的字符串(i-1和i+1，i-2和i+2……)是否对称，不断把满足条件的子字符串放到存储的数组中；偶数长度从第一个元素开始，检查它i和后一个元素i+1是否相等，如果相等，继续检查它的前一个i-1和后两个i+2是否相等…… 123456789101112131415161718192021222324252627282930313233343536var line = readline();function symmetricalStr(str)&#123; var count = 0; var corresArr = []; if(str.length === 1)&#123; count = 1; &#125; else if(str.length ===2 &amp;&amp; str[0] === str[1])&#123; count = 2; &#125; else&#123; //找出奇数长度的 for(let i=1;i&lt;str.length;i++)&#123; var center = 1; while(str[i-center] === str[i+center] &amp;&amp; center&lt;=i)&#123; corresArr.push(str.substring(i-center, i+center+1)); ++center; &#125; &#125; //找出偶数长度的 for(let i=0;i&lt;str.length;i++)&#123; var clip = 0; while(str[i-clip] === str[i+1+clip] &amp;&amp; clip&lt;=i)&#123; corresArr.push(str.substring(i-clip, i+clip+2)); ++clip; &#125; &#125; for(let j=0;j&lt;corresArr.length;j++)&#123; if(corresArr[j].length &gt; count)&#123; count = corresArr[j].length; &#125; &#125; &#125; return count;&#125;console.log(symmetricalStr(line)); 通过：运行时间17ms（超过68.03%用JavaScript_V8提交的代码），占用内存5120KB（超过100.00%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ31","slug":"华为机试HJ31","date":"2021-10-25T08:21:52.000Z","updated":"2021-10-25T10:42:18.000Z","comments":true,"path":"2021/10/25/华为机试HJ31/","link":"","permalink":"http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ31/","excerpt":"","text":"单词倒排非26个大/小写英文字母的字符均视为单词间隔符；倒排后相邻单词间只能由一个空格作为间隔符；每个单词最长20个字母。 输入：$bo*y gi!r#l 输出：1 r gi y bo 12345678910111213141516var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function reverseWords(str)&#123; var array = str.split(&#x27;&#x27;); for(let j=0;j&lt;array.length;j++)&#123; if(/[a-zA-Z]/g.test(array[j]) === false)&#123; array[j] = &#x27; &#x27;; &#125; &#125; array = array.join(&#x27;&#x27;).split(&#x27; &#x27;).reverse(); console.log(array.join(&#x27; &#x27;));&#125;reverseWords(arr[0]); 通过：运行时间14ms（超过32.50%用JavaScript_V8提交的代码），占用内存5316KB（超过20.92%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ30","slug":"华为机试HJ30","date":"2021-10-25T07:06:06.000Z","updated":"2021-10-25T08:19:40.000Z","comments":true,"path":"2021/10/25/华为机试HJ30/","link":"","permalink":"http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ30/","excerpt":"","text":"字符串合并处理第一步：将输入的两个字符串str1和str2前后合并；第二步：合并后的字符串排序：下标（位置，从1开始）为奇数、偶数的字符分别从小到大排序，排序后仍需保持原来的奇偶性；第三步：每个字符进行转换操作：字符对应的十六进制（af对应1015，大写一样）→用二进制表示并倒序 思路正确，题目有些没说清的地方，搁置以后调试。","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试 搁置","slug":"华为机试-搁置","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95-%E6%90%81%E7%BD%AE/"}]},{"title":"华为机试HJ29","slug":"华为机试HJ29","date":"2021-10-25T05:35:51.000Z","updated":"2021-10-25T06:57:11.000Z","comments":true,"path":"2021/10/25/华为机试HJ29/","link":"","permalink":"http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ29/","excerpt":"","text":"字符串加解密对输入的字符串进行加解密，并输出。加密方法：英文字母：用后一个字母替换并变换大小写；数字：加1（9变0）；其他字符不做变化。解密方法：加密方法的逆过程，即：英文字母：变换大小写，用前一个字母替换；数字：减1（0变9）。 输入：一串要加密的密码一串要解密的密码 输出：加密后的密码解密后的密码 思路：用正则分别检查是否是小写字母、大写字母和数字，变成前后字母可以先用charCodeAt(0)查当前字母编码，然后-1或+1，再用String.fromCharCode()转成前一个或后一个字母，再变大小写，用toLowerCase()或toUpperCase。注意：加密要对’z’、’Z’和9特别检查，解密要对’a’、’A’和0特别检查。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function encryp(str)&#123; var newStr = &#x27;&#x27;; for(let j=0;j&lt;str.length;++j)&#123; if(/[a-z]/.test(str[j]))&#123; if(str[j] === &#x27;z&#x27;)&#123; newStr += &#x27;A&#x27;; &#125; else&#123; newStr += String.fromCharCode(str[j].charCodeAt(0) + 1).toUpperCase(); &#125; &#125; else if(/[A-Z]/.test(str[j]))&#123; if(str[j] === &#x27;Z&#x27;)&#123; newStr += &#x27;a&#x27;; &#125; else&#123; newStr += String.fromCharCode(str[j].charCodeAt(0) + 1).toLowerCase(); &#125; &#125; else if(/[0-9]/.test(str[j]))&#123; if(parseInt(str[j]) === 9)&#123; newStr += 0; &#125; else&#123; newStr += (parseInt(str[j]) + 1); &#125; &#125; else&#123; newStr += str[j]; &#125; &#125; console.log(newStr);&#125;function decryp(str)&#123; var newStr = &#x27;&#x27;; for(let j=0;j&lt;str.length;j++)&#123; if(/[a-z]/.test(str[j]))&#123; if(str[j] === &#x27;a&#x27;)&#123; newStr += &#x27;Z&#x27;; &#125; else&#123; newStr += String.fromCharCode(str[j].charCodeAt(0) - 1).toUpperCase(); &#125; &#125; else if(/[A-Z]/.test(str[j]))&#123; if(str[j] === &#x27;A&#x27;)&#123; newStr += &#x27;z&#x27;; &#125; else&#123; newStr += String.fromCharCode(str[j].charCodeAt(0) - 1).toLowerCase(); &#125; &#125; else if(/[0-9]/.test(str[j]))&#123; if(parseInt(str[j]) === 0)&#123; newStr += 9; &#125; else&#123; newStr += (parseInt(str[j]) - 1); &#125; &#125; else&#123; newStr += str[j]; &#125; &#125; console.log(newStr);&#125;for(let i=0;i&lt;arr.length;++i)&#123; if(i%2)&#123; decryp(arr[i]); &#125; else&#123; encryp(arr[i]); &#125;&#125; 通过：运行时间13ms（超过40.21%用JavaScript_V8提交的代码），占用内存5216KB（超过35.14%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ28","slug":"华为机试HJ28","date":"2021-10-25T02:48:56.000Z","updated":"2021-10-25T05:32:23.000Z","comments":true,"path":"2021/10/25/华为机试HJ28/","link":"","permalink":"http://example.com/2021/10/25/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ28/","excerpt":"","text":"素数伴侣定义：两个和为素数的正整数，例如2和5、6和13。从N个（N为偶数）正整数中挑出若干对组成素数伴侣，选出最佳方案即能组成素数伴侣最多的方案。 输入：NN个正整数 输出：最佳方案组成素数伴侣的对数 思路：要先写一个判断是否素数的函数，然后再对N个正整数的和进行判断。技巧：素数不是偶数，所以两个偶数相加或者两个奇数相加得到的偶数都不可能是素数，可以先把数据分为奇数和偶数两类，两个互不相交的集合的最大匹配问题，就可以用匈牙利算法解决。匈牙利算法：大概概念弄懂了，先搁置。 1","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试 搁置","slug":"华为机试-搁置","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95-%E6%90%81%E7%BD%AE/"}]},{"title":"华为机试HJ27","slug":"华为机试HJ27","date":"2021-10-24T10:02:06.000Z","updated":"2021-10-24T11:52:52.000Z","comments":true,"path":"2021/10/24/华为机试HJ27/","link":"","permalink":"http://example.com/2021/10/24/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ27/","excerpt":"","text":"查找兄弟单词兄弟单词：交换一个单词字母顺序，不添加、删除。修改原有字母就能生成的单词。要求和原单词不同。 输入：单词个数n，n个单词，待查找单词x，数字k 输出：n个单词里x的兄弟单词个数m，兄弟单词按字典顺序排序后第k个兄弟单词（没有第k个就不用输出） 思路：分成两个问题，一是找到所有兄弟单词，二是给兄弟单词按字典顺序排序。 1234567891011121314151617181920212223242526272829303132333435var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function siblingWord(str)&#123; var strArr = str.split(&#x27; &#x27;); var count = parseInt(strArr[0]); var search = []; var searchResult = []; var posi = parseInt(strArr[strArr.length-1]); var base = strArr[strArr.length-2]; var len = 0; var check; for(let i=1;i&lt;=count;i++)&#123; search.push(strArr[i]); &#125; for(let j=0;j&lt;search.length;j++)&#123; if(search[j].length === base.length &amp;&amp; search[j] !== base)&#123; if(search[j].split(&#x27;&#x27;).sort().join(&#x27;&#x27;) === base.split(&#x27;&#x27;).sort().join(&#x27;&#x27;))&#123; searchResult.push(search[j]); &#125; &#125; &#125; searchResult.sort(); len = searchResult.length; if(posi &lt; searchResult.length)&#123; check = searchResult[posi-1]; console.log(len); console.log(check); &#125; else&#123; console.log(len); &#125;&#125;siblingWord(arr[0]); 通过：运行时间15ms（超过52.82%用JavaScript_V8提交的代码），占用内存5588KB（超过67.59%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ26","slug":"华为机试HJ26","date":"2021-10-24T06:46:18.000Z","updated":"2021-10-24T08:42:32.000Z","comments":true,"path":"2021/10/24/华为机试HJ26/","link":"","permalink":"http://example.com/2021/10/24/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ26/","excerpt":"","text":"字符串排序英文字母从A到Z排序，不区分大小写；同一个字母大小写都有，按输入顺序排列。 输入：A Famous Saying: Much Ado About Nothing (2012/8). 输出：A aaAAbc dFgghh: iimM nNn oooos Sttuuuy (2012/8). 思路：输入的字符串用split(&#39;&#39;)分成数组（一个字符就是一个元素），对于每个元素，检查是否是字母，然后从97（’a’）开始，如果当前字母charCodeAt(0)为97，则加到排序数组中（把所有a和A找出来了）；然后对于每个元素，检查是否是字母，如果当前字母charCodeAt(0)为98，则加到排序数组中（把所有b和B找出来了）；……循环26次 12345678910111213141516171819202122232425262728var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function strSort(str)&#123; var charCode = &#x27;a&#x27;.charCodeAt(0); var strArr = str.split(&#x27;&#x27;); var sortedArr = []; for(let i=0;i&lt;26;i++)&#123; for(let j=0;j&lt;strArr.length;j++)&#123; if(/[a-z]/.test(strArr[j].toLowerCase()) &amp;&amp; strArr[j].toLowerCase().charCodeAt(0) === i+charCode)&#123; sortedArr.push(strArr[j]); &#125; &#125; &#125; for(let k=0;k&lt;strArr.length;k++)&#123; if(!/[a-z]/.test(strArr[k].toLowerCase()))&#123; sortedArr.splice(k,0,strArr[k]); &#125; &#125; console.log(sortedArr.join(&#x27;&#x27;));&#125;for(let i=0;i&lt;arr.length;i++)&#123; strSort(arr[i]);&#125; 通过：运行时间23ms（超过21.70%用JavaScript_V8提交的代码），占用内存6760KB（超过21.77%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ25","slug":"华为机试HJ25","date":"2021-10-24T02:28:36.000Z","updated":"2021-10-24T06:44:11.000Z","comments":true,"path":"2021/10/24/华为机试HJ25/","link":"","permalink":"http://example.com/2021/10/24/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ25/","excerpt":"","text":"数据分类处理采集输入大数据和分类规则，通过大数据分类处理程序，将大数据分类输出。这个题题目累赘，看了挺久才看懂，就是一个输入序列I，一个规则序列R，先把R从小到大排序、去重，然后用每个R[i]去检查I中每一个元素找出I[j]中含有R[i]的 输入：第一行I，第二行R 输出：满足条件的I[j]的总数满足条件的第一个R[i]含R[i]的I[j]的个数第一个含R[i]的I[j]的索引j第一个含R[i]的I[j]的值 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263var line;var lines = [];var arr = [];while(line = readline())&#123; lines.push(line);&#125;for(let i=0;i&lt;parseInt(lines.length/2);i++)&#123; arr[i] = [lines[i*2], lines[i*2+1]];&#125;function strToNum(array)&#123; for(let i=0;i&lt;array.length;i++)&#123; array[i] = parseInt(array[i]); &#125;&#125;function numToStr(array)&#123; for(let i=0;i&lt;array.length;i++)&#123; array[i] = array[i].toString(); &#125;&#125;function dataClassify(arr)&#123; for(let i=0;i&lt;arr.length;i++)&#123; var Iarr = arr[i][0].split(&#x27; &#x27;); var Rarr = arr[i][1].split(&#x27; &#x27;); var countArr = []; var Rcount = []; var result = []; var finalResult = []; Iarr.shift(); Rarr.shift(); strToNum(Rarr); Rarr.sort((a,b)=&gt;&#123;return a-b;&#125;); Rarr = [...new Set(Rarr)]; numToStr(Rarr); for(let j=0;j&lt;Rarr.length;j++)&#123; var count = 0; for(let k=0;k&lt;Iarr.length;k++)&#123; if(Iarr[k].includes(Rarr[j]))&#123; ++count; result.push(k); result.push(Iarr[k]); &#125; &#125; if(count &gt; 0)&#123; Rcount.push(Rarr[j]); countArr.push(count); &#125; &#125; var num = 0; for(let j=0;j&lt;countArr.length;j++)&#123; finalResult.push(Rcount[j]); var cur = countArr[j]; finalResult.push(cur); for(let k=num;k&lt;num+cur*2;k++)&#123; finalResult.push(result[k]); &#125; num += cur * 2; &#125; var len = finalResult.length; finalResult.unshift(len); console.log(finalResult.join(&#x27; &#x27;)); &#125;&#125;dataClassify(arr); 通过：运行时间13ms（超过61.95%用JavaScript_V8提交的代码），占用内存5264KB（超过73.00%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ23","slug":"华为机试HJ23","date":"2021-10-23T11:18:43.000Z","updated":"2021-10-23T13:56:08.000Z","comments":true,"path":"2021/10/23/华为机试HJ23/","link":"","permalink":"http://example.com/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ23/","excerpt":"","text":"删除字符串中出现次数最少的字符删除字符串中出现次数最少的字符，如果多个字符出现次数一样则都删除。 输入：字符串，只包含小写英文字母，长度≤20字节 12abcddaabcddd 输出： 12ddaaddd 思路：利用对象的hasOwnPropery方法，把字母当作对象的键，有新的键就加入对象，已经有的键就把对应的值加1；用Object.values()得到值（即字母出现次数）的数组，数组从小到大排序；把键对应的值===排序数组第一个数值的键统一放入一个数组，这个数组里就是要删除的字母的类型。 123456789101112131415161718192021222324252627282930313233343536var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function countStr(str)&#123; var obj = &#123;&#125;; var countArr; var deleArr = []; var newStr = &#x27;&#x27;; var strArr = str.split(&#x27;&#x27;); for(let i in str)&#123; if(!obj.hasOwnProperty(str[i]))&#123; obj[str[i]] = 1; &#125; else&#123; obj[str[i]] += 1; &#125; &#125; countArr = Object.values(obj).sort((a,b)=&gt;&#123;return a-b;&#125;); if(countArr.length &gt; 1)&#123; for(key in obj)&#123; if(obj[key] === countArr[0])&#123; deleArr.push(key); &#125; &#125; &#125; for(let i=0;i&lt;strArr.length;i++)&#123; if(deleArr.indexOf(strArr[i]) === -1)&#123; newStr += strArr[i]; &#125; &#125; return newStr;&#125;for(i in arr)&#123; console.log(countStr(arr[i]));&#125; 通过：运行时间13ms（超过42.07%用JavaScript_V8提交的代码），占用内存5388KB（超过14.50%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ22","slug":"华为机试HJ22","date":"2021-10-23T10:33:54.000Z","updated":"2021-10-23T11:15:07.000Z","comments":true,"path":"2021/10/23/华为机试HJ22/","link":"","permalink":"http://example.com/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ22/","excerpt":"","text":"汽水瓶3个空汽水瓶换1瓶汽水，10个空汽水瓶可以换多少瓶汽水喝？5瓶：用9个空瓶换3瓶汽水→4个空瓶，用3个空瓶换1瓶汽水→2个空瓶，借一瓶汽水→3个空瓶，换1瓶汽水还给老板 输入：多行单个整数，0代表输入结束，不处理 1234310810 输出：换到的汽水瓶数 1231540 思路：设三个变量，empty表示空瓶数，leftEm表示换一次后剩下的不能被3整除的空瓶数，count表示换得的汽水瓶数，每次判断empty数量计算。经过实际编程，发现在计算过程中还需要一个变量countSave保存count的值，因为count每次都要计算变化。 1234567891011121314151617181920212223242526272829var line;var arr = [];while(line = readline())&#123; arr.push(parseInt(line));&#125;if(arr[arr.length-1] === 0)&#123; arr.pop();&#125;function computeBottle(num)&#123; var empty = num; var count = 0; var leftEm = 0; var countSave = 0; if(empty &gt; 2)&#123; while(empty &gt; 2)&#123; count = parseInt(empty / 3); countSave += count; leftEm = empty % 3; empty = count + leftEm; &#125; &#125; if(empty == 2)&#123; countSave += 1; &#125; return countSave;&#125;for(i in arr)&#123; console.log(computeBottle(arr[i]));&#125; 通过：运行时间12ms（超过42.17%用JavaScript_V8提交的代码），占用内存5180KB（超过17.65%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ21","slug":"华为机试HJ21","date":"2021-10-23T08:31:49.000Z","updated":"2021-10-23T10:31:59.000Z","comments":true,"path":"2021/10/23/华为机试HJ21/","link":"","permalink":"http://example.com/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ21/","excerpt":"","text":"简单密码破解把明文密码翻译成真正的密码。 输入：明文密码，长度不超过100个字符 输出：真正的密码 思路：小写字母转成手机上对应的数字；大写字母转小写，然后后移一位（后移方法：先用charCodeAt查当前小写字母的UTF-16代码单元，+1，再用fromCharCode将代码单元转成对应字母） 1234567891011121314151617181920212223242526272829303132333435363738394041424344var line = readline();function crack(str)&#123; var newStr = [...str]; for(let i=0;i&lt;str.length;i++)&#123; var cur = str[i]; if(/[a-z]/.test(cur))&#123; if(/[abc]/.test(cur))&#123; newStr[i] = 2; &#125; if(/[def]/.test(cur))&#123; newStr[i] = 3; &#125; if(/[ghi]/.test(cur))&#123; newStr[i] = 4; &#125; if(/[jkl]/.test(cur))&#123; newStr[i] = 5; &#125; if(/[mno]/.test(cur))&#123; newStr[i] = 6; &#125; if(/[pqrs]/.test(cur))&#123; newStr[i] = 7; &#125; if(/[tuv]/.test(cur))&#123; newStr[i] = 8; &#125; if(/[wxyz]/.test(cur))&#123; newStr[i] = 9; &#125; &#125; if(/[A-Z]/.test(cur))&#123; if(cur === &#x27;Z&#x27;)&#123; newStr[i] = &#x27;a&#x27;; //注意Z要换成A，否则就变成&#123;了 &#125; else&#123; newStr[i] = String.fromCharCode(cur.toLowerCase().charCodeAt(0)+1); &#125; &#125; &#125; return newStr;&#125;var result = crack(line);console.log(result.join(&#x27;&#x27;)); 通过：运行时间14ms（超过28.82%用JavaScript_V8提交的代码），占用内存5340KB（超过14.21%用JavaScript_V8提交的代码","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ20","slug":"华为机试HJ20","date":"2021-10-23T07:09:14.000Z","updated":"2021-10-23T08:29:58.000Z","comments":true,"path":"2021/10/23/华为机试HJ20/","link":"","permalink":"http://example.com/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ20/","excerpt":"","text":"密码验证合格程序密码要求：1.长度超过8位2.大小写字母、数字、其他符号，以上四种至少三种3.不能有相同的长度大于2的子串重复 输入：一组或多组长度超过2的字符串，每组一行 输出：符合要求输出OK，否则输出NG 思路：长度检查简单；字符种类检查可以设个变量记录，用正则test检查，有一种字符变量就+1，变量≥3就合格；再检查重复字符串。 12345678910111213141516171819202122232425262728293031323334353637var line;var arr = [];while(line = readline())&#123; arr.push(line);&#125;function testPassword(str)&#123; var result = true; var count = 0; if(str.length &lt;= 8)&#123; result = false; &#125; if(/[a-z]/.test(str))&#123; ++count; &#125; if(/[A-Z]/.test(str))&#123; ++count; &#125; if(/[0-9]/.test(str))&#123; ++count; &#125; if(/[^a-zA-Z0-9]/.test(str))&#123; ++count; &#125; if(count &lt; 3)&#123; result = false; &#125; for(let i=0;i&lt;str.length-3;i++)&#123; var substr = str.substring(i,i+3); if(str.substring(i+1).includes(substr))&#123; result = false; &#125; &#125; return result;&#125;for(i in arr)&#123; console.log(testPassword(arr[i]) ? &#x27;OK&#x27; : &#x27;NG&#x27;);&#125; 通过：运行时间13ms（超过53.38%用JavaScript_V8提交的代码），占用内存5260KB（超过34.10%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ17","slug":"华为机试HJ17","date":"2021-10-23T03:47:52.000Z","updated":"2021-10-23T06:51:46.000Z","comments":true,"path":"2021/10/23/华为机试HJ17/","link":"","permalink":"http://example.com/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ17/","excerpt":"","text":"坐标移动一个坐标计算工具，A：向左移动，D：向右移动，W：向上移动，S：向下移动。从(0,0)点开始移动，从输入字符串读取坐标，输出最终坐标。 输入：合法坐标：A/D/W/S加上数字（两位以内），坐标之间以;分隔。非法坐标需要丢弃。 12A10;S20;W10;D30;X;A1A;B10A11;;A10; 输出： 110,-10 思路：把输入用split(&#39;;&#39;)放到数组中，然后用正则表达式test过滤非法坐标，再根据合法坐标计算。 123456789101112131415161718192021222324252627282930var line = readline();var operate = line.split(&#x27;;&#x27;);var reg = /^[A|D|W|S]&#123;1&#125;[1-9][0-9]?$/;var rightOpe = [];for(i in operate)&#123; if(reg.test(operate[i]))&#123; rightOpe.push(operate[i]); &#125;&#125;function move(arr)&#123; var start = [0,0]; for(i in arr)&#123; switch(arr[i][0])&#123; case &#x27;A&#x27;: start[0] -= parseInt(arr[i].substring(1)); break; case &#x27;D&#x27;: start[0] += parseInt(arr[i].substring(1)); break; case &#x27;S&#x27;: start[1] -= parseInt(arr[i].substring(1)); break; case &#x27;W&#x27;: start[1] += parseInt(arr[i].substring(1)); break; &#125; &#125; return start;&#125;console.log(move(rightOpe)); 通过：运行时间13ms（超过45.67% 用JavaScript_V8提交的代码），占用内存5444KB（超过20.50%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ16","slug":"华为机试HJ16","date":"2021-10-23T02:30:20.000Z","updated":"2021-10-25T05:35:28.000Z","comments":true,"path":"2021/10/23/华为机试HJ16/","link":"","permalink":"http://example.com/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ16/","excerpt":"","text":"购物单动态规划，知识盲点，先放着o(╥﹏╥)o","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试 搁置","slug":"华为机试-搁置","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95-%E6%90%81%E7%BD%AE/"}]},{"title":"华为机试HJ15","slug":"华为机试HJ15","date":"2021-10-23T02:12:47.000Z","updated":"2021-10-23T02:28:41.000Z","comments":true,"path":"2021/10/23/华为机试HJ15/","link":"","permalink":"http://example.com/2021/10/23/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ15/","excerpt":"","text":"求int型数据在内存中存储时1的个数输入一个int型正整数，计算出该数在内存中存储时1的个数。 输入：例：5 输出：2 思路：JavaScript的数字有专门的方法Number.prototype.toString()，用num.toString(radix)得到数字对象的字符串表示形式，radix指定数字到字符串的转换基数（2~36）。 123456789101112var num = parseInt(readline());function countOne(num)&#123; var str = num.toString(2); var count = 0; for(i in str)&#123; if(parseInt(str[i]) === 1)&#123; ++count; &#125; &#125; return count;&#125;console.log(countOne(num)); 通过：运行时间12ms（超过44.63%用JavaScript_V8提交的代码），占用内存5152KB（超过19.86%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ14","slug":"华为机试HJ14","date":"2021-10-22T13:21:08.000Z","updated":"2021-10-22T14:39:49.000Z","comments":true,"path":"2021/10/22/华为机试HJ14/","link":"","permalink":"http://example.com/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ14/","excerpt":"","text":"字符串排序给定n个字符串，按字典序排列。 输入： 123456789109captocatcardtwotooupboatboot 输出： 123456789boatbootcapcardcattotootwoup 思路：把每个单词放到数组里，用数组的sort方法排序，JavaScript的sort方法默认就是用字典序。 12345678910var line;var arr = [];var count = parseInt(readline());while(line = readline())&#123; arr.push(line);&#125;arr.sort();for(let i=0;i&lt;arr.length;i++)&#123; console.log(arr[i]);&#125; 通过：运行时间17ms（超过30.33%用JavaScript_V8提交的代码），占用内存6020KB（超过39.16%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ13","slug":"华为机试HJ13","date":"2021-10-22T13:05:58.000Z","updated":"2021-10-22T13:18:49.000Z","comments":true,"path":"2021/10/22/华为机试HJ13/","link":"","permalink":"http://example.com/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ13/","excerpt":"","text":"句子逆序将一个英语句子以单词为单位逆序排放。单词之间用一个空格隔开，句子中除了英文字母外不包含其他字符。 输入：I am a boy 输出：boy a am I 思路：用字符串的split将各个单词放到数组中，用数组的reverse方法逆序，再用数组的join方法将数组的元素用空格连接成一个字符串。 12var str = readline();console.log(str.split(&#x27; &#x27;).reverse().join(&#x27; &#x27;)); 通过：运行时间11ms（超过64.97% 用JavaScript_V8提交的代码），占用内存5132KB（超过61.44%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ12","slug":"华为机试HJ12","date":"2021-10-22T12:15:30.000Z","updated":"2021-10-22T12:58:57.000Z","comments":true,"path":"2021/10/22/华为机试HJ12/","link":"","permalink":"http://example.com/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ12/","excerpt":"","text":"字符串反转接受一个只含小写字母的字符串，输出反转后的字符串 输入：abcd 输出：dcba 思路：还是利用数组的reverse方法，先用字符串的split方法把字符串每个字母放到一个数组中。 12var str = readline();console.log(str.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)); 通过：运行时间11ms（超过64.72% 用JavaScript_V8提交的代码），占用内存5312KB（超过16.18%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ11","slug":"华为机试HJ11","date":"2021-10-22T12:02:57.000Z","updated":"2021-10-22T12:12:09.000Z","comments":true,"path":"2021/10/22/华为机试HJ11/","link":"","permalink":"http://example.com/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ11/","excerpt":"","text":"数字颠倒输入一个整数，将它以字符串的形式逆序输出，数字含有0则输出也有0 输入：整数，例：1516000 输出：0006151 思路：JavaScript数组有专门的reverse方法 12345678function reverseNum(str)&#123; str = str.split(&#x27;&#x27;).reverse(); console.log(str.join(&#x27;,&#x27;).replace(/,/g, &#x27;&#x27;));&#125;var line;while(line = readline())&#123; reverseNum(line);&#125; 通过：运行时间13ms（超过40.46% 用JavaScript_V8提交的代码），占用内存5228KB（超过22.27%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ10","slug":"华为机试HJ10","date":"2021-10-22T11:39:55.000Z","updated":"2021-10-22T11:59:42.000Z","comments":true,"path":"2021/10/22/华为机试HJ10/","link":"","permalink":"http://example.com/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ10/","excerpt":"","text":"字符个数统计一个函数，计算字符串中含有的不同字符的个数。字符在ASCII码0~127范围内。 输入：一行没有空格的字符串，例：abc 输出：不同字符个数，3 思路：利用去重中的一种思路，用数组的indexOf方法或includes方法。 123456789101112var arr = readline().split(&#x27;&#x27;);function computeTypes(arr)&#123; var count = []; for(let i=0;i&lt;arr.length;i++)&#123; var cur = arr[i]; if(!count.includes(cur))&#123; count.push(cur); &#125; &#125; return count.length;&#125;console.log(computeTypes(arr)); 通过：运行时间8ms（超过93.10%用JavaScript_V8提交的代码），占用内存5040KB（超过77.98%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ9","slug":"华为机试HJ9","date":"2021-10-22T10:56:54.000Z","updated":"2021-10-22T11:38:13.000Z","comments":true,"path":"2021/10/22/华为机试HJ9/","link":"","permalink":"http://example.com/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ9/","excerpt":"","text":"提取不重复的整数输入一个int型整数，按从右到左的阅读顺序，返回一个不含重复数字的新的整数（保证输入的整数最后一位不是0） 输入：例：9876673 输出：37689 思路：输入readline()得到的都是字符串，用字符串方法split(&#39;&#39;)得到数组[‘9’,’8’,’7’,’6’,’6’,’7’,’3’];用数组方法reverse颠倒顺序，得到数组[‘3’,’7’,’6’,’6’,’7’,’8’,’9’]；用parseInt把数组元素都转换成数字，然后用去重。 1234567891011var inPut = readline();function abstractNum(inPut)&#123; var arr = inPut.split(&#x27;&#x27;).reverse(); for(let i=0;i&lt;arr.length;i++)&#123; arr[i] = parseInt(arr[i]); &#125; arr = [...new Set(arr)]; return arr;&#125;var arr = abstractNum(inPut);console.log(arr.join(&#x27;,&#x27;).replace(/,/g, &#x27;&#x27;)); 通过：运行时间11ms（超过67.14%用JavaScript_V8提交的代码），占用内存5184KB（超过41.66%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ8","slug":"华为机试HJ8","date":"2021-10-22T07:18:36.000Z","updated":"2021-10-22T10:49:45.000Z","comments":true,"path":"2021/10/22/华为机试HJ8/","link":"","permalink":"http://example.com/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ8/","excerpt":"","text":"合并表记录数据表记录包含表索引和数值（正整数），将相同索引的数值进行求和，然后按key值升序进行输出。 输入：键值对个数，然后是成对的键值对 1234540 10 21 23 4 输出： 1230 31 23 4 思路：接收输入到数组arr中，得到arr为[‘4’,’0 1’,’0 2’,’1 2’,’3 4’]；然后根据arr[0]将后面几个输入按键、值的分类分别放入keyArr[0,0,1,3]，valueArr[1,2,2,4]；比较keyArr每个元素（索引值i）与后面的元素（索引值j），若相等让valueArr[i] = valueArr[i] + valueArr[j]，然后删除keyArr[j]；把keyArr和valueArr的值按索引顺序配对，放入一个对象obj中；把obj的键数组按大小排序，然后按排序后的顺序逐个输出键对应的值。 12345678910111213141516171819202122232425262728293031var arr = [];var line;while(line = readline())&#123; arr.push(line);&#125; //得到输入arr[&#x27;4&#x27;,&#x27;0 1&#x27;,&#x27;0 2&#x27;,&#x27;1 2&#x27;,&#x27;3 4&#x27;]var count = parseInt(arr[0]);var keyArr = [];var valueArr = [];for(let i=1;i&lt;=count;i++)&#123; //把键值对如&#x27;0 1&#x27;按空格分隔生成数组[&#x27;0&#x27;,&#x27;1&#x27;]，转成数字0、1存入相应数组 keyArr.push(parseInt(arr[i].split(&#x27; &#x27;)[0])); valueArr.push(parseInt(arr[i].split(&#x27; &#x27;)[1]));&#125;for(let i=0;i&lt;keyArr.length;i++)&#123; for(let j=i+1;j&lt;keyArr.length;j++)&#123; if(keyArr[i] === keyArr[j])&#123; valueArr[i] = valueArr[i] + valueArr[j]; keyArr.splice(j,1); valueArr.splice(j,1); j-- &#125; &#125;&#125;var obj = &#123;&#125;;for(let i=0;i&lt;keyArr.length;i++)&#123; obj[keyArr[i]] = valueArr[i];&#125;var sortedKey = Object.keys(obj).sort((a,b)=&gt;&#123;return parseInt(a)-parseInt(b);&#125;);for(let i=0;i&lt;sortedKey.length;i++)&#123; console.log(sortedKey[i] + &#x27; &#x27; + obj[sortedKey[i]]);&#125; 通过：运行时间10ms（超过78.42%用JavaScript_V8提交的代码），占用内存5424KB（超过21.69%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ7","slug":"华为机试HJ7","date":"2021-10-22T03:51:04.000Z","updated":"2021-10-22T07:17:23.000Z","comments":true,"path":"2021/10/22/华为机试HJ7/","link":"","permalink":"http://example.com/2021/10/22/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ7/","excerpt":"","text":"取近似值一个程序，接受一个正浮点数值，输出该数值的近似整数值，遵循四舍五入。 输入：正浮点数值，例：5.5 输出：近似整数值，6 思路：JavaScript有好几个转换数字的函数： 全局函数parseFloat解析参数返回其浮点数；全局函数parseInt解析一个字符串，返回指定基数的十进制整数；Number.prototype.toFixed用定点表示法格式化一个数值；Math.round返回一个数字四舍五入后最接近的整数；Math.floor向下取整；Math.ceil向上取整。 1console.log(Math.round(parseFloat(readline()))); 通过：运行时间12ms（超过43.52%用JavaScript_V8提交的代码），占用内存5080KB（超过47.49%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ6","slug":"华为机试HJ6","date":"2021-10-21T13:25:04.000Z","updated":"2021-10-22T07:15:49.000Z","comments":true,"path":"2021/10/21/华为机试HJ6/","link":"","permalink":"http://example.com/2021/10/21/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ6/","excerpt":"","text":"质数因子输入一个正整数，按从小到到的顺序输出它所有质因子（重复的也要列举），以空格隔开，最后一个数后面也要有空格。 质因子：能整除给定正整数的质数。 输入：一个long型整数，例：180 输出：2 2 3 3 5 思路：给定正整数num，给定最小质因子prime=2，先一直除以2，能被2整除则2是其质因子，不能被2整除了++prime即prime=3了，再一直除以3……重复，直到prime² &gt; num；最后如果不为1，则最后剩下的一个质数也是其质因子。因为要求最后一个数后面也有空格，所以在存放质因子的数组最后加个空元素。 显示数组console.log(arr)是2,2,3,3,5的数组格式，所以用arr.join(&#39;,&#39;)把它转成’2,2,3,3,5’字符串格式，然后用字符串的replace(/,/g, &#39; &#39;)把逗号换成空格。 12345678910111213141516171819var num = parseInt(readline());var arr = [];function computePrime(num)&#123; var prime = 2; var tep = num; while(prime &lt; tep &amp;&amp; prime*prime &lt;= tep)&#123; while(num % prime === 0)&#123; arr.push(prime); num = num / prime; &#125; ++prime; &#125; if(num !== 1)&#123; arr.push(num); &#125; arr.push(&#x27;,&#x27;); return arr;&#125;console.log(computePrime(num).join(&#x27;,&#x27;).replace(/,/g, &#x27; &#x27;)); 通过：运行时间14ms（超过49.17%用JavaScript_V8提交的代码），占用内存5480KB（超过49.17%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ5","slug":"华为机试HJ5","date":"2021-10-21T13:12:42.000Z","updated":"2021-10-21T13:21:49.000Z","comments":true,"path":"2021/10/21/华为机试HJ5/","link":"","permalink":"http://example.com/2021/10/21/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ5/","excerpt":"","text":"进制转换写一个程序，接受一个十六进制数，输出该数的十进制表示 输入：一个十六进制的数值字符串 输出：数值的十进制表示 思路：这个题对JavaScript来说真的很简单，因为有一个专门的parseInt(string, radix)解析一个指定基数的字符串，返回其十进制表示。 12345678var arr = [];var line;while(line = readline())&#123; arr.push(line);&#125;for(let i=0;i&lt;arr.length;i++)&#123; console.log(parseInt(arr[i], 16));&#125; 通过：运行时间14ms（超过25.67%用JavaScript_V8提交的代码），占用内存5000KB（超过81.94%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ4","slug":"华为机试HJ4","date":"2021-10-21T11:25:54.000Z","updated":"2021-10-21T13:00:53.000Z","comments":true,"path":"2021/10/21/华为机试HJ4/","link":"","permalink":"http://example.com/2021/10/21/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ4/","excerpt":"","text":"字符串分隔连续输入字符串（长度&lt;100），按长度为8拆分每个字符串并输出。长度不是9整倍数的字符串后面补数字0，空字符串不处理。 输入： 12abc123456789 输出： 123abc000001234567890000000 思路：先把输入按空格分成数组里的一个个元素，然后看每个元素的长度，小于8就补0，大于8就拆分（用String.prototype.slice()） 1234567891011121314151617181920212223242526272829303132333435363738var arr = [];var line;while(line = readline())&#123; arr.push(line);&#125;function divide(arr)&#123; var newArr = []; for(let i=0;i&lt;arr.length;i++)&#123; var cur = arr[i]; var len = cur.length; var times = parseInt(len / 8); var left = len % 8; if(len === 8)&#123; newArr.push(cur); &#125; else if(len &lt; 8)&#123; for(let j=0;j&lt;(8-len);j++)&#123; cur += &#x27;0&#x27;; &#125; newArr.push(cur); &#125; else if(len &gt; 8)&#123; for(let j=0;j&lt;times;j++)&#123; newArr.push(cur.slice(j*8, (j+1)*8)); &#125; if(left)&#123; var last = cur.slice(8*times); for(let j=0;j&lt;(8-left);j++)&#123; last += &#x27;0&#x27;; &#125; newArr.push(last); &#125; &#125; &#125; return newArr;&#125;var result = divide(arr);for(let i=0;i&lt;result.length;i++)&#123; console.log(result[i]);&#125; 通过：运行时间12ms（超过51.09%用JavaScript_V8提交的代码），占用内存5192KB（超过30.98%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ3","slug":"华为机试HJ3","date":"2021-10-20T10:53:21.000Z","updated":"2021-10-21T10:46:20.000Z","comments":true,"path":"2021/10/20/华为机试HJ3/","link":"","permalink":"http://example.com/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ3/","excerpt":"","text":"明明的随机数N个1到1000之间的随机整数（N ≤ 1000），去掉重复的数字，然后从小到大排序。 输入：多行数据，每行一个随机整数，例： 12343221 第一行的3表示N=3，生成了三个随机数即2，2，1 输出：多行数据，去重后从小到大每行一个数字 思路：JavaScript排列很简单，数组有专门用于排列的sort()函数，重点在去重，JavaScript的去重也是面试的高频题目，所以看了一些网上的总结，自己都敲了一遍。 12345678910111213141516171819202122232425262728293031var line;var arr = [];var newArr;var count = 0;function distinct(arr)&#123; var newArr = arr.sort((a,b)=&gt;&#123; return a - b; &#125;); for(let i=0;i&lt;newArr.length;i++)&#123; if(newArr[i] === newArr[i+1])&#123; newArr.splice(i+1,1); i--; &#125; &#125; return newArr;&#125;while(line = readline())&#123; if(count == 0)&#123; count = parseInt(line); for(let i = 0; i &lt; count; i++)&#123; arr.push(parseInt(readline())) &#125; newArr = distinct(arr); for(let i=0;i&lt;newArr.length;i++)&#123; console.log(newArr[i]); &#125; &#125; count = 0; arr = [];&#125; 通过：运行时间16ms（超过29.78%用JavaScript_V8提交的代码），占用内存5388KB（超过22.77%用JavaScript_V8提交的代码） 1.用ES6的新数据结构SetSet类似于数组，但是成员的值不允许重复，可以用new Set()生成一个Set数据结构。 可以接收一个数组作参数生成Set数据结构new Set(array)，然后用...三点运算符把Set转换成数组，就能将数组去重了（数组换成字符串也可以用）。 123function distinct(arr)&#123; return [...new Set(arr)];&#125; 或者 123function distinct(arr)&#123; return Array.from(new Set(arr));&#125; 2.Object键值对利用对象属性名不能重复的特性，创建一个空对象，把数组每一项放进去当属性名，新的一项放进去时检查，如果该属性名已存在，说明重复了，就把数组里该项删除。 1234567891011121314function distinct(arr)&#123; var obj = &#123;&#125;; for(let i=0;i&lt;arr.length;i++)&#123; let cur = arr[i]; if(obj[cur])&#123; //对象中已有该属性 arr[i] = arr[arr.length - 1]; // 开始用的splice函数，结果会造成数组塌陷 arr.length--; // 所以把最后一项给当前项，然后删除最后一项 i--; //该项换了新值，又要检查一次 continue; &#125; obj[cur] = cur; &#125; return arr; &#125; 3.用indexOf()函数indexOf()返回在数组中找到的一个给定元素的第一个索引，不存在则返回-1。创建一个新的空数组，检查原数组的每一项在新数组中的索引，索引为-1即不存在，则把该项放入新数组。 12345678910function distinct(arr)&#123; var newArr = []; for(let i=0;i&lt;arr.length;i++)&#123; var cur = arr[i]; if(newArr.indexOf(cur) == -1)&#123; newArr.push(cur); &#125; &#125; return newArr; &#125; indexOf()可以结合filter使用。 Array.prototype.filter(callback(element, index, array))创建一个新数组，新数组的成员是原数组成员中通过了测试函数callback的部分。 12345function distinct(arr)&#123; return arr.filter(function(ele, index, array)&#123; return arr.indexOf(ele) === index; &#125;);&#125; 4.用sort()方法先用sort()给数组排序，然后比较每个数字和后面相邻的成员是否相等，相等则删除后一个元素。 123456789101112function distinct(arr)&#123; var newArr = arr.sort((a,b)=&gt;&#123; return a-b; &#125;); for(let i=0;i&lt;newArr.length;i++)&#123; if(newArr[i] === newArr[i+1])&#123; newArr.splice(i+1,1); i--; &#125; &#125; return newArr;&#125; 5.用includes方法Array.prototype.includes()判断一个数组是否包含一个指定的值，包含返回true，否则返回false。 1234567891011function distinct(arr)&#123; var newArr = []; var len = arr.length; for (let i=0;i&lt;len;i++)&#123; var cur = arr[i]; if(!newArr.includes(cur))&#123; newArr.push(arr[i]); &#125; &#125; return newArr;&#125; 6.双层循环用splice()把每个元素跟它后面的所有元素比较，有相等的就删除后面那个重复的。 1234567891011function distinct(arr)&#123; for(let i=0;i&lt;arr.length;i++)&#123; for(let j=i+1;j&lt;arr.length;j++)&#123; if(arr[i] === arr[j])&#123; arr.splice(j,1); j--; &#125; &#125; &#125; return arr;&#125; 7.用reduce()方法Array.prototype.reduce(callback(accumulator, currentValue, index, array), initialValue) 对数组中的每个元素执行callback，将其结果汇总为单个返回值。 结合了方法5的includes方法 12345function distinct(arr)&#123; return arr.reduce((prev, next)=&gt;&#123; return prev.includes(next) ? prev : [...prev, next]; &#125;, []);&#125;","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ2","slug":"华为机试HJ2","date":"2021-10-20T07:42:18.000Z","updated":"2021-10-20T08:12:07.000Z","comments":true,"path":"2021/10/20/华为机试HJ2/","link":"","permalink":"http://example.com/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ2/","excerpt":"","text":"计算字符个数一个程序，接受一个字符串（字母、数字和空格组成）和一个字母，输出字符串中该字母出现的次数，不区分大小写，长度小于500。 输入：第一行输入一个字符串，第二行输入一个字母 输出：字符串中含有该字母的个数 思路1：直接循环一遍字符串，字符串中有该字母就加1。因为不区分大小写，所以先把字符串和字母都变成大写或小写。 12345678910111213var str = readline().toLowerCase();var letter = readline().toLowerCase();function computeCount(str, letter)&#123; var len = str.length; var count = 0; for(let i = 0; i &lt; len; i++)&#123; if(str[i] === letter)&#123; count += 1; &#125; &#125; return count;&#125;console.log(computeCount(str, letter)); 通过：运行时间13ms（超过37.75%用JavaScript_V8提交的代码），占用内存5044KB（超过66.35%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试HJ1","slug":"华为机试HJ1","date":"2021-10-20T06:24:32.000Z","updated":"2021-10-20T07:35:42.000Z","comments":true,"path":"2021/10/20/华为机试HJ1/","link":"","permalink":"http://example.com/2021/10/20/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95HJ1/","excerpt":"","text":"字符串最后一个单词的长度计算字符串最后一个单词的长度，单词以空格隔开，字符串长度小于5000（字符串末尾不以空格为结尾） 输入：一行字符串，非空，长度小于5000 输出：一个整数，表示输入字符串最后一个单词的长度 思路1：把字符串的每个单词转成数组的一个成员，再看最后一个成员的length。 1234567var str = readline();function checkLen(str)&#123; var arr = str.split(&#x27; &#x27;); var arrLen = arr.length; return arr[arrLen - 1].length;&#125;console.log(checkLen(str)); 通过：运行时间12ms（超过47.20%用JavaScript_V8提交的代码），占用内存5128KB（超过22.23%用JavaScript_V8提交的代码） 思路2：字符串也有length，从最后一个字母开始累加，直到遇到空格就停止，得到最后一个字符串的长度。 1234567891011var str = readline();var len = str.length; //得到字符串长度var wordLen = 0; //最后一个单词的长度从0开始for(let i = len-1; i &gt;= 0; i--)&#123; if(str[i] !== &#x27; &#x27;)&#123; wordLen += 1; //从最后一个字母开始，不为空格就加1 &#125; else&#123; break; //遇到空格，最后一个单词已结束 &#125;&#125;console.log(wordLen); 通过：运行时间11ms（超过58.78%用JavaScript_V8提交的代码），占用内存5084KB（超过50.26%用JavaScript_V8提交的代码）","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"华为机试001_输入输出","slug":"华为机试001-输入输出","date":"2021-10-19T11:55:03.000Z","updated":"2021-10-19T14:02:04.000Z","comments":true,"path":"2021/10/19/华为机试001-输入输出/","link":"","permalink":"http://example.com/2021/10/19/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95001-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/","excerpt":"","text":"牛客网上华为机试的界面什么都没有，直接给个题目和输入输出描述，一开始不知道怎么下手，所以在掘金上搜了相关文章，总算是知道怎么做题了。 JavaScript V8输入输出单行输入V8引擎用readline()接收输入的每一行，一行的字符串不能超过1024个，否则会报错。 多行输入一个readline()接收一行，有几行输入就要写几个readline()，固定行数输入可以用for循环，不固定行数输入可以用while循环。 输出输出用print()或console.log()都可以。 JavaScript Node单行输入12345678910const readline = require(&#x27;readline&#x27;);const rl = readline.createInterface(&#123; input: process.stdin, output: process.stdout&#125;);rl.on(&#x27;line&#x27;, function(data)&#123; var result = data.split(&#x27; &#x27;); //获取第一行的内容，存为数组 console.log(result);&#125;)","categories":[{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"}],"tags":[{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"}]},{"title":"Markdown学习记录","slug":"Markdown学习记录","date":"2021-10-19T08:50:37.000Z","updated":"2021-10-19T12:12:00.000Z","comments":true,"path":"2021/10/19/Markdown学习记录/","link":"","permalink":"http://example.com/2021/10/19/Markdown%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/","excerpt":"","text":"Markdown是一种轻量级标记语言，允许人们使用易读易写的纯文本格式编写文档。 Markdown编写的文档后缀为.md或.markdown 使用=的一级标题使用-的二级标题使用#的一级标题（总共六级）换行：两个以上空格+回车，或者一个空行 用”*“斜体文本 用”_“斜体文本 用”**“粗体文本 用”__“粗体文本 用”___“粗斜体文本 分隔线： *** * * * - - - -------删除线”~~“ 下划线用HTML标签u实现 [^脚注用[^文字]实现] 无序列表用*或+或-： 第一项 第二项 第三项 有序列表用数字加.： 1.第一项2.第二项3.第三项 区块引用”&gt;”： 这句话是引用自…… 代码： 一个函数或片段用反引号包起来：console.log() 函数 三个反引号包裹一段代码并可以指定语言： 123function()&#123; console.log(&#x27;Hello World&#x27;);&#125; 链接：中括号链接名称，小括号链接地址，或者尖括号链接地址 百度地址 https://www.baidu.com 图片：![alt 属性文本](图片地址 ”可选标题“) 表格：用|分隔单元格，用-分隔表头和其他行 表头 表头 单元格 单元格 单元格 单元格","categories":[{"name":"标记语言","slug":"标记语言","permalink":"http://example.com/categories/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"}]}],"categories":[{"name":"考研专业课预备","slug":"考研专业课预备","permalink":"http://example.com/categories/%E8%80%83%E7%A0%94%E4%B8%93%E4%B8%9A%E8%AF%BE%E9%A2%84%E5%A4%87/"},{"name":"考研","slug":"考研","permalink":"http://example.com/categories/%E8%80%83%E7%A0%94/"},{"name":"HTTP协议","slug":"HTTP协议","permalink":"http://example.com/categories/HTTP%E5%8D%8F%E8%AE%AE/"},{"name":"每天leetcode刷题","slug":"每天leetcode刷题","permalink":"http://example.com/categories/%E6%AF%8F%E5%A4%A9leetcode%E5%88%B7%E9%A2%98/"},{"name":"面试刷题","slug":"面试刷题","permalink":"http://example.com/categories/%E9%9D%A2%E8%AF%95%E5%88%B7%E9%A2%98/"},{"name":"标记语言","slug":"标记语言","permalink":"http://example.com/categories/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"http://example.com/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"考研资料","slug":"考研资料","permalink":"http://example.com/tags/%E8%80%83%E7%A0%94%E8%B5%84%E6%96%99/"},{"name":"视频课程笔记","slug":"视频课程笔记","permalink":"http://example.com/tags/%E8%A7%86%E9%A2%91%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/"},{"name":"leetcode","slug":"leetcode","permalink":"http://example.com/tags/leetcode/"},{"name":"华为机试","slug":"华为机试","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95/"},{"name":"华为机试 搁置","slug":"华为机试-搁置","permalink":"http://example.com/tags/%E5%8D%8E%E4%B8%BA%E6%9C%BA%E8%AF%95-%E6%90%81%E7%BD%AE/"},{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"}]}